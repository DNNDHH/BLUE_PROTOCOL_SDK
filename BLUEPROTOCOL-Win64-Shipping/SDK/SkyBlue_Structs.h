#pragma once

/**
 * Name: BLUEPROTOCOL-Win64-Shipping
 * Version: 1.6.0
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum SkyBlue.ESBAchievementAdventureBoardCompleteStatus
	 */
	enum class ESBAchievementAdventureBoardCompleteStatus : uint8_t
	{
		None            = 0,
		Rewarded        = 1,
		NextChallenging = 2,
		AllAcquired     = 3,
		Num             = 4,
		MAX             = 5
	};

	/**
	 * Enum SkyBlue.ESBWeaponPerkRarity
	 */
	enum class ESBWeaponPerkRarity : uint8_t
	{
		Common    = 0,
		Rare      = 1,
		Legendary = 2,
		None      = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.EItemType
	 */
	enum class EItemType : uint8_t
	{
		ItemType_Invalid      = 0,
		ItemType_Item         = 1,
		ItemType_Weapon       = 2,
		ItemType_Costume      = 3,
		ItemType_Imagine      = 4,
		ItemType_MountImagine = 5,
		ItemType_Ornament     = 6,
		ItemType_Num          = 7,
		ItemType_MAX          = 8
	};

	/**
	 * Enum SkyBlue.ESkillTreeAbilityType
	 */
	enum class ESkillTreeAbilityType : uint8_t
	{
		None  = 0,
		Base  = 1,
		Alpha = 2,
		Beta  = 3,
		Camma = 4,
		MAX   = 5
	};

	/**
	 * Enum SkyBlue.ESBBanType
	 */
	enum class ESBBanType : uint8_t
	{
		BAN_TYPE_NONE  = 0,
		BAN_TYPE_CHAT  = 1,
		BAN_TYPE_LOGIN = 2,
		BAN_TYPE_MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBClassType
	 */
	enum class ESBClassType : uint8_t
	{
		None    = 0,
		P001    = 1,
		P002    = 2,
		P003    = 3,
		P004    = 4,
		P005    = 5,
		P006    = 6,
		P007    = 7,
		P008    = 8,
		P009    = 9,
		P010    = 10,
		P011    = 11,
		P012    = 12,
		P013    = 13,
		P014    = 14,
		P015    = 15,
		P016    = 16,
		P017    = 17,
		P018    = 18,
		P019    = 19,
		P020    = 20,
		P021    = 21,
		P022    = 22,
		Max     = 23,
		AllType = 24
	};

	/**
	 * Enum SkyBlue.EMapPinType
	 */
	enum class EMapPinType : uint8_t
	{
		MapPin_Type1  = 0,
		MapPin_Type2  = 1,
		MapPin_Type3  = 2,
		MapPin_Type4  = 3,
		MapPin_Type5  = 4,
		MapPin_Eraser = 5,
		MapPin_Max    = 6
	};

	/**
	 * Enum SkyBlue.ESBCharacterStepListType
	 */
	enum class ESBCharacterStepListType : uint8_t
	{
		Quest          = 0,
		WishList       = 1,
		AdventureBoard = 2,
		MAX            = 3
	};

	/**
	 * Enum SkyBlue.EShortcutType
	 */
	enum class EShortcutType : uint8_t
	{
		None        = 0,
		OwnItem     = 1,
		Imagine     = 2,
		Emotion     = 3,
		Stamp       = 4,
		Supply      = 5,
		FixedPhrase = 6,
		Command     = 7,
		Warp        = 8,
		MAX         = 9
	};

	/**
	 * Enum SkyBlue.ESBPlayerArtsType
	 */
	enum class ESBPlayerArtsType : uint8_t
	{
		Active        = 0,
		Passive       = 1,
		PassiveCommon = 2,
		Max           = 3
	};

	/**
	 * Enum SkyBlue.ECharaPartsLocationGroup
	 */
	enum class ECharaPartsLocationGroup : uint8_t
	{
		None                          = 0,
		All                           = 1,
		BodyPartsAndBodyComponent     = 2,
		BodyPartsWithoutBodyComponent = 3,
		FacePartsAndFaceComponent     = 4,
		FacePartsWithoutFaceComponent = 5,
		AccessoryComponent            = 6,
		UnderwearComponent            = 7,
		SkeletonMergeComponent        = 8,
		MAX                           = 9
	};

	/**
	 * Enum SkyBlue.ESBFacialType
	 */
	enum class ESBFacialType : uint8_t
	{
		Default       = 0,
		Laugh         = 1,
		Anger         = 2,
		Sad           = 3,
		Happy         = 4,
		Hopeless      = 5,
		Troubled      = 6,
		Doubt         = 7,
		Tease         = 8,
		Endure        = 9,
		Hustle        = 10,
		Hurt          = 11,
		Pinched       = 12,
		Rushed        = 13,
		Surprised     = 14,
		Hate          = 15,
		Flattering    = 16,
		Fear          = 17,
		Serious       = 18,
		Smile         = 19,
		Plot          = 20,
		Attack        = 21,
		Damage        = 22,
		Dead          = 23,
		Special       = 24,
		EX1           = 25,
		EX2           = 26,
		EX3           = 27,
		EX4           = 28,
		EX5           = 29,
		EX6           = 30,
		EX7           = 31,
		EX8           = 32,
		EX9           = 33,
		EX10          = 34,
		EX11          = 35,
		EX12          = 36,
		EX13          = 37,
		EX14          = 38,
		EX15          = 39,
		CreationSmile = 40,
		CreationAnger = 41,
		CreationSad   = 42,
		CreationPose1 = 43,
		CreationPose2 = 44,
		CreationPose3 = 45,
		CreationPose4 = 46,
		CreationPose5 = 47,
		Max           = 48
	};

	/**
	 * Enum SkyBlue.ESBBoneScaleSliderIndex
	 */
	enum class ESBBoneScaleSliderIndex : uint8_t
	{
		Height = 0,
		Wight  = 1,
		Bust   = 2,
		Max    = 3
	};

	/**
	 * Enum SkyBlue.ESBCharacterGender
	 */
	enum class ESBCharacterGender : uint8_t
	{
		Male    = 0,
		Female  = 1,
		Default = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBIrisType
	 */
	enum class ESBIrisType : uint8_t
	{
		Left  = 0,
		Right = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.ENpcJob
	 */
	enum class ENpcJob : uint8_t
	{
		Common       = 0,
		Ordinary     = 1,
		Guide        = 2,
		Adventurer   = 3,
		Noble        = 4,
		Farmer       = 5,
		Rogue        = 6,
		Traveller    = 7,
		Merchant     = 8,
		Craftsman    = 9,
		Guard        = 10,
		Priest       = 11,
		Sister       = 12,
		Sailor       = 13,
		Cook         = 14,
		Artist       = 15,
		Bandman      = 16,
		Maid         = 17,
		Butler       = 18,
		Soothsayer   = 19,
		Entertainer  = 20,
		Scientist    = 21,
		Exchange     = 22,
		Brigade      = 23,
		Sokoban      = 24,
		ItemStore    = 25,
		GeneralStore = 26,
		WeaponStore  = 27,
		ImagineStore = 28,
		BeautySalon  = 29,
		Dyers        = 30,
		Arena        = 31,
		CoinTei      = 32,
		ClassChange  = 33,
		Liquid       = 34,
		ChallengeBox = 35,
		Enemy        = 36,
		Civilian     = 37,
		Drifter      = 38,
		Worker       = 39,
		Supporter    = 40,
		Expedition   = 41,
		MAX          = 42
	};

	/**
	 * Enum SkyBlue.FSBCharaCreateMakeupIndex
	 */
	enum class EFSBCharaCreateMakeupIndex : uint8_t
	{
		FSBCharaCreateMakeupIndexCondition                     = 0,
		FSBCharaCreateMakeupIndexLip                           = 1,
		FSBCharaCreateMakeupIndexPaint1                        = 2,
		FSBCharaCreateMakeupIndexPaint2                        = 3,
		FSBCharaCreateMakeupIndexFSBCharaCreateMakeupIndex_MAX = 4
	};

	/**
	 * Enum SkyBlue.ECharaPartsRegion
	 */
	enum class ECharaPartsRegion : uint8_t
	{
		Common  = 0,
		R01     = 1,
		R02     = 2,
		R03     = 3,
		R04     = 4,
		R05     = 5,
		R06     = 6,
		MAX     = 7,
		Default = 8
	};

	/**
	 * Enum SkyBlue.ESBCharaCreateColorHue
	 */
	enum class ESBCharaCreateColorHue : uint8_t
	{
		Red             = 0,
		YellowishRed    = 1,
		ReddishOrange   = 2,
		YellowishOrange = 3,
		Yellow          = 4,
		Blond           = 5,
		YellowGreen     = 6,
		Green           = 7,
		BlueGreen       = 8,
		Blue            = 9,
		Violet          = 10,
		Purple          = 11,
		RedPurple       = 12,
		PurplishRed     = 13,
		Achromatic      = 14,
		MAX             = 15
	};

	/**
	 * Enum SkyBlue.ESBLipSyncType
	 */
	enum class ESBLipSyncType : uint8_t
	{
		Default  = 0,
		Loop     = 1,
		Close    = 2,
		Open     = 3,
		HalfOpen = 4,
		MAX      = 5
	};

	/**
	 * Enum SkyBlue.ESBCustomTextureType
	 */
	enum class ESBCustomTextureType : uint8_t
	{
		None          = 0,
		Eyelash       = 1,
		Eye           = 2,
		HairGradation = 3,
		MAX           = 4
	};

	/**
	 * Enum SkyBlue.FSBReplaceMaterialBaseType
	 */
	enum class EFSBReplaceMaterialBaseType : uint8_t
	{
		FSBReplaceMaterialBaseTypeNone    = 0,
		FSBReplaceMaterialBaseTypeImagine = 1,
		FSBReplaceMaterialBaseTypeMax     = 2
	};

	/**
	 * Enum SkyBlue.ESBAestheShopCharaPartsAndParamEditType
	 */
	enum class ESBAestheShopCharaPartsAndParamEditType : uint8_t
	{
		CharaCreateOnly = 0,
		AestheShopOnly  = 1,
		BothAvailable   = 2,
		Max             = 3
	};

	/**
	 * Enum SkyBlue.ESBBattleStatusResistType
	 */
	enum class ESBBattleStatusResistType : uint8_t
	{
		None                             = 0,
		Stun                             = 1,
		Sleep                            = 2,
		Poison                           = 3,
		FixTarget                        = 4,
		Fear                             = 5,
		Dark                             = 6,
		Restraint                        = 7,
		Paralyze                         = 8,
		CannotSkill                      = 9,
		StaminaZero                      = 10,
		CannotItem                       = 11,
		Nappo                            = 12,
		RecoverAttackerWhenRecieveDamage = 13,
		GiveDamageDown                   = 14,
		ReceiveDamageUp                  = 15,
		ChargeSpeedDown                  = 16,
		IntervalSpeedDown                = 17,
		MoveSpeedDown                    = 18,
		StaminaRecoveryDown              = 19,
		FlashStun                        = 20,
		Bleeding                         = 21,
		CorePoison                       = 22,
		SpeakerStun                      = 23,
		Max                              = 24
	};

	/**
	 * Enum SkyBlue.ESBAbilityRequestSource
	 */
	enum class ESBAbilityRequestSource : uint8_t
	{
		None              = 0,
		WeaponAbility     = 1,
		WeaponTag         = 2,
		WeaponMainAbility = 3,
		WeaponSubAbility  = 4,
		Imagine1          = 5,
		Imagine2          = 6,
		Imagine3          = 7,
		Imagine4          = 8,
		Imagine5          = 9,
		BattleAbility     = 10,
		Item              = 11,
		BattleImagine1    = 12,
		BattleImagine2    = 13,
		MAX               = 14
	};

	/**
	 * Enum SkyBlue.ESBStatusAilmentIconCombineCategory
	 */
	enum class ESBStatusAilmentIconCombineCategory : uint8_t
	{
		None      = 0,
		RaiseBeat = 1,
		MAX       = 2
	};

	/**
	 * Enum SkyBlue.ESBStatusAilmentIconType
	 */
	enum class ESBStatusAilmentIconType : uint8_t
	{
		None                       = 0,
		FireLv1                    = 1,
		FireLv2                    = 2,
		FireLv3                    = 3,
		IceLv1                     = 4,
		IceLv2                     = 5,
		IceLv3                     = 6,
		ThunderLv1                 = 7,
		ThunderLv2                 = 8,
		ThunderLv3                 = 9,
		EarthLv1                   = 10,
		EarthLv2                   = 11,
		EarthLv3                   = 12,
		LightLv1                   = 13,
		LightLv2                   = 14,
		LightLv3                   = 15,
		DarknessLv1                = 16,
		DarknessLv2                = 17,
		DarknessLv3                = 18,
		Stun                       = 19,
		Sleep                      = 20,
		Poison                     = 21,
		FixTarget                  = 22,
		Fear                       = 23,
		Blind                      = 24,
		NoSkill                    = 25,
		Stamina0                   = 26,
		NoItem                     = 27,
		Transform                  = 28,
		Restraint                  = 29,
		Paralyze                   = 30,
		Drained                    = 31,
		Weakness                   = 32,
		Invincible                 = 33,
		IncreaseGiveDamage         = 34,
		DecreaseGiveDamage         = 35,
		IncreaseReceiveDamage      = 36,
		DecreaseReceiveDamage      = 37,
		Drain                      = 38,
		SuperArmor                 = 39,
		HPRegenerate               = 40,
		MPRegenerate               = 41,
		RapidChargeSpeed           = 42,
		SlowChargeSpeed            = 43,
		ExpansionSkillRecastTime   = 44,
		ReduceSkillRecastTime      = 45,
		RepidMoveSpeed             = 46,
		SlowMoveSpeed              = 47,
		Protection                 = 48,
		FollowBullet               = 49,
		FireAttackPowerUp          = 50,
		IceAttackPowerUp           = 51,
		ThunderAttackPowerUp       = 52,
		EarthAttackPowerUp         = 53,
		LightAttackPowerUp         = 54,
		DarknessAttackPowerUp      = 55,
		FireAttackPowerDown        = 56,
		IceAttackPowerDown         = 57,
		ThunderAttackPowerDown     = 58,
		EarthAttackPowerDown       = 59,
		LightAttackPowerDown       = 60,
		DarknessAttackPowerDown    = 61,
		FireResistUp               = 62,
		IceResistUp                = 63,
		ThunderResistUp            = 64,
		EarthResistUp              = 65,
		LightResistUp              = 66,
		DarknessResistUp           = 67,
		FireResistDown             = 68,
		IceResistDown              = 69,
		ThunderResistDown          = 70,
		EarthResistDown            = 71,
		LightResistDown            = 72,
		DarknessResistDown         = 73,
		StaminaRecoverySpeedUp     = 74,
		StaminaRecoverySpeedDown   = 75,
		InvalidReceiveAttackOnce   = 76,
		ForceCritical              = 77,
		Taunt                      = 78,
		dummy                      = 79,
		StoneBody                  = 80,
		WeaknessStance             = 81,
		StaminaReduceDown          = 82,
		InvalidGeneralBadCondition = 83,
		Player_ThrowingStyle       = 84,
		CriticalRateUp             = 85,
		ScoreRateUp                = 86,
		BerserkMode                = 87,
		HunterSpirit               = 88,
		HealBullet                 = 89,
		PrepareStyle               = 90,
		Hyoui                      = 91,
		dummy01                    = 92,
		dummy02                    = 93,
		HatTrick                   = 94,
		VoltageRegen               = 95,
		VoltageUp                  = 96,
		AmpDmgDealtUp              = 97,
		HealedUp                   = 98,
		ResurrectionSpeedUp        = 99,
		ScapeArmor                 = 100,
		Laceration                 = 101,
		AutoHPHeal                 = 102,
		DownTime                   = 103,
		BulletSave                 = 104,
		Sentinel                   = 105,
		MAX                        = 106
	};

	/**
	 * Enum SkyBlue.ESBAbilityFlags
	 */
	enum class ESBAbilityFlags : uint8_t
	{
		None                      = 0,
		Stun                      = 1,
		Freeze                    = 2,
		Sleep                     = 3,
		Fear                      = 4,
		Restraint                 = 5,
		DeathPenalty              = 6,
		Player_CannotMove         = 7,
		Player_CannotDash         = 8,
		Player_CannotJump         = 9,
		Player_CannotBattleAction = 10,
		Player_CannotSkill        = 11,
		Player_CannotInteraction  = 12,
		Player_CannotItem         = 13,
		Player_StaminaZero        = 14,
		Player_TransformNappo     = 15,
		AllyAttack_AttackScale    = 16,
		CurableByInteraction      = 17,
		StatusAilmentHP           = 18,
		MGC_MPRegen               = 19,
		SMA_PowerReload           = 20,
		SMA_StoneBody             = 21,
		SMA_HealBullet            = 22,
		BackHitTrigger            = 23,
		Dummy                     = 24,
		Dummy01                   = 25,
		RBL_GlitterMode           = 26,
		Dummy02                   = 27,
		Max                       = 28
	};

	/**
	 * Enum SkyBlue.ESBBattleEffectiveGroup
	 */
	enum class ESBBattleEffectiveGroup : uint8_t
	{
		None                      = 0,
		dum1                      = 1,
		dum2                      = 2,
		dum3                      = 3,
		dum4                      = 4,
		dum5                      = 5,
		dum6                      = 6,
		dum7                      = 7,
		ElementResistDown         = 8,
		GraceofForest             = 9,
		GlitterGaugeBuff          = 10,
		dum11                     = 11,
		LancerMark                = 12,
		PowerReload               = 13,
		StoneBody                 = 14,
		HealBullet                = 15,
		WeaponPerk                = 16,
		System                    = 17,
		Fire                      = 18,
		Ice                       = 19,
		Earth                     = 20,
		dum21                     = 21,
		dum22                     = 22,
		Thunder                   = 23,
		Light                     = 24,
		Light_HPRegen             = 25,
		Darkness                  = 26,
		Paralysis                 = 27,
		Sleep                     = 28,
		Fear                      = 29,
		FixTarget                 = 30,
		Blind                     = 31,
		DotDamageIce              = 32,
		dum33                     = 33,
		DotDamagePoison           = 34,
		NoBattleHeal              = 35,
		Drain                     = 36,
		Transform                 = 37,
		Frailness                 = 38,
		Stun                      = 39,
		Restraint                 = 40,
		ExtendNegativeStatus      = 41,
		StaminaZero               = 42,
		CannotSkill               = 43,
		TakeDrain                 = 44,
		CannotItem                = 45,
		dum46                     = 46,
		StunNoAccumulation        = 47,
		HPLoss                    = 48,
		VoltageUpBuff             = 49,
		RecoveryHPBelowHPRate     = 50,
		LancerMarkFinish          = 51,
		FlashStun                 = 52,
		SandArea                  = 53,
		dum54                     = 54,
		Bleeding                  = 55,
		SpeakerStun               = 56,
		BImagineEinrainScapeArmor = 57,
		Max                       = 58
	};

	/**
	 * Enum SkyBlue.ESBAbilityOnlyPlayerStatus
	 */
	enum class ESBAbilityOnlyPlayerStatus : uint8_t
	{
		CannotMove             = 0,
		CannotDash             = 1,
		CannotJump             = 2,
		CannotBattleAction     = 3,
		CannotSkill            = 4,
		CannotInteraction      = 5,
		CannotItem             = 6,
		StaminaZero            = 7,
		TransformNappo         = 8,
		CanTSkillToTSkill      = 9,
		FixSpecialSkillRecast  = 10,
		SheatheJump            = 11,
		Dummy                  = 12,
		HyouiImagineCommon     = 13,
		HyouiImagineCommon01   = 14,
		HyouiImagineCommon02   = 15,
		BSK_FireUp             = 16,
		BLS_HatTrick           = 17,
		BSK_SelfBloodAxe       = 18,
		BSK_BerserkMode        = 19,
		MGC_ThunderCloud       = 20,
		MGC_ElementAmp         = 21,
		Dummy01                = 22,
		RBL_Protection         = 23,
		RBL_Taunt              = 24,
		RBL_GlitterMode        = 25,
		RBL_GlitterGaugeBuff   = 26,
		RBL_GlitterGaugeBuff01 = 27,
		RBL_GlitterGaugeBuff02 = 28,
		RBL_GlitterGaugeBuff03 = 29,
		RBL_GreatGuard         = 30,
		SMA_PowerReload        = 31,
		SMA_StoneBody          = 32,
		SMA_HealBullet         = 33,
		SMA_KeepPosture        = 34,
		LAN_PrepareStyle       = 35,
		LAN_ThrowingStyle      = 36,
		LAN_WeaknessStance     = 37,
		PFM_FeverTime          = 38,
		NUM                    = 39,
		MAX                    = 40
	};

	/**
	 * Enum SkyBlue.ESBBattleEffective
	 */
	enum class ESBBattleEffective : uint8_t
	{
		None                               = 0,
		Dummy                              = 1,
		RecoveryHPUp                       = 2,
		HPHeal                             = 3,
		DotDamage                          = 4,
		DotHeal                            = 5,
		Regenerate                         = 6,
		HPHealBelowHPRate                  = 7,
		ProjectileOnTimes                  = 8,
		Invincible                         = 9,
		Paralyze                           = 10,
		SuperArmor                         = 11,
		Stun                               = 12,
		Freeze                             = 13,
		Sleep                              = 14,
		Fear                               = 15,
		Dark                               = 16,
		Restraint                          = 17,
		RecoveryCoolTime                   = 18,
		MoveSpeedUp                        = 19,
		MoveSpeedDown                      = 20,
		SendStatusWhenBackAttack           = 21,
		SendStatusWhenAttack               = 22,
		DrainByAttackScale                 = 23,
		PointGravity                       = 24,
		HealStaminaWhenAttackHit           = 25,
		RecoverAttackerWhenRecieveDamage   = 26,
		GuardShieldDamageRate              = 27,
		GuardSpecialGaugeRate              = 28,
		GuardReduceSkillRecastTime         = 29,
		GuardReduceSpecialSkillRecastTime  = 30,
		AllyAttack_AttackScale             = 31,
		CurableByInteraction               = 32,
		StatusAilmentHP                    = 33,
		ElementStatusReinforce_Earth       = 34,
		ElementStatusReinforce_Fire        = 35,
		ElementStatusReinforce_Ice         = 36,
		ElementStatusReinforce_Thunder     = 37,
		ElementStatusReinforce_Light       = 38,
		ElementStatusReinforce_Darkness    = 39,
		ElementAccumulationRate            = 40,
		ElementAccumulationTacticalSkillID = 41,
		ElementAccumulationReset           = 42,
		BaseStatusBoost                    = 43,
		BaseStatusRateBoost                = 44,
		CharacterStatusBoost               = 45,
		StaminaRecovery                    = 46,
		Poison                             = 47,
		GiveDamage                         = 48,
		SkillActionGiveDamage              = 49,
		ReceiveDamage                      = 50,
		BattleImagineGiveDamage            = 51,
		DamageAttackTypeGiveDamage         = 52,
		DamageAttackTypeReceiveDamage      = 53,
		ElementReceiveDamage               = 54,
		BattleImagineElementReceiveDamage  = 55,
		RaceGiveDamage                     = 56,
		AttributeGiveDamage                = 57,
		EnemyIDGiveDamage                  = 58,
		DungeonIDGiveDamage                = 59,
		TacticalSkillIDGiveDamage          = 60,
		SkillCoolTime                      = 61,
		TacticalSkillIDSkillCoolTime       = 62,
		AllSkillCoolTime                   = 63,
		BattleImagineCoolTime              = 64,
		SuccessRateBadCondition            = 65,
		ReduceStaminaByAll                 = 66,
		ReduceStaminaByAction              = 67,
		SkillButtonChargeTime              = 68,
		OnlyPlayerStatus                   = 69,
		AllyAttack_Element                 = 70,
		ElementStatusReinforce             = 71,
		DotMPRateHeal                      = 72,
		SpecialGaugeCharge                 = 73,
		FixTarget                          = 74,
		SendSelfStatusWhenAttack           = 75,
		ForceCriticalWhenAttack            = 76,
		InvalidAttackWhenReceiveDamage     = 77,
		LancerMark                         = 78,
		StatusRecovery                     = 79,
		Resurrection                       = 80,
		InvalidStatus                      = 81,
		ResistBadCondition                 = 82,
		RecoveryShieldDurability           = 83,
		Taunted                            = 84,
		HateCalcMagnification              = 85,
		ExtendNegativeStatus               = 86,
		FixHate                            = 87,
		GutsSelfDamage                     = 88,
		GutsOtherDamage                    = 89,
		HPLoss                             = 90,
		AddVoltageGauge                    = 91,
		DotVoltageGaugeUp                  = 92,
		OnlyEnemyStatus                    = 93,
		FlashStun                          = 94,
		DecreaseBoostCartridgeConsumption  = 95,
		ScapeArmor                         = 96,
		Num                                = 97,
		MAX                                = 98
	};

	/**
	 * Enum SkyBlue.ESBFailureUpdateBattleStatusOneReason
	 */
	enum class ESBFailureUpdateBattleStatusOneReason : uint8_t
	{
		None                = 0,
		ActorStatus         = 1,
		Passive             = 2,
		Condition           = 3,
		EffectiveStatusItem = 4,
		Resist              = 5,
		Immune              = 6,
		LevelDifference     = 7,
		TriggerCount        = 8,
		MAX                 = 9
	};

	/**
	 * Enum SkyBlue.ESkillActionPosition
	 */
	enum class ESkillActionPosition : uint8_t
	{
		SAP_Main            = 0,
		SAP_Sub             = 1,
		SAP_Aerial          = 2,
		SAP_Skill1          = 3,
		SAP_Skill2          = 4,
		SAP_Skill3          = 5,
		SAP_Skill4          = 6,
		SAP_Skill5          = 7,
		SAP_Skill6          = 8,
		SAP_Skill7          = 9,
		SAP_Skill8          = 10,
		SAP_Special         = 11,
		SAP_Dodge           = 12,
		SAP_ImagineArts     = 13,
		SAP_ImagineArts2    = 14,
		SAP_ImagineMount    = 15,
		SAP_EnemyStepJump   = 16,
		SAP_Ukemi           = 17,
		SAP_SkillCancelStep = 18,
		SAP_ContentAction1  = 19,
		SAP_ContentAction2  = 20,
		SAP_Dummy           = 21,
		SAP_Dummy01         = 22,
		SAP_Num             = 23,
		Skill_Begin         = 24,
		Skill_End           = 25,
		Begin               = 26,
		End                 = 27,
		MAX                 = 28
	};

	/**
	 * Enum SkyBlue.ESBEffectiveStatusDeactiveReason
	 */
	enum class ESBEffectiveStatusDeactiveReason : uint8_t
	{
		None                      = 0,
		Condition_OK              = 1,
		Condition_NG              = 2,
		NoValidAbility            = 3,
		GroupTriggerCount         = 4,
		ExcludeGroup              = 5,
		CuredByInteraction        = 6,
		EraseLancerMark           = 7,
		EraseDupeItem             = 8,
		EraseExtendNegativeStatus = 9,
		EraseByAlternativeAdd     = 10,
		DestroyedPlayerInvoker    = 11,
		MAX                       = 12
	};

	/**
	 * Enum SkyBlue.ESBInvincibleLevel
	 */
	enum class ESBInvincibleLevel : uint8_t
	{
		None   = 0,
		Level1 = 1,
		Level2 = 2,
		Level3 = 3,
		Level4 = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.ESBFieldDamageType
	 */
	enum class ESBFieldDamageType : uint8_t
	{
		None            = 0,
		DEAD_BEGIN      = 1,
		FallDead        = 2,
		DrowningDead    = 3,
		NoPlayersAround = 4,
		QuestTimeout    = 5,
		DEAD_END        = 6,
		DAMAGE_BEGIN    = 7,
		FallDamage      = 8,
		DAMAGE_END      = 9,
		MAX             = 10
	};

	/**
	 * Enum SkyBlue.ESBDamageEventGeneralParam
	 */
	enum class ESBDamageEventGeneralParam : uint8_t
	{
		None                       = 0,
		Berserker_ComboGaugeAmount = 1,
		Smasher_BallShootHitCount  = 2,
		MAX                        = 3
	};

	/**
	 * Enum SkyBlue.ESBInvincibleAnimation
	 */
	enum class ESBInvincibleAnimation : uint8_t
	{
		Default         = 0,
		DodgeRoll       = 1,
		DodgeStep       = 2,
		BattleAction    = 3,
		AbsoluteDefense = 4,
		Max             = 5
	};

	/**
	 * Enum SkyBlue.ESBAttribute
	 */
	enum class ESBAttribute : uint8_t
	{
		None        = 0,
		Physics     = 1,
		Earth       = 2,
		Fire        = 3,
		Ice         = 4,
		Thunder     = 5,
		Light       = 6,
		Darkness    = 7,
		Max         = 8,
		Heal        = 9,
		Buff        = 10,
		Debuff      = 11,
		Stun        = 12,
		Sleep       = 13,
		Poison      = 14,
		TargetFixed = 15,
		Fear        = 16,
		Blind       = 17,
		Restraint   = 18,
		Paralysis   = 19,
		Nappo       = 20,
		Drain       = 21,
		GlitterMode = 22,
		Begin       = 23,
		End         = 24
	};

	/**
	 * Enum SkyBlue.ESBStunValueCalculation
	 */
	enum class ESBStunValueCalculation : uint8_t
	{
		None         = 0,
		Add          = 1,
		Override     = 2,
		WeakOverride = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.ESBAbilityDynamicTriggerType
	 */
	enum class ESBAbilityDynamicTriggerType : uint8_t
	{
		None                        = 0,
		Ukemi                       = 1,
		MainAttackToEnemy           = 2,
		BackAttackToEnemy           = 3,
		AerialAttackBonusToEnemy    = 4,
		SucceededDodgeAttackToEnemy = 5,
		CriticalHitToEnemy          = 6,
		ResurrectionSucceeded       = 7,
		DodgeSuccess                = 8,
		AllLancerMarkErased         = 9,
		QuickReload                 = 10,
		SpecialSkillStart           = 11,
		EnemyStepJump               = 12,
		MAX                         = 13
	};

	/**
	 * Enum SkyBlue.ESBWeaponAttach
	 */
	enum class ESBWeaponAttach : uint8_t
	{
		WA_Right   = 0,
		WA_Left    = 1,
		WA_Custom0 = 2,
		WA_Custom1 = 3,
		WA_Custom2 = 4,
		WA_Custom3 = 5,
		WA_Custom4 = 6,
		WA_Custom5 = 7,
		WA_Num     = 8,
		WA_Invalid = 9,
		WA_MAX     = 10
	};

	/**
	 * Enum SkyBlue.ESBWeaponEquipType
	 */
	enum class ESBWeaponEquipType : uint8_t
	{
		WeaponEquipType_None       = 0,
		WeaponEquipType_Main       = 1,
		WeaponEquipType_Sub        = 2,
		WeaponEquipType_FishingRod = 3,
		WeaponEquipType_MAX        = 4
	};

	/**
	 * Enum SkyBlue.EEffectId
	 */
	enum class EEffectId : uint8_t
	{
		None                     = 0,
		Slash                    = 1,
		HiSlash                  = 2,
		LowSlash                 = 3,
		StepJumpSlash            = 4,
		Blow                     = 5,
		HiBlow                   = 6,
		LowBlow                  = 7,
		StepJumpBlow             = 8,
		Thrust                   = 9,
		HiThrust                 = 10,
		LowThrust                = 11,
		StepJumpThrust           = 12,
		Claw                     = 13,
		HiClaw                   = 14,
		LowClaw                  = 15,
		StepJumpClaw             = 16,
		Fang                     = 17,
		HiFang                   = 18,
		LowFang                  = 19,
		StepJumpFang             = 20,
		EarthMelt                = 21,
		StoneBreak               = 22,
		EarthMuzzle              = 23,
		FireMelt                 = 24,
		FireBreak                = 25,
		FireMuzzle               = 26,
		IceMelt                  = 27,
		IceBreak                 = 28,
		IceMuzzle                = 29,
		ThunderMelt              = 30,
		ThunderBreak             = 31,
		ThunderMuzzle            = 32,
		LightMelt                = 33,
		LightBreak               = 34,
		LightMuzzle              = 35,
		DarknessMelt             = 36,
		DarknessBreak            = 37,
		DarknessMuzzle           = 38,
		GeneralEffective         = 39,
		SuperArmor               = 40,
		BackAttack               = 41,
		ElementSpread            = 42,
		ProjectileInWater        = 43,
		DodgeSuccess_Roll        = 44,
		DodgeSuccess_Step        = 45,
		DodgeAttack_DodgeSuccess = 46,
		Resurrection             = 47,
		ResurrectionComp         = 48,
		BuffAuraATK              = 49,
		BuffAuraDEF              = 50,
		EnemySpawn               = 51,
		AerialAttackBonus        = 52,
		ClassLevelUp             = 53,
		AdventurerRankUp         = 54,
		MaxNum                   = 55,
		MAX                      = 56
	};

	/**
	 * Enum SkyBlue.ESBDeathReactionType
	 */
	enum class ESBDeathReactionType : uint8_t
	{
		None      = 0,
		Down      = 1,
		KnockBack = 2,
		Up        = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBStunDirection
	 */
	enum class ESBStunDirection : uint8_t
	{
		None      = 0,
		Down      = 1,
		KnockBack = 2,
		Up        = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBDamageDirection
	 */
	enum class ESBDamageDirection : uint8_t
	{
		SBDD_Front = 0,
		SBDD_Back  = 1,
		SBDD_Left  = 2,
		SBDD_Right = 3,
		SBDD_MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBWeaponType
	 */
	enum class ESBWeaponType : uint8_t
	{
		WeaponType_None        = 0,
		WeaponType_HandAxe     = 1,
		WeaponType_HandSword   = 2,
		WeaponType_HandGun     = 3,
		WeaponType_Rifle       = 4,
		WeaponType_Spear       = 5,
		WeaponType_Bow         = 6,
		WeaponType_Staff       = 7,
		WeaponType_Shield      = 8,
		WeaponType_Club        = 9,
		WeaponType_CannonSword = 10,
		WeaponType_BallHammer  = 11,
		WeaponType_Guitar      = 12,
		WeaponType_MAX         = 13
	};

	/**
	 * Enum SkyBlue.ESBEffectType
	 */
	enum class ESBEffectType : uint8_t
	{
		Default   = 0,
		Footprint = 1,
		SlashDisk = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBEffectVisibleType
	 */
	enum class ESBEffectVisibleType : uint8_t
	{
		Default                  = 0,
		Battle_Production        = 1,
		Battle_StatusAliment     = 2,
		Battle_MarkerAttack      = 3,
		Battle_MarkerHeal        = 4,
		Battle_Projectile        = 5,
		Battle_Imagine           = 6,
		Battle_ULTProduction     = 7,
		Battle_ULTProjectile     = 8,
		Battle_Weapon            = 9,
		Battle_BattleScoreWeapon = 10,
		Battle_GimmickProjectile = 11,
		UI                       = 12,
		MAX                      = 13
	};

	/**
	 * Enum SkyBlue.EEffectTarget
	 */
	enum class EEffectTarget : uint8_t
	{
		EffectTarget_ActorRoot              = 0,
		EffectTarget_ActorMesh              = 1,
		EffectTarget_PlayerFaceMesh         = 2,
		EffectTarget_WeaponMesh_R           = 3,
		EffectTarget_WeaponMesh_L           = 4,
		EffectTarget_Inventory              = 5,
		EffectTarget_Inventory01            = 6,
		EffectTarget_WeaponR_AdditionalMesh = 7,
		EffectTarget_WeaponL_AdditionalMesh = 8,
		EffectTarget_MAX                    = 9
	};

	/**
	 * Enum SkyBlue.ESBAkEventLOD
	 */
	enum class ESBAkEventLOD : uint8_t
	{
		LOD_Default  = 0,
		LOD          = 1,
		LOD01        = 2,
		LOD02        = 3,
		LOD03        = 4,
		LOD04        = 5,
		LOD05        = 6,
		LOD06        = 7,
		LOD07        = 8,
		LOD08        = 9,
		LOD_Infinity = 10,
		LOD_MAX      = 11
	};

	/**
	 * Enum SkyBlue.ESBCounterDamageState
	 */
	enum class ESBCounterDamageState : uint8_t
	{
		None        = 0,
		Attack      = 1,
		Stun        = 2,
		KneelDown   = 3,
		Down        = 4,
		UpperDown   = 5,
		HiUpperDown = 6,
		Max         = 7
	};

	/**
	 * Enum SkyBlue.ESBDxBattleScore
	 */
	enum class ESBDxBattleScore : uint8_t
	{
		DX_BATTLE_SCORE_ENEMY_DAMAGE                 = 0,
		DX_BATTLE_SCORE_BOSS_DAMAGE                  = 1,
		DX_BATTLE_SCORE_INSTANTANEOUS_DAMAGE         = 2,
		DX_BATTLE_SCORE_RESUSCITATION                = 3,
		DX_BATTLE_SCORE_SPECIALATTACK_TOTALDAMAGE    = 4,
		DX_BATTLE_SCORE_ENEMYGATE_TOTALDAMAGE        = 5,
		DX_BATTLE_SCORE_ENEMYBUFFER_DAMAGE           = 6,
		DX_BATTLE_SCORE_FACILITY_DAMAGE              = 7,
		DX_BATTLE_SCORE_TAKE_HITS                    = 8,
		DX_BATTLE_SCORE_GET_HOSTILITY_TIME_BY_NORMAL = 9,
		DX_BATTLE_SCORE_GET_HOSTILITY_TIME_BY_BOSS   = 10,
		DX_BATTLE_SCORE_ALL_CONTRIBUTION_1ST         = 11,
		DX_BATTLE_SCORE_CLASS_CONTRIBUTION_1ST       = 12,
		DX_BATTLE_SCORE_MAX                          = 13
	};

	/**
	 * Enum SkyBlue.ESBDxBattleWholeScore
	 */
	enum class ESBDxBattleWholeScore : uint8_t
	{
		DX_BATTLE_WHOLE_SCORE_ENEMYGATE_DESTRUCT_NUM   = 0,
		DX_BATTLE_WHOLE_SCORE_ENEMYBUFFER_DESTRUCT_NUM = 1,
		DX_BATTLE_WHOLE_SCORE_MAX                      = 2
	};

	/**
	 * Enum SkyBlue.ESBStackBEnableType
	 */
	enum class ESBStackBEnableType : uint8_t
	{
		StackB_Disable     = 0,
		StackB_Enable_Low  = 1,
		StackB_Enable_Full = 2,
		StackB_MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBEntryConditionPartyState
	 */
	enum class ESBEntryConditionPartyState : uint8_t
	{
		EntryConditionPartyState_None         = 0,
		EntryConditionPartyState_SoloOnly     = 1,
		EntryConditionPartyState_PartyOnly    = 2,
		EntryConditionPartyState_SoloOrParty  = 3,
		EntryConditionPartyState_MatchingOnly = 4,
		EntryConditionPartyState_MAX          = 5
	};

	/**
	 * Enum SkyBlue.ESBMissionType
	 */
	enum class ESBMissionType : uint8_t
	{
		MissionType_Normal = 0,
		MissionType_Event  = 1,
		MissionType_MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBMapRegion
	 */
	enum class ESBMapRegion : uint8_t
	{
		MapRegion_None = 0,
		MapRegion_R01  = 1,
		MapRegion_R02  = 2,
		MapRegion_R03  = 3,
		MapRegion_R04  = 4,
		MapRegion_R05  = 5,
		MapRegion_MAX  = 6
	};

	/**
	 * Enum SkyBlue.ESBMapType
	 */
	enum class ESBMapType : uint8_t
	{
		MapType_None            = 0,
		MapType_OutGame         = 1,
		MapType_City            = 2,
		MapType_Field           = 3,
		MapType_InstanceDungeon = 4,
		MapType_InstanceArea    = 5,
		MapType_OfflineBattle   = 6,
		MapType_RaidBattle      = 7,
		MapType_Arena           = 8,
		MapType_Theater         = 9,
		MapType_MAX             = 10
	};

	/**
	 * Enum SkyBlue.ESBDxBattleGameResult
	 */
	enum class ESBDxBattleGameResult : uint8_t
	{
		Unknown = 0,
		Sucs    = 1,
		Failed  = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBDxBattleGameStatus
	 */
	enum class ESBDxBattleGameStatus : uint8_t
	{
		Idle    = 0,
		Loading = 1,
		Loaded  = 2,
		Running = 3,
		Done    = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBActorHiddenType
	 */
	enum class ESBActorHiddenType : uint8_t
	{
		WaitForLoading                = 0,
		PlayerNumRestriction          = 1,
		NpcPool                       = 2,
		PlayerAdmin                   = 3,
		NotDemoMember                 = 4,
		DemoHiddenRequest             = 5,
		TalkMode                      = 6,
		QuestEventMode                = 7,
		CoinPubPrivateRoom            = 8,
		PlayerTransform               = 9,
		FieldStatus                   = 10,
		CharaPartsUpdate              = 11,
		BuddyNpc                      = 12,
		BuddyDrown                    = 13,
		SwimCamera                    = 14,
		CameraInRootCollision         = 15,
		PhotoModeSpawnedClone         = 16,
		PhotoModeTrace                = 17,
		FishingMode                   = 18,
		ParentHidden                  = 19,
		PlayerCityNetCullDistance     = 20,
		SimulatedPlayerMountMismatch  = 21,
		OrnamentManage                = 22,
		Debug_EditorNotDemoMember     = 23,
		Debug_HideLocallyPlayer       = 24,
		Debug_HideNonLocallyPlayer    = 25,
		Debug_HideAllActor_Linked     = 26,
		Debug_HideAllActor_NonLinkage = 27,
		Debug_CharaCreate             = 28,
		MAX                           = 29
	};

	/**
	 * Enum SkyBlue.ESBPerceiveLevel
	 */
	enum class ESBPerceiveLevel : uint8_t
	{
		Level0 = 0,
		Level1 = 1,
		Level2 = 2,
		Level3 = 3,
		MAX    = 4
	};

	/**
	 * Enum SkyBlue.EHomingType
	 */
	enum class EHomingType : uint8_t
	{
		HomingAcceleration                  = 0,
		HomingCorrectionAngle               = 1,
		HomingCorrectionVerticalAngle       = 2,
		HomingCorrectionHorizontalOnlyAngle = 3,
		MAX                                 = 4
	};

	/**
	 * Enum SkyBlue.ESBParabolaMoveType
	 */
	enum class ESBParabolaMoveType : uint8_t
	{
		SpawnDirection  = 0,
		Degree          = 1,
		DirectionDegree = 2,
		ReachHeight     = 3,
		ReachTime       = 4,
		MAX             = 5
	};

	/**
	 * Enum SkyBlue.ESBWeaponVisibleType
	 */
	enum class ESBWeaponVisibleType : uint8_t
	{
		AlwaysVisible = 0,
		CityOnly      = 1,
		FieldOnly     = 2,
		NotVisible    = 3,
		MAX           = 4
	};

	/**
	 * Enum SkyBlue.ESBBattleScoreWeaponEffectVisibleType
	 */
	enum class ESBBattleScoreWeaponEffectVisibleType : uint8_t
	{
		AlwaysVisible = 0,
		FieldOnly     = 1,
		NotVisible    = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.ESBPadKeySkinType
	 */
	enum class ESBPadKeySkinType : uint8_t
	{
		XBOX       = 0,
		DualShock4 = 1,
		DualSense  = 2,
		Max        = 3
	};

	/**
	 * Enum SkyBlue.ESBBattleEffectVisibleType
	 */
	enum class ESBBattleEffectVisibleType : uint8_t
	{
		Category           = 0,
		AttackDirectingVfx = 1,
		AreaAttackVfx      = 2,
		AreaHealVfx        = 3,
		RangeAttackVfx     = 4,
		BattleImagineVfx   = 5,
		ULTVfx             = 6,
		Max                = 7
	};

	/**
	 * Enum SkyBlue.ESBBattleEffectVisibleCategory
	 */
	enum class ESBBattleEffectVisibleCategory : uint8_t
	{
		MyBattleVfx           = 0,
		PartyMemberBattleVfx  = 1,
		OtherMemberBattleVfx  = 2,
		ActiveEnemyBattleVfx  = 3,
		PassiveEnemyBattleVfx = 4,
		Max                   = 5
	};

	/**
	 * Enum SkyBlue.EProjectileNetworkSpawnType
	 */
	enum class EProjectileNetworkSpawnType : uint8_t
	{
		AutoSetting                     = 0,
		SendToAllFromRemoteSpawn        = 1,
		SendToAllFromTargetClient       = 2,
		SendToServerFromDelegateHitAuth = 3,
		SendToServerFromReplicate       = 4,
		OnlyClientSpawn                 = 5,
		MAX                             = 6
	};

	/**
	 * Enum SkyBlue.ESBCostumeMaterial
	 */
	enum class ESBCostumeMaterial : uint8_t
	{
		None                     = 0,
		Naked                    = 1,
		Robe                     = 2,
		Robe_Feste               = 3,
		Cloth_Thin               = 4,
		Cloth_Thick              = 5,
		Cloth_Tight              = 6,
		Cloth_Jacket             = 7,
		Cloth_Jacket_Light_Metal = 8,
		Leather_Plastic          = 9,
		Metal                    = 10,
		Light_Metal              = 11,
		Tight_Metal_Light        = 12,
		Armor_Metal_Light        = 13,
		Armor_Metal_Mid          = 14,
		Armor_Metal_Hard         = 15,
		Kimono                   = 16,
		Kimono_Long              = 17,
		Sneaker                  = 18,
		Heel                     = 19,
		Leather                  = 20,
		Leather_Light            = 21,
		Leather_Heavy            = 22,
		Setta                    = 23,
		Geta                     = 24,
		INVALID                  = 25,
		ShadowAvater             = 26,
		MAX                      = 27
	};

	/**
	 * Enum SkyBlue.ESBClothSwitchType
	 */
	enum class ESBClothSwitchType : uint8_t
	{
		Cloth       = 0,
		Cloth_Under = 1,
		Cloth_Shoes = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBListenerPosition
	 */
	enum class ESBListenerPosition : uint8_t
	{
		None   = 0,
		Camera = 1,
		Player = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBAkEventRTPCType
	 */
	enum class ESBAkEventRTPCType : uint8_t
	{
		None                 = 0,
		Chara_Height         = 1,
		Water_Depth          = 2,
		Player_SkillPlayRate = 3,
		MAX                  = 4
	};

	/**
	 * Enum SkyBlue.ESBBattleBGMType
	 */
	enum class ESBBattleBGMType : uint8_t
	{
		None                = 0,
		Zako                = 1,
		MiddleBoss          = 2,
		LargeBoss           = 3,
		DemiDragonBoss      = 4,
		Named               = 5,
		RaidBattleA         = 6,
		RaidBattleSandwormA = 7,
		ArenaZako           = 8,
		ArenaBoss           = 9,
		UniqueBoss          = 10,
		MapBoss             = 11,
		MAX                 = 12
	};

	/**
	 * Enum SkyBlue.ESBBGMMapGameMode
	 */
	enum class ESBBGMMapGameMode : uint8_t
	{
		None               = 0,
		DungeonNormal      = 1,
		DungeonScenario    = 2,
		InstanceArea       = 3,
		BattleArena        = 4,
		PublicDungeon      = 5,
		DungeonTimeAttack  = 6,
		DungeonScoreAttack = 7,
		Survival           = 8,
		DxBattle           = 9,
		RankUpExam         = 10,
		MAX                = 11
	};

	/**
	 * Enum SkyBlue.ESBComparisonOperator
	 */
	enum class ESBComparisonOperator : uint8_t
	{
		OrMore = 0,
		OrLess = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBPartsConditonLogic
	 */
	enum class ESBPartsConditonLogic : uint8_t
	{
		AND = 0,
		OR  = 1,
		MAX = 2
	};

	/**
	 * Enum SkyBlue.ESBPartyChainSettingType
	 */
	enum class ESBPartyChainSettingType : uint8_t
	{
		Invalid    = 0,
		Default    = 1,
		RaidBattle = 2,
		DxBattle   = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.ESBLocationType
	 */
	enum class ESBLocationType : uint8_t
	{
		None    = 0,
		Normal  = 1,
		Dungeon = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBServerShutDownReason
	 */
	enum class ESBServerShutDownReason : uint8_t
	{
		FromAws     = 0,
		AutoScaling = 1,
		Unknown     = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBLobbyChangedType
	 */
	enum class ESBLobbyChangedType : uint8_t
	{
		Player = 0,
		Room   = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBDecorationListSortType
	 */
	enum class ESBDecorationListSortType : uint8_t
	{
		Sort_Desc = 0,
		Sort_Asc  = 1,
		Sort_MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBAdventureCardDecorationType
	 */
	enum class ESBAdventureCardDecorationType : uint8_t
	{
		None       = 0,
		CardFrame  = 1,
		CharaFrame = 2,
		Color      = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.ESBCharaEquipType
	 */
	enum class ESBCharaEquipType : uint8_t
	{
		Weapon              = 0,
		Costume_Head        = 1,
		Costume_Body        = 2,
		Costume_Hand        = 3,
		Costume_Leg         = 4,
		Costume_Shoes       = 5,
		Costume_Accessory1  = 6,
		Costume_Accessory2  = 7,
		Costume_Accessory3  = 8,
		Costume_Accessory10 = 9,
		Imagine_Active1     = 10,
		Imagine_Active2     = 11,
		Imagine_Passive1    = 12,
		Imagine_Passive2    = 13,
		Imagine_Passive3    = 14,
		Imagine_Passive4    = 15,
		Imagine_Passive5    = 16,
		Imagine_Mount       = 17,
		Costume_Accessory4  = 18,
		Costume_Accessory5  = 19,
		Costume_Accessory6  = 20,
		Costume_Accessory7  = 21,
		Costume_Accessory8  = 22,
		Costume_Accessory9  = 23,
		Costume_Underwear   = 24,
		Max                 = 25
	};

	/**
	 * Enum SkyBlue.ESBRewardItemType
	 */
	enum class ESBRewardItemType : uint8_t
	{
		REWARD_ITEM_TYPE_LUNO                      = 0,
		REWARD_ITEM_TYPE_GC                        = 1,
		REWARD_ITEM_TYPE_EXP                       = 2,
		REWARD_ITEM_TYPE_ITEM                      = 3,
		REWARD_ITEM_TYPE_WEAPON                    = 4,
		REWARD_ITEM_TYPE_COSTUME                   = 5,
		REWARD_ITEM_TYPE_IMAGINE_SEED              = 6,
		REWARD_ITEM_TYPE_MOUNT                     = 7,
		REWARD_ITEM_TYPE_MISSION_COIN              = 8,
		REWARD_ITEM_TYPE_EMOTE                     = 9,
		REWARD_ITEM_TYPE_STAMP                     = 10,
		REWARD_ITEM_TYPE_IMAGINE_RECIPE            = 11,
		REWARD_ITEM_TYPE_BONUS_SKILL_POINT         = 12,
		REWARD_ITEM_TYPE_CLASS_SKILL_POINT         = 13,
		REWARD_ITEM_TYPE_ACHIEVEMENT               = 14,
		REWARD_ITEM_TYPE_LIQUID_MEMORY             = 15,
		REWARD_ITEM_TYPE_COIN                      = 16,
		REWARD_ITEM_TYPE_FREE_CURRENCY             = 17,
		REWARD_ITEM_TYPE_TOKEN                     = 18,
		REWARD_ITEM_TYPE_CRAFT_MACHINE_RECIPE      = 19,
		REWARD_ITEM_TYPE_SEASON_RANK_POINT         = 20,
		REWARD_ITEM_TYPE_SEASON_REWARD_SPECIAL     = 21,
		REWARD_ITEM_TYPE_STAMPS_CATEGORY           = 22,
		REWARD_ITEM_TYPE_RECIPE_SET                = 23,
		REWARD_ITEM_TYPE_ADVENTURE_BOARD           = 24,
		REWARD_ITEM_TYPE_STORAGE_EXPANSION_TICKET  = 25,
		REWARD_ITEM_TYPE_WAREHOUSE_ABILITY         = 26,
		REWARD_ITEM_TYPE_TACTICAL_ABILITY          = 27,
		REWARD_ITEM_TYPE_TACTICAL_ABILITY_BETA     = 28,
		REWARD_ITEM_TYPE_LOTTERY                   = 29,
		REWARD_ITEM_TYPE_REAL_GOODS                = 30,
		REWARD_ITEM_TYPE_COUSTOM_PARTS             = 31,
		REWARD_ITEM_TYPE_AWARD                     = 32,
		REWARD_ITEM_TYPE_ADVENTURE_CARD_DECORATION = 33,
		REWARD_ITEM_TYPE_ORNAMENT                  = 34,
		REWARD_ITEM_TYPE_NUM                       = 35,
		REWARD_ITEM_TYPE_MAX                       = 36
	};

	/**
	 * Enum SkyBlue.EStorageApiType
	 */
	enum class EStorageApiType : uint8_t
	{
		UseItems     = 0,
		ConsumeItems = 1,
		DropItems    = 2,
		MoveItems    = 3,
		UseExpItems  = 4,
		None         = 5,
		MAX          = 6
	};

	/**
	 * Enum SkyBlue.ESBRecipeType
	 */
	enum class ESBRecipeType : uint8_t
	{
		NONE            = 0,
		RECIPE_ITEM     = 1,
		RECIPE_WEAPON   = 2,
		RECIPE_IMAGINE  = 3,
		RECIPE_STORAGE  = 4,
		RECIPE_TYPE_NUM = 5,
		MAX             = 6
	};

	/**
	 * Enum SkyBlue.EItemEfficacyType
	 */
	enum class EItemEfficacyType : uint8_t
	{
		Invalid                        = 0,
		HPRecovery                     = 1,
		MPRecovery                     = 2,
		SkillRecastReset               = 3,
		SpecialRecovery                = 4,
		ArtsRecovery                   = 5,
		FireStatusRecovery             = 6,
		IceStatusRecovery              = 7,
		ThunderStatusRecovery          = 8,
		HPMaxRateUp                    = 9,
		HPDotRecovery                  = 10,
		ExpIncrease                    = 11,
		HPRangeHeal                    = 12,
		HPRangeHeal_Place              = 13,
		HPRangeHeal_Rate               = 14,
		HPRangeHeal_Place_Rate         = 15,
		FrailnessRecovery              = 16,
		CheerfulItem_Firework          = 17,
		WeaponSticker                  = 18,
		MountEnergyReduceConsumption   = 19,
		ItemDropRateUpByEnemy          = 20,
		ItemDropRateUpByGather         = 21,
		DropCountUpByTreasure          = 22,
		ExpUpByEnemy                   = 23,
		ExpUpByMission                 = 24,
		LunoUpByEnemy                  = 25,
		LunoUpByMission                = 26,
		ItemBox                        = 27,
		CheerfulItem_PartyPopper       = 28,
		CommonAbility_Perk             = 29,
		TokenDropCountUp               = 30,
		TokenDropRateUp                = 31,
		CheerfulItem_GlowStickSingle   = 32,
		CheerfulItem_GlowStickMultiple = 33,
		CheerfulItem_Snowman           = 34,
		Dye                            = 35,
		BackDyeingAgent                = 36,
		ToningAgent                    = 37,
		CheerfulItem_FlowerShower      = 38,
		LevelIncrease                  = 39,
		ItemEfficacyType_Num           = 40,
		MAX                            = 41
	};

	/**
	 * Enum SkyBlue.ESBDayTime
	 */
	enum class ESBDayTime : uint8_t
	{
		Morning = 0,
		Noon    = 1,
		Evening = 2,
		Night   = 3,
		Max     = 4
	};

	/**
	 * Enum SkyBlue.ESBTreasureBoxRarity
	 */
	enum class ESBTreasureBoxRarity : uint8_t
	{
		NotUse         = 0,
		Silver         = 1,
		Random         = 2,
		Gorgeous       = 3,
		Reserved0      = 4,
		Reserved1      = 5,
		Reserved2      = 6,
		Event          = 7,
		Reserved3      = 8,
		Reserved4      = 9,
		Plant          = 10,
		Mineral        = 11,
		Aquatic        = 12,
		AnyGatherPoint = 13,
		MAX            = 14
	};

	/**
	 * Enum SkyBlue.ESBFreeBuffPointType
	 */
	enum class ESBFreeBuffPointType : uint8_t
	{
		NotUse          = 0,
		Dotheal         = 1,
		Atkup           = 2,
		Movespeedup     = 3,
		Event           = 4,
		Pickup          = 5,
		Enemydropup     = 6,
		Treasuredropup1 = 7,
		Treasuredropup2 = 8,
		Mountengdown1   = 9,
		Mountengdown2   = 10,
		Nappohensin     = 11,
		Napposp1        = 12,
		Napposp2        = 13,
		Napposp3        = 14,
		Allattatkup     = 15,
		Allattdefup     = 16,
		Atkup1          = 17,
		Atkup2          = 18,
		Defup1          = 19,
		Defup2          = 20,
		Superarmor      = 21,
		DotHeal1        = 22,
		DotHeal2        = 23,
		Speedup1        = 24,
		Speedup2        = 25,
		Napposp4        = 26,
		Staminaup1      = 27,
		Staminaup2      = 28,
		Intervalt1      = 29,
		Intervalt2      = 30,
		Intervalult1    = 31,
		Intervalult2    = 32,
		Intervalbi1     = 33,
		Intervalbi2     = 34,
		MAX             = 35
	};

	/**
	 * Enum SkyBlue.ESBFreeBuffPointView
	 */
	enum class ESBFreeBuffPointView : uint8_t
	{
		NotSetting = 0,
		BuffObject = 1,
		BuffNPC    = 2,
		MushroomA  = 3,
		MushroomB  = 4,
		MushroomC  = 5,
		MushroomD  = 6,
		CookerA    = 7,
		CookerB    = 8,
		CookerC    = 9,
		CookerD    = 10,
		CookerE    = 11,
		BuffNappo  = 12,
		MAX        = 13
	};

	/**
	 * Enum SkyBlue.ESBFreeBuffPointLotResult
	 */
	enum class ESBFreeBuffPointLotResult : uint8_t
	{
		Success                            = 0,
		InternalError                      = 1,
		InvalidData                        = 2,
		ItemStorageSizeOver                = 3,
		InvalidObjectId                    = 4,
		CantLootObjectId                   = 5,
		InvalidMasterTreasureID            = 6,
		GatherPointLotNoLot                = 7,
		NotFoundObjectIsServerActor        = 8,
		NotAuthor                          = 9,
		NotServer                          = 10,
		NotPlayer                          = 11,
		NotPlayerState                     = 12,
		CantInteractReach                  = 13,
		InvalidMasterData0                 = 14,
		InvalidMasterData1                 = 15,
		InvalidMasterData2                 = 16,
		InvalidMasterData3                 = 17,
		InvalidMasterTreasure              = 18,
		ProcessingFieldActor               = 19,
		InvalidMasterDataByItemAndWeapon   = 20,
		InternalErrorByDBAccess0           = 21,
		InternalErrorByDBAccess1           = 22,
		InternalErrorByDBAccess2           = 23,
		TresureLotFuncError                = 24,
		FailedGetFieldActorPickupComponent = 25,
		LotItemTypeUnknown                 = 26,
		MAX                                = 27
	};

	/**
	 * Enum SkyBlue.EPhotoType
	 */
	enum class EPhotoType : uint8_t
	{
		None       = 0,
		FaceBg     = 1,
		HeaderBg   = 2,
		UserPhoto1 = 3,
		UserPhoto2 = 4,
		UserPhoto3 = 5,
		MAX        = 6
	};

	/**
	 * Enum SkyBlue.ESBPrivilegeType
	 */
	enum class ESBPrivilegeType : uint8_t
	{
		noUGCAndPermission     = 0,
		noUGCAndFriend         = 1,
		noUGCAndDeny           = 2,
		FriendUGCAndPermission = 3,
		FriendUGCAndFriend     = 4,
		FriendUGCAndDeny       = 5,
		UGCAndPermission       = 6,
		UGCAndFriend           = 7,
		UGCAndDeny             = 8,
		MAX                    = 9
	};

	/**
	 * Enum SkyBlue.ESBPlatformType
	 */
	enum class ESBPlatformType : uint8_t
	{
		Pf0  = 0,
		Pf1  = 1,
		Pf2  = 2,
		Pf3  = 3,
		Pf4  = 4,
		Pf5  = 5,
		Pf99 = 6,
		Max  = 7
	};

	/**
	 * Enum SkyBlue.ESBTreasureBoxRewardType
	 */
	enum class ESBTreasureBoxRewardType : uint8_t
	{
		Money                   = 0,
		GC                      = 1,
		Exp                     = 2,
		Item                    = 3,
		Weapon                  = 4,
		Costume                 = 5,
		Imagine                 = 6,
		Mount                   = 7,
		MissionCoin             = 8,
		Emote                   = 9,
		Stamp                   = 10,
		ImagineRecipe           = 11,
		BonusSkillPoint         = 12,
		ClassSkillPoint         = 13,
		Achievement             = 14,
		LiquidMemory            = 15,
		Blank01                 = 16,
		Coin                    = 17,
		FreeCurrency            = 18,
		Token                   = 19,
		CraftMachineRecipe      = 20,
		ItemBox                 = 21,
		WeaponDecorationSticker = 22,
		SeasonRankPoint         = 23,
		SeasonRewardSpecial     = 24,
		StampCategory           = 25,
		UserAuthrizationCoupon  = 26,
		CraftRecipeSet          = 27,
		AdventureBoard          = 28,
		StorageExpansionTicket  = 29,
		WareHouseAbility        = 30,
		TacticalAbility         = 31,
		TacticalAbilityBeta     = 32,
		Lottery                 = 33,
		RealGoods               = 34,
		CoustomParts            = 35,
		Award                   = 36,
		AdventureCardDecoration = 37,
		Ornament                = 38,
		MAX                     = 39
	};

	/**
	 * Enum SkyBlue.ESBGatherPointLotResult
	 */
	enum class ESBGatherPointLotResult : uint8_t
	{
		Success                            = 0,
		InternalError                      = 1,
		InvalidData                        = 2,
		ItemStorageSizeOver                = 3,
		InvalidObjectId                    = 4,
		CantLootObjectId                   = 5,
		InvalidMasterTreasureID            = 6,
		GatherPointLotNoLot                = 7,
		NotFoundObjectIsServerActor        = 8,
		NotAuthor                          = 9,
		NotServer                          = 10,
		NotPlayer                          = 11,
		NotPlayerState                     = 12,
		CantInteractReach                  = 13,
		InvalidMasterData0                 = 14,
		InvalidMasterData1                 = 15,
		InvalidMasterData2                 = 16,
		InvalidMasterData3                 = 17,
		InvalidMasterTreasure              = 18,
		ProcessingFieldActor               = 19,
		InvalidMasterDataByItemAndWeapon   = 20,
		InternalErrorByDBAccess0           = 21,
		InternalErrorByDBAccess1           = 22,
		InternalErrorByDBAccess2           = 23,
		TresureLotFuncError                = 24,
		FailedGetFieldActorPickupComponent = 25,
		LotItemTypeUnknown                 = 26,
		MAX                                = 27
	};

	/**
	 * Enum SkyBlue.EGatherHeight
	 */
	enum class EGatherHeight : uint8_t
	{
		Low    = 0,
		Middle = 1,
		High   = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBTensionTagType
	 */
	enum class ESBTensionTagType : uint8_t
	{
		None              = 0,
		AlwayPartyOK      = 1,
		GoToDungeon       = 2,
		Busy              = 3,
		WelcomeFollow     = 4,
		RecruitPTM        = 5,
		DoQuest           = 6,
		WillHelp          = 7,
		RecruitGM         = 8,
		NeedHelp          = 9,
		NewComer          = 10,
		Returner          = 11,
		SimplycityPartyOn = 12,
		Max               = 13
	};

	/**
	 * Enum SkyBlue.ESBProfilePublicSettingType
	 */
	enum class ESBProfilePublicSettingType : uint8_t
	{
		All       = 0,
		Community = 1,
		Guild     = 2,
		Private   = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBActivityType
	 */
	enum class ESBActivityType : uint8_t
	{
		Unknown          = 0,
		Login            = 1,
		Logout           = 2,
		StartParty       = 3,
		JoinParty        = 4,
		AcceptQuest      = 5,
		CompleteQuest    = 6,
		JoinColosseum    = 7,
		ActivateField    = 8,
		ActivateDungeon  = 9,
		CraftSuccessed   = 10,
		DefeatNamedEnemy = 11,
		Num              = 12,
		MAX              = 13
	};

	/**
	 * Enum SkyBlue.ESBGameOver
	 */
	enum class ESBGameOver : uint8_t
	{
		INGAME   = 0,
		GAMEOVER = 1,
		TIMEOVER = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBDungeonCompleteType
	 */
	enum class ESBDungeonCompleteType : uint8_t
	{
		Unopened    = 0,
		Uncompleted = 1,
		Completed   = 2,
		Unknown     = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.ESBIsRquestBlackListResult
	 */
	enum class ESBIsRquestBlackListResult : uint8_t
	{
		Failure          = 0,
		Registered_Black = 1,
		Registered_Safe  = 2,
		Success          = 3,
		MAX              = 4
	};

	/**
	 * Enum SkyBlue.ESBAdditionalColor
	 */
	enum class ESBAdditionalColor : uint8_t
	{
		Nomal    = 0,
		Ignition = 1,
		Freeze   = 2,
		Shock    = 3,
		MAX      = 4
	};

	/**
	 * Enum SkyBlue.ESBDebugMenuType
	 */
	enum class ESBDebugMenuType : uint8_t
	{
		SB_DEBUG_MENU_NONE                     = 0,
		SB_DEBUG_MENU_TOP                      = 1,
		SB_DEBUG_MENU_COMMAND                  = 2,
		SB_DEBUG_MENU_PLAYER                   = 3,
		SB_DEBUG_MENU_PLAYER_BATTLE            = 4,
		SB_DEBUG_MENU_ENEMY                    = 5,
		SB_DEBUG_MENU_MOUNT                    = 6,
		SB_DEBUG_MENU_NEARBY_CHARACTER         = 7,
		SB_DEBUG_MENU_NEARBY_CHARACTER_BATTLE  = 8,
		SB_DEBUG_MENU_EFFECT                   = 9,
		SB_DEBUG_MENU_UI                       = 10,
		SB_DEBUG_MENU_SCRIPT                   = 11,
		SB_DEBUG_MENU_CAMERA                   = 12,
		SB_DEBUG_MENU_RENDER                   = 13,
		SB_DEBUG_MENU_SOUND                    = 14,
		SB_DEBUG_MENU_FAST_TRAVEL              = 15,
		SB_DEBUG_MENU_QUEST                    = 16,
		SB_DEBUG_MENU_TIME_SETTING             = 17,
		SB_DEBUG_MENU_MAPS                     = 18,
		SB_DEBUG_MENU_ROUTEGUIDE               = 19,
		SB_DEBUG_MENU_INTERRUPT_QUEST          = 20,
		SB_DEBUG_MENU_LOAD                     = 21,
		SB_DEBUG_MENU_SAVE                     = 22,
		SB_DEBUG_MENU_RESET                    = 23,
		SB_DEBUG_MENU_CHANGECLASS              = 24,
		SB_DEBUG_MENU_PROJECTILE               = 25,
		SB_DEBUG_MENU_SEARCHPOINT              = 26,
		SB_DEBUG_MENU_SYSYTEM                  = 27,
		SB_DEBUG_MENU_CHARACREATE              = 28,
		SB_DEBUG_MENU_PROCEDUALANIM            = 29,
		SB_DEBUG_MENU_FISHING                  = 30,
		SB_DEBUG_MENU_FOLIAGE                  = 31,
		SB_DEBUG_MENU_COMMAND_STAT             = 32,
		SB_DEBUG_MENU_COMMAND_SHOWDEBUG        = 33,
		SB_DEBUG_MENU_COMMON_FUNC_TOP          = 34,
		SB_DEBUG_MENU_CHECK_BOX                = 35,
		SB_DEBUG_MENU_FLOAT                    = 36,
		SB_DEBUG_MENU_INT32                    = 37,
		SB_DEBUG_MENU_CONSOLE_COMMAND          = 38,
		SB_DEBUG_MENU_STRING                   = 39,
		SB_DEBUG_MENU_COMBO_BOX                = 40,
		SB_DEBUG_MENU_BUTTON                   = 41,
		SB_DEBUG_MENU_LIST                     = 42,
		SB_DEBUG_MENU_CHILD                    = 43,
		SB_DEBUG_MENU_TEXT                     = 44,
		SB_DEBUG_MENU_SPECIFIC_FUNC_TOP        = 45,
		SB_DEBUG_MENU_CAMERA_DISP_PARAM        = 46,
		SB_DEBUG_MENU_EFFECT_VISIBLE_PARAM     = 47,
		SB_DEBUG_MENU_EFFECT_TRANSPARENT_PARAM = 48,
		SB_DEBUG_MENU_EFFECT_DISP_PARAM        = 49,
		SB_DEBUG_MENU_ACCEPTED_QUEST_ACTION    = 50,
		SB_DEBUG_MENU_MAX                      = 51
	};

	/**
	 * Enum SkyBlue.ESBSaveGameReturn
	 */
	enum class ESBSaveGameReturn : uint8_t
	{
		SB_SAVE_GAME_SUCCESS          = 0,
		SB_SAVE_GAME_FAILURE          = 1,
		SB_LOAD_GAME_SUCCESS          = 2,
		SB_LOAD_GAME_FAILURE          = 3,
		SB_LOAD_GAME_SEVERAL_FAILURES = 4,
		SB_MAX                        = 5
	};

	/**
	 * Enum SkyBlue.ESBTreasureBoxLotResult
	 */
	enum class ESBTreasureBoxLotResult : uint8_t
	{
		Success                          = 0,
		InternalError                    = 1,
		InvalidData                      = 2,
		ItemStorageSizeOver              = 3,
		InvalidObjectId                  = 4,
		CantLootObjectId                 = 5,
		InvalidMasterTreasureID          = 6,
		TresureLotNoLot                  = 7,
		NotFoundObjectIsServerActor      = 8,
		NotAuthor                        = 9,
		NotServer                        = 10,
		NotPlayer                        = 11,
		NotPlayerState                   = 12,
		CantInteractReach                = 13,
		InvalidMasterData0               = 14,
		InvalidMasterData1               = 15,
		InvalidMasterData2               = 16,
		InvalidMasterData3               = 17,
		InvalidMasterTreasure            = 18,
		ProcessingFieldActor             = 19,
		InvalidMasterDataByItemAndWeapon = 20,
		InternalErrorByDBAccess0         = 21,
		InternalErrorByDBAccess1         = 22,
		InternalErrorByDBAccess2         = 23,
		TresureLotFuncError              = 24,
		NotFoundSpawnObjectId            = 25,
		ProcessingObjectId               = 26,
		MAX                              = 27
	};

	/**
	 * Enum SkyBlue.ESBDestrcutibleType
	 */
	enum class ESBDestrcutibleType : uint8_t
	{
		Normal      = 0,
		EnemyGate   = 1,
		EnemyBuffer = 2,
		TypeMax     = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.ESBDestrcutibleDamageType
	 */
	enum class ESBDestrcutibleDamageType : uint8_t
	{
		All        = 0,
		PlayerOnly = 1,
		EnemyOnly  = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.EStaminaAdjustType
	 */
	enum class EStaminaAdjustType : uint8_t
	{
		Default  = 0,
		Jump     = 1,
		Dash     = 2,
		Skill    = 3,
		NoAdjust = 4,
		Num      = 5,
		MAX      = 6
	};

	/**
	 * Enum SkyBlue.ESBEnemyDropItemType
	 */
	enum class ESBEnemyDropItemType : uint8_t
	{
		Item     = 0,
		Money    = 1,
		Treasure = 2,
		Max      = 3
	};

	/**
	 * Enum SkyBlue.ESBPlayerPresetCarryStates
	 */
	enum class ESBPlayerPresetCarryStates : uint8_t
	{
		NoneCarry = 0,
		ItemBag   = 1,
		Storage   = 2,
		Max       = 3
	};

	/**
	 * Enum SkyBlue.ESBPartyChainComboCountLogType
	 */
	enum class ESBPartyChainComboCountLogType : uint8_t
	{
		None                           = 0,
		BonusStatus_DotHeal            = 1,
		BonusStatus_ReceiveDamageDown  = 2,
		BonusStatus_SuperArmor         = 3,
		BonusStatus_RecastReductionULT = 4,
		MAX                            = 5
	};

	/**
	 * Enum SkyBlue.ESBPlayerSkillPaletteSide
	 */
	enum class ESBPlayerSkillPaletteSide : uint8_t
	{
		Front = 0,
		Back  = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.EGameInput
	 */
	enum class EGameInput : uint8_t
	{
		None                = 0,
		DummyMove           = 1,
		Walk                = 2,
		Dash                = 3,
		DummyAction         = 4,
		MainAction          = 5,
		SubAction           = 6,
		AerialAction        = 7,
		LeftSkill           = 8,
		RightSkill          = 9,
		Skill1              = 10,
		Skill2              = 11,
		Skill3              = 12,
		Skill4              = 13,
		SpecialAction       = 14,
		DodgeAction         = 15,
		DodgeAttack         = 16,
		JumpAction          = 17,
		UkemiAction         = 18,
		CommandDodge        = 19,
		CommandUkemi        = 20,
		SkillCancelStep     = 21,
		ContentAction1      = 22,
		ContentAction2      = 23,
		Skill5              = 24,
		Skill6              = 25,
		Skill7              = 26,
		Skill8              = 27,
		ClassSubActionDummy = 28,
		Reload              = 29,
		GreatGuard          = 30,
		ImagineArts         = 31,
		ImagineArts2        = 32,
		ImagineMount        = 33,
		Interaction         = 34,
		Function_Gamepad    = 35,
		Function_Gamepad2   = 36,
		Function_Keyboard   = 37,
		DummyButton         = 38,
		LeftMouseButton     = 39,
		RightMouseButton    = 40,
		PadUp               = 41,
		PadDown             = 42,
		PadRight            = 43,
		PadLeft             = 44,
		PadL1               = 45,
		PadR1               = 46,
		DummySkill          = 47,
		SkillGuard          = 48,
		SkillCounterBarrier = 49,
		LABEL_NUM           = 50,
		MAX                 = 51
	};

	/**
	 * Enum SkyBlue.ESBHostility
	 */
	enum class ESBHostility : uint8_t
	{
		Unknown            = 0,
		Friendly           = 1,
		Hostility          = 2,
		HostilityNotAttack = 3,
		Max                = 4
	};

	/**
	 * Enum SkyBlue.ESBPlayerPassiveImagineSlotType
	 */
	enum class ESBPlayerPassiveImagineSlotType : uint8_t
	{
		Slot1 = 0,
		Slot2 = 1,
		Slot3 = 2,
		Slot4 = 3,
		Slot5 = 4,
		Max   = 5
	};

	/**
	 * Enum SkyBlue.ESBAbilityValueUnitType
	 */
	enum class ESBAbilityValueUnitType : uint8_t
	{
		Percent     = 0,
		PlusPercent = 1,
		Second      = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBPlayerWalkSpeedType
	 */
	enum class ESBPlayerWalkSpeedType : uint8_t
	{
		None = 0,
		Walk = 1,
		Run  = 2,
		Dash = 3,
		MAX  = 4
	};

	/**
	 * Enum SkyBlue.ESBImagineSummonCharacter
	 */
	enum class ESBImagineSummonCharacter : uint8_t
	{
		None  = 0,
		Mount = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.ESBCheatOshiokiType
	 */
	enum class ESBCheatOshiokiType : uint8_t
	{
		Success       = 0,
		NoGuilty      = 1,
		Disconnection = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.ESBAppearEffectType
	 */
	enum class ESBAppearEffectType : uint8_t
	{
		None         = 0,
		Warp         = 1,
		LocalWarp    = 2,
		Respawn      = 3,
		EngramCannon = 4,
		MAX          = 5
	};

	/**
	 * Enum SkyBlue.ESBAimDirection
	 */
	enum class ESBAimDirection : uint8_t
	{
		None                  = 0,
		Camera                = 1,
		TargetComponent       = 2,
		LockonTargetComponent = 3,
		GuardDirection        = 4,
		Fixed                 = 5,
		MAX                   = 6
	};

	/**
	 * Enum SkyBlue.ESBPlayerPresetType
	 */
	enum class ESBPlayerPresetType : uint8_t
	{
		None       = 0,
		BattleSet  = 1,
		CostumeSet = 2,
		Max        = 3
	};

	/**
	 * Enum SkyBlue.ESBCannotInputType
	 */
	enum class ESBCannotInputType : uint8_t
	{
		AssetLoading      = 0,
		BeforeKeySetup    = 1,
		DisappearEffect   = 2,
		WarpAroundEffect  = 3,
		PerformanceCamera = 4,
		EngramCannon      = 5,
		ShortcutRing      = 6,
		MapEditWindow     = 7,
		DebugMove         = 8,
		MAX               = 9
	};

	/**
	 * Enum SkyBlue.ESBPlayerDamageCollisionTransformType
	 */
	enum class ESBPlayerDamageCollisionTransformType : uint8_t
	{
		None        = 0,
		Stand       = 1,
		LieOnGround = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBKeyConfigAction
	 */
	enum class ESBKeyConfigAction : uint8_t
	{
		None                       = 0,
		Pad_Begin                  = 1,
		Pad_Dash                   = 2,
		Pad_AutoRun                = 3,
		Pad_Jump                   = 4,
		Pad_MainAction             = 5,
		Pad_SubAction              = 6,
		Pad_LeftSkill              = 7,
		Pad_RightSkill             = 8,
		Pad_Skill1                 = 9,
		Pad_Skill2                 = 10,
		Pad_Skill3                 = 11,
		Pad_Skill4                 = 12,
		Pad_SpecialSkill           = 13,
		Pad_Dodge                  = 14,
		Pad_Interaction            = 15,
		Pad_Reload                 = 16,
		Pad_ShortcutRingExeF5      = 17,
		Pad_ShortcutRingExeF6      = 18,
		Pad_ShortcutRingExeF7      = 19,
		Pad_ShortcutRingExeF8      = 20,
		Pad_ShortcutRingExeF9      = 21,
		Pad_ShortcutRingExeF10     = 22,
		Pad_ShortcutRingExeF11     = 23,
		Pad_ShortcutRingExeF12     = 24,
		Pad_ShortcutExec           = 25,
		Pad_ShortcutMoveLeft       = 26,
		Pad_ShortcutMoveRight      = 27,
		Pad_Dummy108               = 28,
		Pad_Dummy109               = 29,
		Pad_MainMenu               = 30,
		Pad_ChatWindow             = 31,
		Pad_ImagineArts            = 32,
		Pad_ImagineArts2           = 33,
		Pad_ImagineMount           = 34,
		Pad_CameraReset            = 35,
		Pad_LockOn                 = 36,
		Pad_Function               = 37,
		Pad_Function2              = 38,
		Pad_Dummy110               = 39,
		Pad_Dummy111               = 40,
		Pad_Dummy112               = 41,
		Pad_Dummy113               = 42,
		Pad_ShortcutRing           = 43,
		Pad_Dummy114               = 44,
		Pad_WholeMap               = 45,
		Pad_CameraZoomIn           = 46,
		Pad_CameraZoomOut          = 47,
		Pad_PushPin                = 48,
		Pad_PhotoMode              = 49,
		Pad_ScreenShot             = 50,
		Pad_Hud                    = 51,
		Pad_QuestHudChange         = 52,
		Pad_KeyGuide               = 53,
		Pad_SkillPaletteChange     = 54,
		Pad_NowParty               = 55,
		Pad_ContentAction1         = 56,
		Pad_ContentAction2         = 57,
		Pad_ClassSubActionDummy    = 58,
		Pad_End                    = 59,
		KB_Begin                   = 60,
		KB_MoveFront               = 61,
		KB_MoveBack                = 62,
		KB_MoveLeft                = 63,
		KB_MoveRight               = 64,
		KB_Walk                    = 65,
		KB_Dash                    = 66,
		KB_AutoRun                 = 67,
		KB_Jump                    = 68,
		KB_OrientToCamera          = 69,
		KB_MainAction              = 70,
		KB_SubAction               = 71,
		KB_LeftSkill               = 72,
		KB_RightSkill              = 73,
		KB_Skill1                  = 74,
		KB_Skill2                  = 75,
		KB_Skill3                  = 76,
		KB_Skill4                  = 77,
		KB_SpecialSkill            = 78,
		KB_Dodge                   = 79,
		KB_Interaction             = 80,
		KB_Reload                  = 81,
		KB_ShortcutRingExeF5       = 82,
		KB_ShortcutRingExeF6       = 83,
		KB_ShortcutRingExeF7       = 84,
		KB_ShortcutRingExeF8       = 85,
		KB_ShortcutRingExeF9       = 86,
		KB_ShortcutRingExeF10      = 87,
		KB_ShortcutRingExeF11      = 88,
		KB_ShortcutRingExeF12      = 89,
		KB_ShortcutExec            = 90,
		KB_ShortcutMoveLeft        = 91,
		KB_ShortcutMoveRight       = 92,
		Pad_Dummy123               = 93,
		Pad_Dummy124               = 94,
		KB_MainMenu                = 95,
		KB_ChatWindow              = 96,
		KB_ImagineArts             = 97,
		KB_ImagineArts2            = 98,
		KB_ImagineMount            = 99,
		KB_CameraPitchUp           = 100,
		KB_CameraPitchDown         = 101,
		KB_CameraYawLeft           = 102,
		KB_CameraYawRight          = 103,
		KB_CameraZoomIn            = 104,
		KB_CameraZoomOut           = 105,
		KB_CameraReset             = 106,
		KB_LockOn                  = 107,
		KB_LockOnTargetRight       = 108,
		KB_LockOnTargetLeft        = 109,
		KB_Function                = 110,
		KB_QuickAccess_MyCharacter = 111,
		KB_QuickAccess_Inventory   = 112,
		KB_QuickAccess_Quest       = 113,
		KB_QuickAccess_Map         = 114,
		KB_QuickAccess_Library     = 115,
		KB_QuickAccess_Contents    = 116,
		KB_QuickAccess_Party       = 117,
		KB_QuickAccess_Guild       = 118,
		KB_QuickAccess_Gacha       = 119,
		KB_QuickAccess_Option      = 120,
		KB_QuickAccess_Photo       = 121,
		KB_QuickAccess_Hud         = 122,
		KB_QuickAccess_Communicate = 123,
		Pad_Dummy125               = 124,
		Pad_Dummy126               = 125,
		Pad_Dummy127               = 126,
		Pad_Dummy128               = 127,
		KB_ShortcutRing            = 128,
		Pad_Dummy129               = 129,
		KB_WholeMap                = 130,
		KB_Screenshot              = 131,
		KB_BookMarkRegist          = 132,
		KB_BookMarkBegin           = 133,
		KB_BookMark1               = 134,
		KB_BookMark2               = 135,
		KB_BookMark3               = 136,
		KB_BookMark4               = 137,
		KB_BookMark5               = 138,
		KB_BookMark6               = 139,
		KB_BookMark7               = 140,
		KB_BookMark8               = 141,
		KB_BookMark9               = 142,
		KB_BookMark10              = 143,
		KB_BookMark11              = 144,
		KB_BookMark12              = 145,
		KB_BookMark13              = 146,
		KB_BookMark14              = 147,
		KB_BookMark15              = 148,
		KB_BookMark16              = 149,
		KB_BookMark17              = 150,
		KB_BookMark18              = 151,
		KB_BookMark19              = 152,
		KB_BookMark20              = 153,
		KB_BookMark21              = 154,
		KB_BookMark22              = 155,
		KB_BookMark23              = 156,
		KB_BookMark24              = 157,
		KB_BookMarkEnd             = 158,
		KB_Pushpin                 = 159,
		KB_PhotoMode               = 160,
		KB_QuestHudChange          = 161,
		KB_KeyGuide                = 162,
		KB_SkillPaletteChange      = 163,
		KB_NowParty                = 164,
		KB_ContentAction1          = 165,
		KB_ContentAction2          = 166,
		KB_ClassSubActionDummy     = 167,
		KB_End                     = 168,
		Max                        = 169
	};

	/**
	 * Enum SkyBlue.ESBArrayLogicalOperator
	 */
	enum class ESBArrayLogicalOperator : uint8_t
	{
		None = 0,
		AND  = 1,
		OR   = 2,
		XOR  = 3,
		MAX  = 4
	};

	/**
	 * Enum SkyBlue.ESBPlayerSkillActionType
	 */
	enum class ESBPlayerSkillActionType : uint8_t
	{
		None            = 0,
		MainAction      = 1,
		SubAction       = 2,
		AerialAction    = 3,
		TacticalSkill   = 4,
		SpecialSkill    = 5,
		DodgeAction     = 6,
		ImagineArts     = 7,
		EnemyStepJump   = 8,
		UkemiAction     = 9,
		SkillCancelStep = 10,
		ContentAction   = 11,
		Dummy           = 12,
		Dummy01         = 13,
		MAX             = 14
	};

	/**
	 * Enum SkyBlue.ESBMagnitudeRelation
	 */
	enum class ESBMagnitudeRelation : uint8_t
	{
		None           = 0,
		Less           = 1,
		LessOrEqual    = 2,
		Equal          = 3,
		NotEqual       = 4,
		GreaterOrEqual = 5,
		Greater        = 6,
		AlwaysTrue     = 7,
		AlwaysFalse    = 8,
		Num            = 9,
		MAX            = 10
	};

	/**
	 * Enum SkyBlue.ESBConditionCheckType
	 */
	enum class ESBConditionCheckType : uint8_t
	{
		None                               = 0,
		SkillLevel                         = 1,
		EquippedPassiveSkill               = 2,
		PassiveSkillLevel                  = 3,
		EquippedPassiveSkillLevel          = 4,
		LastSetupSkill                     = 5,
		SkillCastCount                     = 6,
		LastSkillCastIndex                 = 7,
		SkillChargeLevel                   = 8,
		LastCastSkillChargeLevel           = 9,
		LastCanceledSkillType              = 10,
		DodgeSucceeded                     = 11,
		DodgeSucceededDodgeAttack          = 12,
		HasAerialAttackBonus               = 13,
		ActiveStatusGroup                  = 14,
		ActiveStatusFlag                   = 15,
		ActiveOnlyPlayerStatus             = 16,
		ActiveStatusOnTarget               = 17,
		ActiveStatusGroupOnTarget          = 18,
		ActiveStatusByAttacker             = 19,
		ActiveStatusGroupByAttacker        = 20,
		SelfNegativeStatus                 = 21,
		TargetNegativeStatus               = 22,
		TargetLastDamageAttackID           = 23,
		SelfDeactivatedNegativeStatusTime  = 24,
		AnimTag                            = 25,
		PlayerCharacter                    = 26,
		PlayerElementType                  = 27,
		BossEnemyType                      = 28,
		CanUseShield                       = 29,
		RemainHitPointRate                 = 30,
		PlayerNoDamageTimeAtFindByEnemy    = 31,
		ImagineArtsKeepPress               = 32,
		ImagineArtsStackBNum               = 33,
		ProjectileBImaineStackBNumCache    = 34,
		LastSetupSkillImaginStackBNum      = 35,
		BSK_ComboGaugeAmount               = 36,
		MGC_MovingFireBurner               = 37,
		SMA_BallShootHitCount              = 38,
		SMA_SkillAttackLevel               = 39,
		SMA_ConsumedBoostCartridge         = 40,
		SMA_LastBallShootHitCountInSkill   = 41,
		SMA_LastSetupQuickReload           = 42,
		LAN_AllLancerMark                  = 43,
		BLS_RegularSkillLastCastGaugeLevel = 44,
		BLS_RegularSkillCurrentGaugeLevel  = 45,
		BLS_HatTrickWeakPointHit           = 46,
		RBL_ShieldDashElapsedTime          = 47,
		PFM_FeverTime                      = 48,
		LAN_LancerMarkExceptAll            = 49,
		LAN_AnyLancerMark                  = 50,
		LAN_ResonanceSpearSpreading        = 51,
		PerkInterlockPassiveSkillActive    = 52,
		Num                                = 53,
		MAX                                = 54
	};

	/**
	 * Enum SkyBlue.ESBRoleType
	 */
	enum class ESBRoleType : uint8_t
	{
		None      = 0,
		Attacker  = 1,
		Defender  = 2,
		Supporter = 3,
		Max       = 4
	};

	/**
	 * Enum SkyBlue.ESBJankenHandType
	 */
	enum class ESBJankenHandType : uint8_t
	{
		Hand_None = 0,
		Rock      = 1,
		Scissors  = 2,
		Paper     = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBJointGestureStatusType
	 */
	enum class ESBJointGestureStatusType : uint8_t
	{
		JointGestureStatus_None                             = 0,
		JointGestureStatus_HandHolding_Wait                 = 1,
		JointGestureStatus_HandHolding_WaitStart            = 2,
		JointGestureStatus_HandHolding_Start                = 3,
		JointGestureStatus_HandHolding_Play                 = 4,
		JointGestureStatus_Janken_Wait                      = 5,
		JointGestureStatus_Janken_WaitStart                 = 6,
		JointGestureStatus_Janken_Start                     = 7,
		JointGestureStatus_Janken_Play                      = 8,
		JointGestureStatus_Janken_Selected                  = 9,
		JointGestureStatus_Janken_GetTargetHandType_Wait    = 10,
		JointGestureStatus_Janken_GetTargetHandType_Success = 11,
		JointGestureStatus_Janken_OnlyMeResult              = 12,
		JointGestureStatus_Janken_ResultStart               = 13,
		JointGestureStatus_MAX                              = 14
	};

	/**
	 * Enum SkyBlue.ESBAwardSortType
	 */
	enum class ESBAwardSortType : uint8_t
	{
		Default_Asc  = 0,
		Default_Desc = 1,
		Default_MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBLevelBuddyVoiceCondition
	 */
	enum class ESBLevelBuddyVoiceCondition : uint8_t
	{
		DungeonStart = 0,
		BattleStart  = 1,
		AreaStart    = 2,
		AreaClear    = 3,
		QuestFailed  = 4,
		MAX          = 5
	};

	/**
	 * Enum SkyBlue.ESBTelopType
	 */
	enum class ESBTelopType : uint8_t
	{
		TelopType_None                 = 0,
		TelopType_Type1                = 1,
		TelopType_Type2                = 2,
		TelopType_Type3                = 3,
		TelopType_LevelUp              = 4,
		TelopType_InterruptQuestFailed = 5,
		TelopType_GameOver             = 6,
		TelopType_Finish               = 7,
		TelopType_Clear                = 8,
		TelopType_Challenge            = 9,
		TelopType_Mission              = 10,
		TelopType_ReadyGo              = 11,
		TelopType_Normal               = 12,
		TelopType_Proficiency          = 13,
		TelopType_MAX                  = 14
	};

	/**
	 * Enum SkyBlue.ESBTelopPlayType
	 */
	enum class ESBTelopPlayType : uint8_t
	{
		TelopPlayType_None                   = 0,
		TelopPlayType_QuestAccept            = 1,
		TelopPlayType_QuestUpdate            = 2,
		TelopPlayType_QuestClear             = 3,
		TelopPlayType_InterruptQuestAccept   = 4,
		TelopPlayType_InterruptQuestClear    = 5,
		TelopPlayType_InterruptQuestFailed   = 6,
		TelopPlayType_InterruptQuestStepUp   = 7,
		TelopPlayType_RaidBattleStart        = 8,
		TelopPlayType_RaidBattleClear        = 9,
		TelopPlayType_RaidBattleFailed       = 10,
		TelopPlayType_ClassLevelUp           = 11,
		TelopPlayType_LearningSkill          = 12,
		TelopPlayType_AdventureBoardClear    = 13,
		TelopPlayType_AdventureBoardGoal     = 14,
		TelopPlayType_AdventureBoardComplate = 15,
		TelopPlayType_TowerSurvaivalStart    = 16,
		TelopPlayType_ArenaMissionStart      = 17,
		TelopPlayType_ArenaMissionSuccess    = 18,
		TelopPlayType_ArenaMissionFailed     = 19,
		TelopPlayType_TimeOver               = 20,
		TelopPlayType_MissionFailed          = 21,
		TelopPlayType_MissionFailed_Raid     = 22,
		TelopPlayType_MissionFailed_Tower    = 23,
		TelopPlayType_Finish                 = 24,
		TelopPlayType_DungeonClear           = 25,
		TelopPlayType_FloorClear             = 26,
		TelopPlayType_TowerSurvaivalClear    = 27,
		TelopPlayType_MissionClear           = 28,
		TelopPlayType_ArenaClear             = 29,
		TelopPlayType_ReadyGo                = 30,
		TelopPlayType_BattleAreaStart        = 31,
		TelopPlayType_BattleAreaClear        = 32,
		TelopPlayType_TimeAttackBackToStart  = 33,
		TelopPlayType_DxBattleStart          = 34,
		TelopPlayType_DxBattleNormalPhase    = 35,
		TelopPlayType_DxBattleClear          = 36,
		TelopPlayType_DxBattleTimeOverClear  = 37,
		TelopPlayType_DxBattleFailed         = 38,
		TelopPlayType_DxBattleStartJingle    = 39,
		TelopPlayType_DxBattleRest           = 40,
		TelopPlayType_DxBattleMidBoss        = 41,
		TelopPlayType_DxBattleWallHP         = 42,
		TelopPlayType_DxBattleWallHP50       = 43,
		TelopPlayType_DxBattleWallHP20       = 44,
		TelopPlayType_DxBattleWallHP10       = 45,
		TelopPlayType_DxBattleWallHP05       = 46,
		TelopPlayType_DxBattleAttacked       = 47,
		TelopPlayType_DxBattleBoss           = 48,
		TelopPlayType_DxBattleSupplier       = 49,
		TelopPlayType_DxBattleGate           = 50,
		TelopPlayType_DxBattleSpawnedEnemy   = 51,
		TelopPlayType_DxBattleLastPhase      = 52,
		TelopPlayType_SpawnSupplier          = 53,
		TelopPlayType_SksBattleRush          = 54,
		TelopPlayType_SksBattleMinTelop      = 55,
		TelopPlayType_SksBattle30Sec         = 56,
		TelopPlayType_HintSwitch             = 57,
		TelopPlayType_OpenBarrier            = 58,
		TelopPlayType_Proficiency            = 59,
		TelopPlayType_EraseBarrier           = 60,
		TelopPlayType_DHCBattleNewRecord     = 61,
		TelopPlayType_DHCBattleFinish        = 62,
		TelopPlayType_SignalLighting         = 63,
		TelopPlayType_SignalDoor             = 64,
		TelopPlayType_ExpBonus               = 65,
		TelopPlayType_SkillReversePallet     = 66,
		TelopPlayType_StartNFTArea           = 67,
		TelopPlayType_EndNFTArea             = 68,
		TelopPlayType_MAX                    = 69
	};

	/**
	 * Enum SkyBlue.EDigitalSignageDataType
	 */
	enum class EDigitalSignageDataType : uint8_t
	{
		PackegeIndividualData   = 0,
		PackegeConsolidatedData = 1,
		NetworkIndividualData   = 2,
		NetworkConsolidatedData = 3,
		Num                     = 4,
		MAX                     = 5
	};

	/**
	 * Enum SkyBlue.EFieldStatus
	 */
	enum class EFieldStatus : uint8_t
	{
		Available         = 0,
		Unavailable       = 1,
		Visible           = 2,
		Visible_NoDispose = 3,
		Invisible         = 4,
		MAX               = 5
	};

	/**
	 * Enum SkyBlue.ESBPlayerWarpType
	 */
	enum class ESBPlayerWarpType : uint8_t
	{
		Unknown        = 0,
		PartyMigration = 1,
		Confluence     = 2,
		MAX            = 3
	};

	/**
	 * Enum SkyBlue.ESBPreJoinMode
	 */
	enum class ESBPreJoinMode : uint8_t
	{
		Invalid            = 0,
		First              = 1,
		AnyMap             = 2,
		PreviousMap        = 3,
		Friend             = 4,
		Migration          = 5,
		AnyMapKeepLocation = 6,
		JumpTarget         = 7,
		RejoinParty        = 8,
		MAX                = 9
	};

	/**
	 * Enum SkyBlue.ESpawnedBuddyResult
	 */
	enum class ESpawnedBuddyResult : uint8_t
	{
		Success                = 0,
		BuddyAlreadyExist      = 1,
		InvalidPlayerCharacter = 2,
		InvalidGameState       = 3,
		InvalidEnemySpawner    = 4,
		InvalidSpawnedBuddy    = 5,
		AnotherError           = 6,
		MAX                    = 7
	};

	/**
	 * Enum SkyBlue.ESBMapErrorCode
	 */
	enum class ESBMapErrorCode : uint8_t
	{
		SUCCESS       = 0,
		HIT_NG_WORD   = 1,
		UNKNOWN_ERROR = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.ENotificationDialogStatus
	 */
	enum class ENotificationDialogStatus : uint8_t
	{
		Close   = 0,
		Open    = 1,
		Pending = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBRecoverRewardPlusCountResult
	 */
	enum class ESBRecoverRewardPlusCountResult : uint8_t
	{
		Success                                         = 0,
		PreRecoveryCountIsGraterThanOrEqualToUpperLimit = 1,
		NotEnoughTickets                                = 2,
		UnknownFailure                                  = 3,
		MAX                                             = 4
	};

	/**
	 * Enum SkyBlue.ESBOperateMode
	 */
	enum class ESBOperateMode : uint8_t
	{
		MouseAndKeyboard = 0,
		Gamepad          = 1,
		Max              = 2
	};

	/**
	 * Enum SkyBlue.ESBGodModeType
	 */
	enum class ESBGodModeType : uint8_t
	{
		GameMode = 0,
		User     = 1,
		Admin    = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBMoveInputCommandInterval
	 */
	enum class ESBMoveInputCommandInterval : uint8_t
	{
		None   = 0,
		Short  = 1,
		Normal = 2,
		Long   = 3,
		MAX    = 4
	};

	/**
	 * Enum SkyBlue.ESBKeyConfigFloatParam
	 */
	enum class ESBKeyConfigFloatParam : uint8_t
	{
		None                                 = 0,
		Pad_LeftStickInputThresholdX         = 1,
		Pad_LeftStickInputStrengthX          = 2,
		Pad_LeftStickInputThresholdY         = 3,
		Pad_LeftStickInputStrengthY          = 4,
		Pad_RightStickInputThresholdX        = 5,
		Pad_RightStickInputStrengthX         = 6,
		Pad_RightStickInputThresholdY        = 7,
		Pad_RightStickInputStrengthY         = 8,
		Pad_CameraSpeedRateYaw               = 9,
		Pad_CameraSpeedRatePitch             = 10,
		Pad_AimAssist_FitTargetStrength      = 11,
		Pad_AimAssist_FollowTargetStrength   = 12,
		Pad_AimAssist_CameraBrakeStrength    = 13,
		KB_CameraSpeedRateYaw                = 14,
		KB_CameraSpeedRatePitch              = 15,
		KB_AimAssist_FitTargetStrength       = 16,
		KB_AimAssist_FollowTargetStrength    = 17,
		KB_AimAssist_CameraBrakeStrength     = 18,
		Mouse_InputStrength                  = 19,
		Mouse_AimAssist_FitTargetStrength    = 20,
		Mouse_AimAssist_FollowTargetStrength = 21,
		Mouse_AimAssist_CameraBrakeStrength  = 22,
		Max                                  = 23
	};

	/**
	 * Enum SkyBlue.ESBKeyConfigMouseKey
	 */
	enum class ESBKeyConfigMouseKey : uint8_t
	{
		None         = 0,
		LeftButton   = 1,
		RightButton  = 2,
		CenterButton = 3,
		ThumbButton1 = 4,
		ThumbButton2 = 5,
		WheelUp      = 6,
		WheelDown    = 7,
		Max          = 8
	};

	/**
	 * Enum SkyBlue.ESBKeyConfigKeyboardKey
	 */
	enum class ESBKeyConfigKeyboardKey : uint8_t
	{
		None               = 0,
		A                  = 1,
		B                  = 2,
		C                  = 3,
		D                  = 4,
		E                  = 5,
		F                  = 6,
		G                  = 7,
		H                  = 8,
		I                  = 9,
		J                  = 10,
		K                  = 11,
		L                  = 12,
		M                  = 13,
		N                  = 14,
		O                  = 15,
		P                  = 16,
		Q                  = 17,
		R                  = 18,
		S                  = 19,
		T                  = 20,
		U                  = 21,
		V                  = 22,
		W                  = 23,
		X                  = 24,
		Y                  = 25,
		Z                  = 26,
		Escape             = 27,
		Hyphen             = 28,
		Caret              = 29,
		BackSlash          = 30,
		Backspace          = 31,
		Tab                = 32,
		AtSign             = 33,
		LeftSquareBracket  = 34,
		CapsLock           = 35,
		SemiColon          = 36,
		Colon              = 37,
		RightSquareBracket = 38,
		Comma              = 39,
		Period             = 40,
		Slash              = 41,
		Space              = 42,
		Enter              = 43,
		ScrollLock         = 44,
		Pause              = 45,
		Insert             = 46,
		Home               = 47,
		PageUp             = 48,
		Delete             = 49,
		End                = 50,
		PageDown           = 51,
		ArrowUp            = 52,
		ArrowDown          = 53,
		ArrowLeft          = 54,
		ArrowRight         = 55,
		LeftShift          = 56,
		RightShift         = 57,
		Shift              = 58,
		LeftControl        = 59,
		RightControl       = 60,
		Control            = 61,
		LeftAlt            = 62,
		RightAlt           = 63,
		Alt                = 64,
		F1                 = 65,
		F2                 = 66,
		F3                 = 67,
		F4                 = 68,
		F5                 = 69,
		F6                 = 70,
		F7                 = 71,
		F8                 = 72,
		F9                 = 73,
		F10                = 74,
		F11                = 75,
		F12                = 76,
		FullKey1           = 77,
		FullKey2           = 78,
		FullKey3           = 79,
		FullKey4           = 80,
		FullKey5           = 81,
		FullKey6           = 82,
		FullKey7           = 83,
		FullKey8           = 84,
		FullKey9           = 85,
		FullKey0           = 86,
		TenKeySlash        = 87,
		TenKeyAsterisk     = 88,
		TenKeyHyphen       = 89,
		TenKeyPlus         = 90,
		TenKey1            = 91,
		TenKey2            = 92,
		TenKey3            = 93,
		TenKey4            = 94,
		TenKey5            = 95,
		TenKey6            = 96,
		TenKey7            = 97,
		TenKey8            = 98,
		TenKey9            = 99,
		TenKey0            = 100,
		PrintScreen        = 101,
		Max                = 102
	};

	/**
	 * Enum SkyBlue.ESBKeyConfigGamepadKey
	 */
	enum class ESBKeyConfigGamepadKey : uint8_t
	{
		None                = 0,
		X                   = 1,
		Y                   = 2,
		A                   = 3,
		B                   = 4,
		L1                  = 5,
		L2                  = 6,
		L3                  = 7,
		R1                  = 8,
		R2                  = 9,
		R3                  = 10,
		Start               = 11,
		Select              = 12,
		Direction_Up        = 13,
		Direction_Down      = 14,
		Direction_Left      = 15,
		Direction_Right     = 16,
		TouchPad            = 17,
		Fn_Begin            = 18,
		Fn_X                = 19,
		Fn_Y                = 20,
		Fn_A                = 21,
		Fn_B                = 22,
		Fn_L3               = 23,
		Fn_R3               = 24,
		Fn_Direction_Up     = 25,
		Fn_Direction_Down   = 26,
		Fn_Direction_Left   = 27,
		Fn_Direction_Right  = 28,
		Fn_Start            = 29,
		Fn_Select           = 30,
		Fn_TouchPad         = 31,
		Fn_End              = 32,
		Fn2_Begin           = 33,
		Fn2_X               = 34,
		Fn2_Y               = 35,
		Fn2_A               = 36,
		Fn2_B               = 37,
		Fn2_L3              = 38,
		Fn2_R3              = 39,
		Fn2_Direction_Up    = 40,
		Fn2_Direction_Down  = 41,
		Fn2_Direction_Left  = 42,
		Fn2_Direction_Right = 43,
		Fn2_Start           = 44,
		Fn2_Select          = 45,
		Fn2_TouchPad        = 46,
		Fn2_End             = 47,
		Fn3                 = 48,
		Max                 = 49
	};

	/**
	 * Enum SkyBlue.EClientExitStatus
	 */
	enum class EClientExitStatus : uint8_t
	{
		Default         = 0,
		LogoutEnd       = 1,
		CharacterSelect = 2,
		KickAFK         = 3,
		NetworkError    = 4,
		MAX             = 5
	};

	/**
	 * Enum SkyBlue.ESBCommandMenuType
	 */
	enum class ESBCommandMenuType : uint8_t
	{
		Unknown      = 0,
		MyCharacter  = 1,
		Inventory    = 2,
		Quest        = 3,
		Map          = 4,
		Communicate  = 5,
		Library      = 6,
		SeasonPass   = 7,
		Matching     = 8,
		Party        = 9,
		DungeonParty = 10,
		Option       = 11,
		ExitGame     = 12,
		CharSelect   = 13,
		Guild        = 14,
		RmShop       = 15,
		Letter       = 16,
		MAX          = 17
	};

	/**
	 * Enum SkyBlue.ESBPlatformId
	 */
	enum class ESBPlatformId : uint8_t
	{
		PlatformId_Invalid = 0,
		PlatformId_PC      = 1,
		PlatformId_PS5     = 2,
		PlatformId_XBOX    = 3,
		PlatformId_Max     = 4
	};

	/**
	 * Enum SkyBlue.ESBUserPrivileges
	 */
	enum class ESBUserPrivileges : uint8_t
	{
		CanPlay                    = 0,
		CanPlayOnline              = 1,
		CanCommunicateOnline       = 2,
		CanUseUserGeneratedContent = 3,
		CanUserCrossPlay           = 4,
		CanGameDvr                 = 5,
		MAX                        = 6
	};

	/**
	 * Enum SkyBlue.ESBDungeonScriptType
	 */
	enum class ESBDungeonScriptType : uint8_t
	{
		None       = 0,
		Intro      = 1,
		BossPre    = 2,
		ResultPre  = 3,
		ResultPost = 4,
		Max        = 5
	};

	/**
	 * Enum SkyBlue.ESBDungeonNormalProgress
	 */
	enum class ESBDungeonNormalProgress : uint8_t
	{
		WaitJoin  = 0,
		WaitStart = 1,
		Playing   = 2,
		Cleared   = 3,
		WaitExit  = 4,
		GameOver  = 5,
		MAX       = 6
	};

	/**
	 * Enum SkyBlue.ESBDungeonClearCondition
	 */
	enum class ESBDungeonClearCondition : uint8_t
	{
		PostLoad            = 0,
		GameStart           = 1,
		PreResult           = 2,
		PostResult          = 3,
		PreExit             = 4,
		EnemySpawned        = 5,
		EnemyDead           = 6,
		EnemyDestroy        = 7,
		EnemyWaveFinished   = 8,
		OneEnemyDead        = 9,
		OverlapSomePlayer   = 10,
		OverlapAllPlayers   = 11,
		InteractionSw       = 12,
		BattleAreaStart     = 13,
		BattleAreaClear     = 14,
		Destructible        = 15,
		AllPlayersScriptEnd = 16,
		ScriptCheck         = 17,
		MAX                 = 18
	};

	/**
	 * Enum SkyBlue.ESBDungeonProcessStatus
	 */
	enum class ESBDungeonProcessStatus : uint8_t
	{
		Wait    = 0,
		Ready   = 1,
		Cleared = 2,
		Failed  = 3,
		None    = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBPartyType
	 */
	enum class ESBPartyType : uint8_t
	{
		Persistent = 0,
		Instant    = 1,
		Unknown    = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBOnlineStatus
	 */
	enum class ESBOnlineStatus : uint8_t
	{
		Online             = 0,
		PlayingDemo        = 1,
		InParty            = 2,
		BuildingParty      = 3,
		ApplyingInstance   = 4,
		InInstance         = 5,
		Busy               = 6,
		AFK                = 7,
		PlayInterruptQuest = 8,
		Max                = 9
	};

	/**
	 * Enum SkyBlue.ESBDungeonEvaluation
	 */
	enum class ESBDungeonEvaluation : uint8_t
	{
		None      = 0,
		Gold      = 1,
		Silver    = 2,
		Bronze    = 3,
		Tower_0f  = 4,
		Tower_35f = 5,
		Tower_30f = 6,
		Tower_20f = 7,
		Tower_10f = 8,
		Max       = 9
	};

	/**
	 * Enum SkyBlue.EArenaMissionAchieveType
	 */
	enum class EArenaMissionAchieveType : uint8_t
	{
		Unknown          = 0,
		DealDamage       = 1,
		DealDamageAmount = 2,
		CriticalAmount   = 3,
		HitSkill         = 4,
		KillTargetEnemy  = 5,
		SummonImagine    = 6,
		CastSkill        = 7,
		BreakAction      = 8,
		AbsoluteDefense  = 9,
		MAX              = 10
	};

	/**
	 * Enum SkyBlue.ESBDungeonCameraDemoStatus
	 */
	enum class ESBDungeonCameraDemoStatus : uint8_t
	{
		Ready   = 0,
		Working = 1,
		End     = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ETowerChallengeAchieveType
	 */
	enum class ETowerChallengeAchieveType : uint8_t
	{
		Unknown           = 0,
		KillAllEnemy      = 1,
		KillTargetEnemy   = 2,
		DestructObject    = 3,
		CorrectItem       = 4,
		FreeCounter       = 5,
		NoCounterFreeText = 6,
		MAX               = 7
	};

	/**
	 * Enum SkyBlue.ESBBDFObjectType
	 */
	enum class ESBBDFObjectType : uint8_t
	{
		Default  = 0,
		RedBlack = 1,
		Count    = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBBDFObjectManagerState
	 */
	enum class ESBBDFObjectManagerState : uint8_t
	{
		None         = 0,
		BeginDeploy  = 1,
		EndDeploy    = 2,
		BeginCollect = 3,
		OnInhaled    = 4,
		EndCollect   = 5,
		MAX          = 6
	};

	/**
	 * Enum SkyBlue.ESBEnemyWalkingMode
	 */
	enum class ESBEnemyWalkingMode : uint8_t
	{
		Walk = 0,
		Run  = 1,
		Dash = 2,
		MAX  = 3
	};

	/**
	 * Enum SkyBlue.ESBContentLockType
	 */
	enum class ESBContentLockType : uint8_t
	{
		Unknown     = 0,
		Warp        = 1,
		MyCharacter = 2,
		Inventory   = 3,
		Quest       = 4,
		Map         = 5,
		Library     = 6,
		Contents    = 7,
		Party       = 8,
		Guild       = 9,
		Gacha       = 10,
		Option      = 11,
		Photo       = 12,
		Hud         = 13,
		Communicate = 14,
		MAX         = 15
	};

	/**
	 * Enum SkyBlue.EShopType
	 */
	enum class EShopType : uint8_t
	{
		Item     = 0,
		Weapon   = 1,
		Exchange = 2,
		TAbiliry = 3,
		MAX      = 4
	};

	/**
	 * Enum SkyBlue.EUIZOrder
	 */
	enum class EUIZOrder : uint8_t
	{
		DamageUI                = 0,
		TargetCursor            = 1,
		BalloonWindow           = 2,
		BalloonWindowSelf       = 3,
		HUD_Layer1              = 4,
		HUD_Layer2              = 5,
		HUD_Layer3              = 6,
		HUD_Layer4              = 7,
		HUD_Layer5              = 8,
		HUD_Layer6              = 9,
		HUD_Layer7              = 10,
		HUD_Layer8              = 11,
		HUD_Layer9              = 12,
		HUD_Layer10             = 13,
		HUD_Layer11             = 14,
		HUD_Layer12             = 15,
		HUD_Layer13             = 16,
		EngramCannonKeyHelp     = 17,
		TickerMessage           = 18,
		TextWindow              = 19,
		DungeonFinder           = 20,
		QuestUpdateProgressInfo = 21,
		QuestClearInfo          = 22,
		DropDownText            = 23,
		LevelUpUI               = 24,
		QuestBoard              = 25,
		QuestReportWindow       = 26,
		MainMenu                = 27,
		SubMenu                 = 28,
		Menu_Layer3             = 29,
		Menu_Layer4             = 30,
		Menu_Layer5             = 31,
		Menu_Layer6             = 32,
		Menu_Layer7             = 33,
		Menu_Layer8             = 34,
		Menu_Layer9             = 35,
		Menu_Layer10            = 36,
		Menu_Layer11            = 37,
		Menu_Layer12            = 38,
		Menu_Layer13            = 39,
		Menu_Layer14            = 40,
		Menu_Layer15            = 41,
		Menu_Layer16            = 42,
		Menu_Layer17            = 43,
		Menu_Layer18            = 44,
		Menu_Layer19            = 45,
		Notifications           = 46,
		MyMoneyUI               = 47,
		QuestJingle             = 48,
		YesNoPopup              = 49,
		Dialog                  = 50,
		OverlayMessage          = 51,
		FadeFilter              = 52,
		LoadingScreen           = 53,
		SystemMessage           = 54,
		ScreenshotNotification  = 55,
		SystemDialog            = 56,
		WindowsSystemDialog     = 57,
		Debug                   = 58,
		Num                     = 59,
		MAX                     = 60
	};

	/**
	 * Enum SkyBlue.EQuestStatus
	 */
	enum class EQuestStatus : uint8_t
	{
		QuestStatus_Locked      = 0,
		QuestStatus_NotReceived = 1,
		QuestStatus_Proceeding  = 2,
		QuestStatus_Done        = 3,
		QuestStatus_Close       = 4,
		QuestStatus_Num         = 5,
		QuestStatus_MAX         = 6
	};

	/**
	 * Enum SkyBlue.ESBMatchingFailureType
	 */
	enum class ESBMatchingFailureType : uint8_t
	{
		Unknown                                  = 0,
		InternalError                            = 1,
		Canceld                                  = 2,
		TimeOut                                  = 3,
		Declined                                 = 4,
		NotPartyLeader                           = 5,
		TooMuchMember                            = 6,
		AlreadyStartMatchmaking                  = 7,
		OnlyOneSelect                            = 8,
		LackTotalPower                           = 9,
		NotOpenDungeon                           = 10,
		Inviting                                 = 11,
		Recruiting                               = 12,
		InvalidDungeon                           = 13,
		PenaltyNotExpired                        = 14,
		BackfillNotAllowed                       = 15,
		StillPlaying                             = 16,
		NotMeetEntryConditions                   = 17,
		AcessRestricted                          = 18,
		ContentUsageRestrictedDueToNumberOfMails = 19,
		NotEnoughAdventureRankForRaid            = 20,
		MaxCcuExceeded                           = 21,
		MAX                                      = 22
	};

	/**
	 * Enum SkyBlue.EYesNoDialogResult
	 */
	enum class EYesNoDialogResult : uint8_t
	{
		Yes = 0,
		No  = 1,
		MAX = 2
	};

	/**
	 * Enum SkyBlue.ESBUIType
	 */
	enum class ESBUIType : uint8_t
	{
		DamageUI                 = 0,
		TargetCursor             = 1,
		NamePlate                = 2,
		BalloonWindow            = 3,
		BattleHUD                = 4,
		PlayerGauge              = 5,
		SkillPalette             = 6,
		MiniMap                  = 7,
		ChatWindow               = 8,
		AcceptedQuest            = 9,
		TutorialCtrlGuide        = 10,
		LevelUpDisplay           = 11,
		StepList                 = 12,
		PlaceGuide               = 13,
		PlaceGuideDemo           = 14,
		TickerMessage            = 15,
		TextWindow               = 16,
		SelectWindow             = 17,
		DungeonFinder            = 18,
		QuestUpdateProgressInfo  = 19,
		QuestClearInfo           = 20,
		QuestBoard               = 21,
		DungeonResult            = 22,
		MainMenu                 = 23,
		PlayerAim                = 24,
		P006HUD                  = 25,
		P007HUD                  = 26,
		P011HUD                  = 27,
		P012HUD                  = 28,
		P019HUD                  = 29,
		P020HUD                  = 30,
		P021HUD                  = 31,
		HealChainUI              = 32,
		PhotoMode                = 33,
		PhotoPlayerControlMode   = 34,
		EngramCannon             = 35,
		DebugMenu                = 36,
		DebugCameraAdjust        = 37,
		DebugCameraRotationSpeed = 38,
		Num                      = 39,
		MAX                      = 40
	};

	/**
	 * Enum SkyBlue.ESBUIKeyConfigAction
	 */
	enum class ESBUIKeyConfigAction : uint8_t
	{
		Unknown                 = 0,
		MainAction              = 1,
		SubAction               = 2,
		LeftSkill               = 3,
		RightSkill              = 4,
		Skill1                  = 5,
		Skill2                  = 6,
		Skill3                  = 7,
		Skill4                  = 8,
		SpecialSkill            = 9,
		Jump                    = 10,
		Dodge                   = 11,
		Dash                    = 12,
		Interaction             = 13,
		Reload                  = 14,
		CameraReset             = 15,
		CommandMenu             = 16,
		ChatMode                = 17,
		LockOn                  = 18,
		LockOnLeft              = 19,
		LockOnRight             = 20,
		ImagineArts             = 21,
		ImagineArts2            = 22,
		ImagineMount            = 23,
		MoveFront               = 24,
		MoveBack                = 25,
		MoveLeft                = 26,
		MoveRight               = 27,
		Walk                    = 28,
		OrientToCamera          = 29,
		CameraPitchUp           = 30,
		CameraPitchDown         = 31,
		CameraYawLeft           = 32,
		CameraYawRight          = 33,
		CameraZoomIn            = 34,
		CameraZoomOut           = 35,
		ShortcutRingExeF5       = 36,
		ShortcutRingExeF6       = 37,
		ShortcutRingExeF7       = 38,
		ShortcutRingExeF8       = 39,
		ShortcutRingExeF9       = 40,
		ShortcutRingExeF10      = 41,
		ShortcutRingExeF11      = 42,
		ShortcutRingExeF12      = 43,
		ShortcutExec            = 44,
		ShortcutMoveLeft        = 45,
		ShortcutMoveRight       = 46,
		ShortcutPageNext        = 47,
		ShortcutPageBack        = 48,
		Function                = 49,
		Function2               = 50,
		QuickAccess_MyCharacter = 51,
		QuickAccess_Inventory   = 52,
		QuickAccess_Quest       = 53,
		QuickAccess_Map         = 54,
		QuickAccess_Library     = 55,
		QuickAccess_Contents    = 56,
		QuickAccess_Party       = 57,
		QuickAccess_Guild       = 58,
		QuickAccess_Gacha       = 59,
		QuickAccess_Option      = 60,
		QuickAccess_Photo       = 61,
		QuickAccess_Hud         = 62,
		QuickAccess_Communicate = 63,
		AutoRun                 = 64,
		SupplyShortcut1         = 65,
		SupplyShortcut2         = 66,
		SupplyShortcut3         = 67,
		SupplyShortcut4         = 68,
		ShortcutRing            = 69,
		ShortcutRing2           = 70,
		WholeMap                = 71,
		Screenshot              = 72,
		BookMarkRegist          = 73,
		BookMark1               = 74,
		BookMark2               = 75,
		BookMark3               = 76,
		BookMark4               = 77,
		BookMark5               = 78,
		BookMark6               = 79,
		BookMark7               = 80,
		BookMark8               = 81,
		BookMark9               = 82,
		BookMark10              = 83,
		BookMark11              = 84,
		BookMark12              = 85,
		BookMark13              = 86,
		BookMark14              = 87,
		BookMark15              = 88,
		BookMark16              = 89,
		BookMark17              = 90,
		BookMark18              = 91,
		BookMark19              = 92,
		BookMark20              = 93,
		BookMark21              = 94,
		BookMark22              = 95,
		BookMark23              = 96,
		BookMark24              = 97,
		Pushpin                 = 98,
		PhotoMode               = 99,
		QuestHudChange          = 100,
		KeyGuide                = 101,
		SkillPaletteChange      = 102,
		NowParty                = 103,
		ContentAction1          = 104,
		ContentAction2          = 105,
		KeyConfigActionMax      = 106,
		MAX                     = 107
	};

	/**
	 * Enum SkyBlue.EDialogResult
	 */
	enum class EDialogResult : uint8_t
	{
		Ok     = 0,
		Yes    = 1,
		No     = 2,
		Cancel = 3,
		None   = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.EDialogPositionType
	 */
	enum class EDialogPositionType : uint8_t
	{
		Default = 0,
		Type1   = 1,
		Type2   = 2,
		Type3   = 3,
		Type4   = 4,
		Type5   = 5,
		MAX     = 6
	};

	/**
	 * Enum SkyBlue.ESBBhtState
	 */
	enum class ESBBhtState : uint8_t
	{
		DoorClose     = 0,
		DoorOpen      = 1,
		CoolTime      = 2,
		DoorCloseWait = 3,
		MAX           = 4
	};

	/**
	 * Enum SkyBlue.EGuildActivityType
	 */
	enum class EGuildActivityType : uint8_t
	{
		TEAM_CONSTRUCT     = 0,
		INVITE_JOIN        = 1,
		MEMBER_KICKED      = 2,
		WITHDRAW           = 3,
		REACH_ENTRY        = 4,
		UPDATE_TEAMPROFILE = 5,
		RANKUP             = 6,
		CHANGE_ROLE        = 7,
		LEADER_CHANGE      = 8,
		TEAM_RENAME        = 9,
		MEMBER_JOIN        = 10,
		MAX                = 11
	};

	/**
	 * Enum SkyBlue.ESBMailPlatformType
	 */
	enum class ESBMailPlatformType : uint8_t
	{
		MAIL_PLATFORM_NONE = 0,
		MAIL_PLATFORM_PC   = 1,
		MAIL_PLATFORM_PS5  = 2,
		MAIL_PLATFORM_XBOX = 3,
		MAIL_PLATFORM_NSW  = 4,
		MAIL_PLATFORM_MAX  = 5
	};

	/**
	 * Enum SkyBlue.ESBMailType
	 */
	enum class ESBMailType : uint8_t
	{
		MailType_All        = 0,
		MailType_Management = 1,
		MailType_System     = 2,
		MailType_Avator     = 3,
		MailType_StorageBox = 4,
		MailType_MAX        = 5
	};

	/**
	 * Enum SkyBlue.ESBMailSortType
	 */
	enum class ESBMailSortType : uint8_t
	{
		DayTime_Desc = 0,
		DayTime_Asc  = 1,
		Sender_Asc   = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBMailFilterType
	 */
	enum class ESBMailFilterType : uint8_t
	{
		NoRead     = 0,
		Protcted   = 1,
		Important  = 2,
		System     = 3,
		GameMaster = 4,
		Transfer   = 5,
		Transable  = 6,
		Attached   = 7,
		Account    = 8,
		Character  = 9,
		Other      = 10,
		MAX        = 11
	};

	/**
	 * Enum SkyBlue.EJingleType
	 */
	enum class EJingleType : uint8_t
	{
		None          = 0,
		TUTORIAL_HELP = 1,
		MAX           = 2
	};

	/**
	 * Enum SkyBlue.ESBConsentListSortType
	 */
	enum class ESBConsentListSortType : uint8_t
	{
		Sort_Desc = 0,
		Sort_Asc  = 1,
		Sort_MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBContactListSortType
	 */
	enum class ESBContactListSortType : uint8_t
	{
		Sort_Name = 0,
		Sort_Send = 1,
		Sort_Acce = 2,
		Sort_MAX  = 3
	};

	/**
	 * Enum SkyBlue.ESBFriendListSortType
	 */
	enum class ESBFriendListSortType : uint8_t
	{
		Sort_Desc = 0,
		Sort_Asc  = 1,
		Sort_MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBPartySystemTextType
	 */
	enum class ESBPartySystemTextType : uint8_t
	{
		Unknown                                = 0,
		ConfirmInvite                          = 1,
		InviteSuccess                          = 2,
		InviteFail                             = 3,
		InviteCancel                           = 4,
		InviteReceive                          = 5,
		ConfirmJoin                            = 6,
		JoinSuccess                            = 7,
		JoinFail                               = 8,
		MemberJoin                             = 9,
		ConfirmLeave                           = 10,
		LeaveSuccess                           = 11,
		LeaveFail                              = 12,
		MemberExit                             = 13,
		ConfirmRelease                         = 14,
		ReleaseSuccess                         = 15,
		ReleaseFail                            = 16,
		ReleasedParty                          = 17,
		ConfirmPromote                         = 18,
		PromoteSuccess                         = 19,
		PromoteFail                            = 20,
		PromotedLeader                         = 21,
		PromotedMember                         = 22,
		ConfirmKick                            = 23,
		KickSuccess                            = 24,
		KickFail                               = 25,
		KickedTarget                           = 26,
		KickedMember                           = 27,
		InacceptInvite                         = 28,
		ChannelMigrationReject                 = 29,
		ChannelMigrationCancel                 = 30,
		ChannelMigrationForbiddenCommandBlock  = 31,
		ChannelMigrationIncompleteSummon       = 32,
		ChannelMigrationGameServerNotFound     = 33,
		ChannelMigrationRejectByOthersAll      = 34,
		ChannelMigrationFailure                = 35,
		PartyInviteFail                        = 36,
		SimplicityPartyGuideMessage            = 37,
		SimplicityPartySettingMenu             = 38,
		SimplycityPartyChange                  = 39,
		MemberOffline                          = 40,
		MemberRejoin                           = 41,
		RejoinSuccess                          = 42,
		ChannelMigrationWaitMembers            = 43,
		InacceptSimplicityPartyWhileOnMatching = 44,
		PartyMemberFullGuest                   = 45,
		PartyMemberFullHost                    = 46,
		AlredyInParty                          = 47,
		MAX                                    = 48
	};

	/**
	 * Enum SkyBlue.ESBSystemLogDetailType
	 */
	enum class ESBSystemLogDetailType : uint8_t
	{
		BattleInfo    = 0,
		Stamp         = 1,
		Gesture       = 2,
		SystemMessage = 3,
		ItemGet       = 4,
		LevelUp       = 5,
		DamageMessage = 6,
		DamageBonus   = 7,
		None          = 8,
		MAX           = 9
	};

	/**
	 * Enum SkyBlue.ESBChatLogOption
	 */
	enum class ESBChatLogOption : uint8_t
	{
		None                = 0,
		NotifyBlackListed   = 1,
		NotifyUnBlackListed = 2,
		BlueColor           = 3,
		RedColor            = 4,
		LightGreenColor     = 5,
		BattleDamageColor   = 6,
		MAX                 = 7
	};

	/**
	 * Enum SkyBlue.ESBChatLogType
	 */
	enum class ESBChatLogType : uint8_t
	{
		CloseAreaChat = 0,
		OpenChat      = 1,
		PartyChat     = 2,
		TeamChat      = 3,
		GuildChat     = 4,
		DirectMessage = 5,
		SystemLog     = 6,
		BattleLog     = 7,
		None          = 8,
		MAX           = 9
	};

	/**
	 * Enum SkyBlue.EAestheShopCourseUsableCategory
	 */
	enum class EAestheShopCourseUsableCategory : uint8_t
	{
		Unusable           = 0,
		SameGenderOnly     = 1,
		OppositeGenderOnly = 2,
		EitherGenderIsOK   = 3,
		Num                = 4,
		MAX                = 5
	};

	/**
	 * Enum SkyBlue.ESBAestheShopCharaHairType
	 */
	enum class ESBAestheShopCharaHairType : uint8_t
	{
		None = 0,
		Vst  = 1,
		Sht  = 2,
		Mid  = 3,
		Lng  = 4,
		Pny  = 5,
		Twn  = 6,
		Lcs  = 7,
		Max  = 8
	};

	/**
	 * Enum SkyBlue.ESBAestheShopCharaBodyType
	 */
	enum class ESBAestheShopCharaBodyType : uint8_t
	{
		None   = 0,
		Normal = 1,
		Senior = 2,
		Max    = 3
	};

	/**
	 * Enum SkyBlue.ESBAestheShopCharaFaceType
	 */
	enum class ESBAestheShopCharaFaceType : uint8_t
	{
		None   = 0,
		Normal = 1,
		Youth  = 2,
		Senior = 3,
		Max    = 4
	};

	/**
	 * Enum SkyBlue.ESBAestheShopCharaPartsIconType
	 */
	enum class ESBAestheShopCharaPartsIconType : uint8_t
	{
		FaceType      = 0,
		Hair          = 1,
		FaceLine      = 2,
		EyeBrow       = 3,
		Eye           = 4,
		Iris          = 5,
		Nose          = 6,
		Mouth         = 7,
		Beard         = 8,
		Lip           = 9,
		SkinBase      = 10,
		Paint         = 11,
		CostumeSet    = 12,
		Preset        = 13,
		Hat           = 14,
		Upper         = 15,
		Gloves        = 16,
		Lower         = 17,
		Shoes         = 18,
		Underwear     = 19,
		Eyelash       = 20,
		Tooth         = 21,
		GradationType = 22,
		Max           = 23
	};

	/**
	 * Enum SkyBlue.EEquipableGender
	 */
	enum class EEquipableGender : uint8_t
	{
		Unknown = 0,
		Common  = 1,
		Male    = 2,
		Female  = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.EProtectorCategory
	 */
	enum class EProtectorCategory : uint8_t
	{
		Unknown                          = 0,
		Head                             = 1,
		Body                             = 2,
		Hand                             = 3,
		Leg                              = 4,
		Shoes                            = 5,
		Accessory_HeadTop                = 6,
		Accessory_Eye                    = 7,
		Accessory_Cheek                  = 8,
		Accessory_Ear                    = 9,
		Accessory_RightAndLeftHandFinger = 10,
		Accessory_LeftHandFinger         = 11,
		Accessory_Back                   = 12,
		Accessory_Hip                    = 13,
		Accessory_Underwear              = 14,
		MAX                              = 15
	};

	/**
	 * Enum SkyBlue.ESBRarity
	 */
	enum class ESBRarity : uint8_t
	{
		Common   = 0,
		Uncommon = 1,
		Rare     = 2,
		Epic     = 3,
		Legend   = 4,
		Max      = 5
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemoryAccumulationType
	 */
	enum class ESBLiquidMemoryAccumulationType : uint8_t
	{
		Quantitative = 0,
		Random       = 1,
		Num          = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemoryAccumulateConditionType
	 */
	enum class ESBLiquidMemoryAccumulateConditionType : uint8_t
	{
		None                 = 0,
		TimeElapse           = 1,
		EnemyKill            = 2,
		Gather               = 3,
		BattleImajinnCreate  = 4,
		BattleImajinnEnhance = 5,
		TreasureBox          = 6,
		Craft                = 7,
		WeaponLevelup        = 8,
		InnerImagineLevelup  = 9,
		BattleImajineLevelup = 10,
		WeaponFusion         = 11,
		LiquidMemoryUse      = 12,
		RaidBattleEntry      = 13,
		TimeAttackEntry      = 14,
		ArenaEntry           = 15,
		BuffNPC              = 16,
		MissionClear         = 17,
		LunoGet              = 18,
		LunoUse              = 19,
		RareEnemyKill        = 20,
		TokenGet             = 21,
		SkillUse             = 22,
		MaterialSupporter    = 23,
		GCGet                = 24,
		ItemGet              = 25,
		ItemUse              = 26,
		ResurrectionSuccess  = 27,
		TowerEntry           = 28,
		ScoreAttackEntry     = 29,
		ScenarioMissionClear = 30,
		Num                  = 31,
		MAX                  = 32
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemoryEfficacyValueType
	 */
	enum class ESBLiquidMemoryEfficacyValueType : uint8_t
	{
		None   = 0,
		Time   = 1,
		Number = 2,
		Rate   = 3,
		Num    = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemoryEfficacyType
	 */
	enum class ESBLiquidMemoryEfficacyType : uint8_t
	{
		None                                 = 0,
		Craft_WeaponCriticalRateUp           = 1,
		Craft_ItemCriticalRateUp             = 2,
		Craft_BattleImagineCriticalRateUp    = 3,
		Craft_InnerImagineCriticalRateUp     = 4,
		Craft_AbilityAddRateUp               = 5,
		Craft_WeaponMinimumLevelHighRateUp   = 6,
		Weapon_Enhance_ExpUp                 = 7,
		BattleImagine_Enhance_ExpUp          = 8,
		InnerImagine_Enhance_ExpUp           = 9,
		GatherTimeReduce                     = 10,
		GatherSpotRepopRateUp                = 11,
		Enemy_DropRateUp                     = 12,
		Enemy_ExpUp                          = 13,
		Enemy_MoneyUp                        = 14,
		NpcFacility_MoneyConsumptionDiscount = 15,
		Craft_WeaponCriticalRateUp2          = 16,
		Craft_BattleImagineCriticalRateUp2   = 17,
		Craft_InnerImagineCriticalRateUp2    = 18,
		FieldBagCapacityUp                   = 19,
		ClearMissionGcUp                     = 20,
		TeamExpUp                            = 21,
		SellItemUp                           = 22,
		MountImagineEnergyDown               = 23,
		TreasureRarityUp                     = 24,
		EnemyDropNumberUp                    = 25,
		FusionPrecisionUp                    = 26,
		Enemy_TreasureDropRateUp             = 27,
		GatherSpotDropNumUp                  = 28,
		WeaponCraft_LunoDiscount             = 29,
		Num                                  = 30,
		MAX                                  = 31
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemoryCategory
	 */
	enum class ESBLiquidMemoryCategory : uint8_t
	{
		None                  = 0,
		Craft_Weapon          = 1,
		Craft_Item            = 2,
		Craft_BattleImajinn   = 3,
		Craft_Attachment      = 4,
		Enhance_Weapon        = 5,
		Enhance_BattleImajinn = 6,
		Enhance_Attachment    = 7,
		Gather                = 8,
		Enemy                 = 9,
		NpcFacility           = 10,
		Bag                   = 11,
		GC                    = 12,
		Team                  = 13,
		Sell                  = 14,
		Mount_Imagine         = 15,
		Fusion                = 16,
		Other                 = 17,
		Num                   = 18,
		MAX                   = 19
	};

	/**
	 * Enum SkyBlue.ESBDungeonEntryConditionElementType
	 */
	enum class ESBDungeonEntryConditionElementType : uint8_t
	{
		None     = 0,
		Physics  = 1,
		Earth    = 2,
		Fire     = 3,
		Ice      = 4,
		Thunder  = 5,
		Light    = 6,
		Darkness = 7,
		MAX      = 8
	};

	/**
	 * Enum SkyBlue.ESBDungeonEntryConditionAppearanceType
	 */
	enum class ESBDungeonEntryConditionAppearanceType : uint8_t
	{
		Unlimited = 0,
		Male      = 1,
		Female    = 2,
		Unisex    = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBDungeonEntryConditionItemType
	 */
	enum class ESBDungeonEntryConditionItemType : uint8_t
	{
		Unknown       = 0,
		Weapon        = 1,
		Costume       = 2,
		BattleImagine = 3,
		MountImagine  = 4,
		MAX           = 5
	};

	/**
	 * Enum SkyBlue.ESBEquipmentSeriesItemType
	 */
	enum class ESBEquipmentSeriesItemType : uint8_t
	{
		None         = 0,
		Weapon       = 1,
		Costume      = 2,
		Imagine      = 3,
		MountImagine = 4,
		Num          = 5,
		MAX          = 6
	};

	/**
	 * Enum SkyBlue.ESBEventTermsDateType
	 */
	enum class ESBEventTermsDateType : uint8_t
	{
		EVENT_TERMS_DATE_TYPE_FREE       = 0,
		EVENT_TERMS_DATE_TYPE_START_FREE = 1,
		EVENT_TERMS_DATE_TYPE_END_FREE   = 2,
		EVENT_TERMS_DATE_TYPE_NORMAL     = 3,
		EVENT_TERMS_CHECK_TYPE_MAX       = 4,
		EVENT_TERMS_MAX                  = 5
	};

	/**
	 * Enum SkyBlue.ESBEventTermsCheckType
	 */
	enum class ESBEventTermsCheckType : uint8_t
	{
		EVENT_TERMS_CHECK_TYPE_NORMAL           = 0,
		EVENT_TERMS_CHECK_TYPE_END_OF_THE_MANTH = 1,
		EVENT_TERMS_CHECK_TYPE_NUMBER_OF_WEEK   = 2,
		EVENT_TERMS_CHECK_TYPE_MAX              = 3
	};

	/**
	 * Enum SkyBlue.EInterruptQuestFailureStepType
	 */
	enum class EInterruptQuestFailureStepType : uint8_t
	{
		None     = 0,
		QuestEnd = 1,
		StepBack = 2,
		Max      = 3
	};

	/**
	 * Enum SkyBlue.EInterruptQuestRewardType
	 */
	enum class EInterruptQuestRewardType : uint8_t
	{
		None          = 0,
		Unconditional = 1,
		Max           = 2
	};

	/**
	 * Enum SkyBlue.EInterruptQuestStepupType
	 */
	enum class EInterruptQuestStepupType : uint8_t
	{
		None          = 0,
		Unconditional = 1,
		QuestStep     = 2,
		Max           = 3
	};

	/**
	 * Enum SkyBlue.EInterruptQuestAchievementType
	 */
	enum class EInterruptQuestAchievementType : uint8_t
	{
		None                = 0,
		NamedEnemy_Kill     = 1,
		EnemySet_AllKill    = 2,
		NpcTalk             = 3,
		Gimmick_Interaction = 4,
		Gimmick_AllBreak    = 5,
		ItemUse             = 6,
		Fishing             = 7,
		Gimmick_Defense     = 8,
		Max                 = 9
	};

	/**
	 * Enum SkyBlue.EInterruptQuestStartMainActionType
	 */
	enum class EInterruptQuestStartMainActionType : uint8_t
	{
		None              = 0,
		NamedEnemyPop     = 1,
		EnemySpawn        = 2,
		GimmickActorSpawn = 3,
		GatherPointSpawn  = 4,
		NpcStandby        = 5,
		EnemyRandomPop    = 6,
		FishingPointPop   = 7,
		Max               = 8
	};

	/**
	 * Enum SkyBlue.EInterruptQuestSubConditionAreaType
	 */
	enum class EInterruptQuestSubConditionAreaType : uint8_t
	{
		None        = 0,
		QuestArea   = 1,
		GimmickArea = 2,
		Max         = 3
	};

	/**
	 * Enum SkyBlue.EInterruptQuestSubConditionType
	 */
	enum class EInterruptQuestSubConditionType : uint8_t
	{
		None                  = 0,
		KillTarget            = 1,
		AreaIn                = 2,
		NearGimmick           = 3,
		NpcTalk               = 4,
		GimmickActionIntaract = 5,
		GimmickBreak          = 6,
		ActionItemUse         = 7,
		AreaIn_Mount          = 8,
		AreaIn_PlayerNum      = 9,
		HaveMoneyCount        = 10,
		BadStatus             = 11,
		ActionRecovery        = 12,
		ActionEmote           = 13,
		ActionGather          = 14,
		SignalDoor            = 15,
		MAX                   = 16
	};

	/**
	 * Enum SkyBlue.EInterruptQuestMainConditionType
	 */
	enum class EInterruptQuestMainConditionType : uint8_t
	{
		None      = 0,
		AllTime   = 1,
		DayTime   = 2,
		NightTime = 3,
		EventTime = 4,
		MAX       = 5
	};

	/**
	 * Enum SkyBlue.EInterruptQuestDestructibleType
	 */
	enum class EInterruptQuestDestructibleType : uint8_t
	{
		None   = 0,
		Box    = 1,
		Barrel = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBMainAbilityTicketType
	 */
	enum class ESBMainAbilityTicketType : uint8_t
	{
		MainAbilityTicketType_None             = 0,
		MainAbilityTicketType_LotTicketS       = 1,
		MainAbilityTicketType_LotTicket        = 2,
		MainAbilityTicketType_ValueTicketUpper = 3,
		MainAbilityTicketType_ValueTicketLot   = 4,
		MainAbilityTicketType_MAX              = 5
	};

	/**
	 * Enum SkyBlue.ESBRewardLotteryGroupsPickType
	 */
	enum class ESBRewardLotteryGroupsPickType : uint8_t
	{
		OWN_CLASS         = 0,
		OUTSIDE_OWN_CLASS = 1,
		ALL               = 2,
		NUM               = 3,
		MAX               = 4
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassPlanState
	 */
	enum class ESBSeasonPassPlanState : uint8_t
	{
		Free        = 0,
		Subscribed  = 1,
		Subscribed1 = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassRewardType
	 */
	enum class ESBSeasonPassRewardType : uint8_t
	{
		Free = 0,
		Paid = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBTokenOverflowType
	 */
	enum class ESBTokenOverflowType : uint8_t
	{
		None       = 0,
		Choice     = 1,
		Forced     = 2,
		Impossible = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.ESBTokenDayOfWeek
	 */
	enum class ESBTokenDayOfWeek : uint8_t
	{
		None      = 0,
		Sunday    = 1,
		Monday    = 2,
		Tuesday   = 3,
		Wednesday = 4,
		Thursday  = 5,
		Friday    = 6,
		Saturday  = 7,
		MAX       = 8
	};

	/**
	 * Enum SkyBlue.ESBTokenRecoveryType
	 */
	enum class ESBTokenRecoveryType : uint8_t
	{
		None    = 0,
		Daily   = 1,
		Weekly  = 2,
		Monthly = 3,
		Time    = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBTokenPurchaseType
	 */
	enum class ESBTokenPurchaseType : uint8_t
	{
		Free = 0,
		Paid = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBTokenCategory
	 */
	enum class ESBTokenCategory : uint8_t
	{
		None   = 0,
		Event  = 1,
		Ticket = 2,
		Hidden = 3,
		MAX    = 4
	};

	/**
	 * Enum SkyBlue.ESBTokenPossessionType
	 */
	enum class ESBTokenPossessionType : uint8_t
	{
		None      = 0,
		Account   = 1,
		Character = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBTokenPlaceToConsumeType
	 */
	enum class ESBTokenPlaceToConsumeType : uint8_t
	{
		None                    = 0,
		SkillReset              = 1,
		ReviveBattle            = 2,
		ExchangeWeaponSkin      = 3,
		GloryCoin               = 4,
		ChangeTeamName          = 5,
		RemoveWeaponAbility     = 6,
		ResetWeaponAbilities    = 7,
		ResetWeaponAbilitySkip  = 8,
		UnlockWeaponAbilitySlot = 9,
		RewardPlusCount         = 10,
		RewardPlusTicket        = 11,
		TreasureBoxDrawCount    = 12,
		MAX                     = 13
	};

	/**
	 * Enum SkyBlue.ESBWarehouseAbilityProductionType
	 */
	enum class ESBWarehouseAbilityProductionType : uint8_t
	{
		Craft           = 0,
		ImagineCraft    = 1,
		WeaponRefining  = 2,
		ImagineRefining = 3,
		WeaponFusion    = 4,
		Invalid         = 5,
		MAX             = 6
	};

	/**
	 * Enum SkyBlue.ESBWarehouseAbilityCategory
	 */
	enum class ESBWarehouseAbilityCategory : uint8_t
	{
		Material = 0,
		Zone     = 1,
		Mission  = 2,
		Other    = 3,
		Event    = 4,
		MAX      = 5
	};

	/**
	 * Enum SkyBlue.ESBWeekChangeDayOfWeek
	 */
	enum class ESBWeekChangeDayOfWeek : uint8_t
	{
		Sunday    = 0,
		Monday    = 1,
		Tuesday   = 2,
		Wednesday = 3,
		Thursday  = 4,
		Friday    = 5,
		Saturday  = 6,
		MAX       = 7
	};

	/**
	 * Enum SkyBlue.ESBCouponQuestType
	 */
	enum class ESBCouponQuestType : uint8_t
	{
		Unknown = 0,
		Daily   = 1,
		Weekly  = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBAbrityType
	 */
	enum class ESBAbrityType : uint8_t
	{
		Unknown   = 0,
		Warehouse = 1,
		Buff      = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.EOutGameBuffType
	 */
	enum class EOutGameBuffType : uint8_t
	{
		None                         = 0,
		MountEnergyReduceConsumption = 1,
		ItemDropRateUpByEnemy        = 2,
		ItemDropRateUpByGather       = 3,
		DropCountUpByTreasure        = 4,
		ExpUpByEnemy                 = 5,
		ExpUpByMission               = 6,
		LunoUpByEnemy                = 7,
		LunoUpByMission              = 8,
		TokenDropCountUp             = 9,
		TokenDropRateUp              = 10,
		Num                          = 11,
		MAX                          = 12
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardPanelType
	 */
	enum class ESBAdventureBoardPanelType : uint8_t
	{
		Start        = 0,
		Goal         = 1,
		Normal       = 2,
		Route        = 3,
		Emphasis     = 4,
		Free         = 5,
		EmphasisFree = 6,
		Num          = 7,
		None         = 8,
		MAX          = 9
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardType
	 */
	enum class ESBAdventureBoardType : uint8_t
	{
		Normal    = 0,
		TimeLimit = 1,
		RankUp    = 2,
		Num       = 3,
		None      = 4,
		MAX       = 5
	};

	/**
	 * Enum SkyBlue.ESBMissionQuestPlaceType
	 */
	enum class ESBMissionQuestPlaceType : uint8_t
	{
		None       = 0,
		EventShop  = 1,
		WeaponShop = 2,
		ItemShop   = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.ESBMissionQuestItemType
	 */
	enum class ESBMissionQuestItemType : uint8_t
	{
		NONE                      = 0,
		LUNO                      = 1,
		GC                        = 2,
		ITEM                      = 3,
		WEAPON                    = 4,
		COSTUME                   = 5,
		BATTLE_IMAGINE            = 6,
		INNER_IMAGINE             = 7,
		MOUNT_IMAGINE             = 8,
		EMOTE                     = 9,
		STAMP                     = 10,
		IMAGINE_RECIPE            = 11,
		BONUS_SKILL_POINT         = 12,
		CLASS_SKILL_POINT         = 13,
		ACHIEVEMENT               = 14,
		LIQUID_MEMORY             = 15,
		COIN                      = 16,
		CURRENCY                  = 17,
		TOKEN                     = 18,
		CRAFT_MACHINE_RECIPE      = 19,
		ITEM_BOX                  = 20,
		WEAPON_DECORATION_STICKER = 21,
		SEASON_RANK_POINT         = 22,
		STAMPS_CATEGORY           = 23,
		EQUIPMENT_SERIES          = 24,
		MAX                       = 25
	};

	/**
	 * Enum SkyBlue.ESBMissionQuestType
	 */
	enum class ESBMissionQuestType : uint8_t
	{
		None                                        = 0,
		Designated_ClassLevelUp                     = 1,
		ClassChangeCount                            = 2,
		ClassChange                                 = 3,
		GetCount                                    = 4,
		ItemGet                                     = 5,
		Equip                                       = 6,
		ItemUse                                     = 7,
		Forge                                       = 8,
		Fusion                                      = 9,
		Smelting                                    = 10,
		WeaponChange                                = 11,
		WeaponImagineSmelting                       = 12,
		Staining                                    = 13,
		Mount                                       = 14,
		Claft                                       = 15,
		QuestAccepted                               = 16,
		QuestClear                                  = 17,
		SubQuestCompleted                           = 18,
		QuestCompleted                              = 19,
		EnemySubjugation                            = 20,
		MissionJoin                                 = 21,
		MissionClear                                = 22,
		MissionCompleted                            = 23,
		DominateField                               = 24,
		Designated_GameModeMissionJoin              = 25,
		Designated_GameModeMissionClear             = 26,
		SkillRelease                                = 27,
		SkillLevelUp                                = 28,
		SkillEquip                                  = 29,
		StorageSkilEntry                            = 30,
		StorageChack                                = 31,
		Resuscitation                               = 32,
		TreasureGet                                 = 33,
		Gather                                      = 34,
		BattleScoreAchievement                      = 35,
		AdventurerRankAchievement                   = 36,
		AdventurerCardSend                          = 37,
		WishListEntry                               = 38,
		TermJoin                                    = 39,
		PartyJoin                                   = 40,
		CostumeChange                               = 41,
		AutoMessegeSet                              = 42,
		AutoGestureSet                              = 43,
		ProfileCommentSet                           = 44,
		FacilityIn                                  = 45,
		AchievementSet                              = 46,
		RankingBoardCheck                           = 47,
		Logine                                      = 48,
		BufNpc                                      = 49,
		AbilityGet                                  = 50,
		WarehouseAbilityUse                         = 51,
		E_EggClear                                  = 52,
		Designated_MissionClear                     = 53,
		Designated_MissionClear_Class               = 54,
		ItemConsumption                             = 55,
		DailyQuestClearCount                        = 56,
		WeeklyQuestClearCount                       = 57,
		DailyQuestAllClear                          = 58,
		WeeklyQuestAllClear                         = 59,
		SoloBattle                                  = 60,
		MissionBestScore                            = 61,
		DesignatedEquipment_Mission                 = 62,
		NoneBadStatus_Mission                       = 63,
		Designated_Taken_DumagePointUnder_Mission   = 64,
		Designated_Taken_DumageCountUnder_Mission   = 65,
		Designated_RemainingTime_Mission            = 66,
		Designated_DeadCountUnder_Mission           = 67,
		Designated_ElementBurstCount_Mission        = 68,
		Designated_ElementBurstTotalCount_Mission   = 69,
		Designated_BatStatusCount_Mission           = 70,
		Designated_BatStatusTotalCount_Mission      = 71,
		Designated_Damege_Mission                   = 72,
		Designated_TotalDamege_Mission              = 73,
		Dummy                                       = 74,
		Dummy01                                     = 75,
		Designated_CriticalCount_Mission            = 76,
		Designated_CriticalTotalCount_Mission       = 77,
		Designated_CriticalDamage_Mission           = 78,
		Designated_CriticalTotalDamage_Mission      = 79,
		SpecifiedSkillUse_Mission                   = 80,
		SpecifiedSkillTotalUse_Mission              = 81,
		JustAvoidanceCount_Mission                  = 82,
		JustAvoidanceTotalCount_Mission             = 83,
		GetTreasureBoxCount_Mission                 = 84,
		GetTreasureBoxTotalCount_Mission            = 85,
		ExplosiveBarrelBreakCount_Mission           = 86,
		ExplosiveBarrelBreakTotalCount_Mission      = 87,
		SupplierUseTotal_Mission                    = 88,
		SupplierUseTotalCount_Mission               = 89,
		DestructibleObjectBreak_Mission             = 90,
		DestructibleObjectTotalBreak_Mission        = 91,
		LiquidMemoryOneStock                        = 92,
		LiquidMemoryUse                             = 93,
		NpcTalkCount                                = 94,
		Dummy02                                     = 95,
		WarehouseAbilityGet                         = 96,
		MoneyUse                                    = 97,
		ElementBurstCount                           = 98,
		BadStatusCount                              = 99,
		SpecifiedDamagePoint                        = 100,
		JustAvoidanceCount                          = 101,
		EquipStackBCount                            = 102,
		EquipStackBNum                              = 103,
		EquipStackBClear_Mission                    = 104,
		DXBattle_Clear                              = 105,
		DXBattle_Perfect                            = 106,
		Designated_EquipStackBCount                 = 107,
		Designated_EquipStackBNum                   = 108,
		Designated_EquipStackBClear_Mission         = 109,
		FangExpeditionDispatch_Count                = 110,
		ShieldGuard_Count                           = 111,
		EnemySubjugation_Count_CounterAttack        = 112,
		ComboGaugeMax_TimeCount_Clear_Mission       = 113,
		EnemySubjugation_Count_WeekPoint            = 114,
		BuffChargeMax_CureArrow_Count_Mission       = 115,
		EnemySubjugation_MeteorInferno_Hit          = 116,
		EnemySubjugation_Count_QuickReload_BoostMax = 117,
		CarvedSeal_Count_Mission                    = 118,
		EnemySubjugation_Count_LeapShot             = 119,
		EnemySubjugation_Count_FeverTime            = 120,
		EnemySubjugation_Count_JustPerformance_Hit  = 121,
		SkillEnemySubjugation                       = 122,
		SkillUseCount_Mission                       = 123,
		EnemySubjugation_Cumulative                 = 124,
		Gather_Cumulative                           = 125,
		ItemGet_Cumulative                          = 126,
		MAX                                         = 127
	};

	/**
	 * Enum SkyBlue.ESBRecepiItemType
	 */
	enum class ESBRecepiItemType : uint8_t
	{
		Invalid                     = 0,
		RecepiItemType_Item         = 1,
		RecepiItemType_Weapon       = 2,
		RecepiItemType_Costume      = 3,
		RecepiItemType_Imagine      = 4,
		RecepiItemType_MountImagine = 5,
		RecepiItemType_Ornament     = 6,
		RecepiItemType_Token        = 7,
		MAX                         = 8
	};

	/**
	 * Enum SkyBlue.ESBTokenEffectType
	 */
	enum class ESBTokenEffectType : uint8_t
	{
		None      = 0,
		AddReward = 1,
		AddExp    = 2,
		ShortTime = 3,
		Finish    = 4,
		Rare      = 5,
		MAX       = 6
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemoryAccumulateTokenType
	 */
	enum class ESBLiquidMemoryAccumulateTokenType : uint8_t
	{
		None     = 0,
		Normal   = 1,
		WildCard = 2,
		FullMax  = 3,
		Num      = 4,
		MAX      = 5
	};

	/**
	 * Enum SkyBlue.ESBImagineCategoryType
	 */
	enum class ESBImagineCategoryType : uint8_t
	{
		ImaginePassive = 0,
		ImagineActive  = 1,
		MAX            = 2
	};

	/**
	 * Enum SkyBlue.ESBNaEventTokenBuffConditonType
	 */
	enum class ESBNaEventTokenBuffConditonType : uint8_t
	{
		None               = 0,
		Gather             = 1,
		Mission            = 2,
		TagSelf            = 3,
		TagPartyMember     = 4,
		PlayWithTeamMember = 5,
		Equipment          = 6,
		Defeat             = 7,
		DefeatNamed        = 8,
		MAX                = 9
	};

	/**
	 * Enum SkyBlue.ESBNaEventType
	 */
	enum class ESBNaEventType : uint8_t
	{
		None   = 0,
		Normal = 1,
		Raid   = 2,
		Team   = 3,
		MAX    = 4
	};

	/**
	 * Enum SkyBlue.ESBObjectConditionType
	 */
	enum class ESBObjectConditionType : uint8_t
	{
		Daytime   = 0,
		Nighttime = 1,
		Alltime   = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBGameSettingsType
	 */
	enum class ESBGameSettingsType : uint8_t
	{
		None                      = 0,
		MaxClassLevel             = 1,
		ExtraExpTokenId           = 2,
		PlayerBehaviorLogInterval = 3,
		SeasonPassTokenRecover    = 4,
		TreasureBoxDrawCount      = 5,
		NUM                       = 6,
		MAX                       = 7
	};

	/**
	 * Enum SkyBlue.ESBSkillAbilityType
	 */
	enum class ESBSkillAbilityType : uint8_t
	{
		None        = 0,
		Alpha       = 1,
		Beta        = 2,
		Camma       = 3,
		ClassCommon = 4,
		MAX         = 5
	};

	/**
	 * Enum SkyBlue.ESBSkillType
	 */
	enum class ESBSkillType : uint8_t
	{
		Main            = 0,
		Sub             = 1,
		Skill1          = 2,
		Skill2          = 3,
		Skill3          = 4,
		Skill4          = 5,
		Special         = 6,
		Dodge           = 7,
		Pasive1         = 8,
		Pasive2         = 9,
		Aerial          = 10,
		ActiveAbility   = 11,
		EnemyStepJump   = 12,
		Ukemi           = 13,
		SkillCancelStep = 14,
		Dummy           = 15,
		Dummy01         = 16,
		Skill5          = 17,
		Skill6          = 18,
		Skill7          = 19,
		Skill8          = 20,
		ContentAction1  = 21,
		ContentAction2  = 22,
		Max             = 23
	};

	/**
	 * Enum SkyBlue.ESBStackBItemType
	 */
	enum class ESBStackBItemType : uint8_t
	{
		Invalid = 0,
		Weapon  = 1,
		Battle  = 2,
		Inner   = 3,
		Mount   = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBStackBTicketType
	 */
	enum class ESBStackBTicketType : uint8_t
	{
		StackBTicket_Invalid       = 0,
		StackBTicket_SuccessRateUp = 1,
		StackBTicket_Alternative   = 2,
		StackBTicket_NUM           = 3,
		StackBTicket_MAX           = 4
	};

	/**
	 * Enum SkyBlue.EAbilityInterlockPassiveSkillPremise
	 */
	enum class EAbilityInterlockPassiveSkillPremise : uint8_t
	{
		None = 0,
		MAX  = 1
	};

	/**
	 * Enum SkyBlue.EAbilityCategoryType
	 */
	enum class EAbilityCategoryType : uint8_t
	{
		AbilityType_Param   = 0,
		AbilityType_Attack  = 1,
		AbilityType_Defence = 2,
		AbilityType_Support = 3,
		AbilityType_Other   = 4,
		AbilityType_MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBAchievementMasterTitleFlag
	 */
	enum class ESBAchievementMasterTitleFlag : uint8_t
	{
		NoneTitle   = 0,
		ConferTitle = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.ESBCraftTokenType
	 */
	enum class ESBCraftTokenType : uint8_t
	{
		INVALID       = 0,
		BONUS_RATE_UP = 1,
		MAX           = 2
	};

	/**
	 * Enum SkyBlue.ESBEnemySkillActivationTrigger
	 */
	enum class ESBEnemySkillActivationTrigger : uint8_t
	{
		Spawn    = 0,
		Modifier = 1,
		Max      = 2
	};

	/**
	 * Enum SkyBlue.ESBEnemySkillType
	 */
	enum class ESBEnemySkillType : uint8_t
	{
		None     = 0,
		Tactical = 1,
		Reactive = 2,
		Combo    = 3,
		Max      = 4
	};

	/**
	 * Enum SkyBlue.ESBEnemyDropItemConditionType
	 */
	enum class ESBEnemyDropItemConditionType : uint8_t
	{
		None  = 0,
		Bonus = 1,
		Max   = 2
	};

	/**
	 * Enum SkyBlue.ESBEnemyReactionType
	 */
	enum class ESBEnemyReactionType : uint8_t
	{
		Default    = 0,
		Middle     = 1,
		Heavy      = 2,
		SuperHeavy = 3,
		PlayerType = 4,
		Max        = 5
	};

	/**
	 * Enum SkyBlue.EItemBoxType
	 */
	enum class EItemBoxType : uint8_t
	{
		None       = 0,
		Set        = 1,
		Random     = 2,
		Select     = 3,
		CostumeSet = 4,
		MAX        = 5
	};

	/**
	 * Enum SkyBlue.EItemEffictionType
	 */
	enum class EItemEffictionType : uint8_t
	{
		Invalid     = 0,
		Instant     = 1,
		Set         = 2,
		Volatile    = 3,
		NonVolatile = 4,
		MAX         = 5
	};

	/**
	 * Enum SkyBlue.EAppearanceWeaponStickerType
	 */
	enum class EAppearanceWeaponStickerType : uint8_t
	{
		Peeling    = 0,
		Duration   = 1,
		Deadline   = 2,
		Indefinite = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.EItemCategory
	 */
	enum class EItemCategory : uint8_t
	{
		Consumption = 0,
		Sale        = 1,
		Smelting    = 2,
		Craft       = 3,
		Idea        = 4,
		SetBox      = 5,
		SelectBox   = 6,
		RandomBox   = 7,
		MAX         = 8
	};

	/**
	 * Enum SkyBlue.EItemObtainRouteType
	 */
	enum class EItemObtainRouteType : uint8_t
	{
		Invalid      = 0,
		Subdue       = 1,
		Picking      = 2,
		Craft        = 3,
		DungeonClear = 4,
		NonPublic    = 5,
		MAX          = 6
	};

	/**
	 * Enum SkyBlue.ESBRewardSetType
	 */
	enum class ESBRewardSetType : uint8_t
	{
		REWARD_SET_TYPE_NORMAL         = 0,
		REWARD_SET_TYPE_FIRST          = 1,
		REWARD_SET_TYPE_BOOST          = 2,
		REWARD_SET_TYPE_LIMITED_FIRST  = 3,
		REWARD_SET_TYPE_SUPPORT_NORMAL = 4,
		REWARD_SET_TYPE_SUPPORT_BONUS  = 5,
		REWARD_SET_TYPE_SUPPORT_PLUS   = 6,
		REWARD_SET_TYPE_NUM            = 7,
		REWARD_SET_TYPE_MAX            = 8
	};

	/**
	 * Enum SkyBlue.ESBRewardMethod
	 */
	enum class ESBRewardMethod : uint8_t
	{
		REWARD_METHOD_FIXED         = 0,
		REWARD_METHOD_SELECTION     = 1,
		REWARD_METHOD_LOTTERY       = 2,
		REWARD_METHOD_LOTTERY_GROUP = 3,
		REWARD_METHOD_NUM           = 4,
		REWARD_METHOD_MAX           = 5
	};

	/**
	 * Enum SkyBlue.EQuestRewardCategory
	 */
	enum class EQuestRewardCategory : uint8_t
	{
		Common       = 0,
		Choice       = 1,
		Contribution = 2,
		Additional   = 3,
		Num          = 4,
		MAX          = 5
	};

	/**
	 * Enum SkyBlue.EQuestRevivalConditionType
	 */
	enum class EQuestRevivalConditionType : uint8_t
	{
		Unknown          = 0,
		Immediately      = 1,
		ElapsedHours     = 2,
		ReachedDay       = 3,
		ReachedDayOfWeek = 4,
		QuestClear       = 5,
		QuestStep        = 6,
		Max              = 7
	};

	/**
	 * Enum SkyBlue.EQuestCategory3
	 */
	enum class EQuestCategory3 : uint8_t
	{
		Unknown  = 0,
		Errand   = 1,
		Slay     = 2,
		Collect  = 3,
		Traverse = 4,
		MAX      = 5
	};

	/**
	 * Enum SkyBlue.EQuestCategory2
	 */
	enum class EQuestCategory2 : uint8_t
	{
		Unknown          = 0,
		Main             = 1,
		Sub              = 2,
		Extra            = 3,
		Class            = 4,
		ReleaseFunctions = 5,
		MAX              = 6
	};

	/**
	 * Enum SkyBlue.EQuestCategory1
	 */
	enum class EQuestCategory1 : uint8_t
	{
		Unknown   = 0,
		Normal    = 1,
		Interrupt = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBMasterDataStatus
	 */
	enum class ESBMasterDataStatus : uint8_t
	{
		Unavailable = 0,
		Loading     = 1,
		Available   = 2,
		Abort       = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.EEnvironmentType
	 */
	enum class EEnvironmentType : uint8_t
	{
		Always    = 0,
		Unsheathe = 1,
		Sheathe   = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBWeaponStatus
	 */
	enum class ESBWeaponStatus : uint8_t
	{
		AP   = 0,
		CP   = 1,
		STR  = 2,
		VIT  = 3,
		DEX  = 4,
		INT  = 5,
		MND  = 6,
		ATTR = 7,
		SPC  = 8,
		Max  = 9
	};

	/**
	 * Enum SkyBlue.ESBChatLogWindowSlot
	 */
	enum class ESBChatLogWindowSlot : uint8_t
	{
		SLOT     = 0,
		SLOT01   = 1,
		SLOT02   = 2,
		SLOT03   = 3,
		SLOT_MAX = 4
	};

	/**
	 * Enum SkyBlue.ESBChatSendErrorType
	 */
	enum class ESBChatSendErrorType : uint8_t
	{
		NoRecipient    = 0,
		PrivateOffline = 1,
		PrivateMission = 2,
		MAX            = 3
	};

	/**
	 * Enum SkyBlue.ESBFollowStatusType
	 */
	enum class ESBFollowStatusType : uint8_t
	{
		None         = 0,
		Follow       = 1,
		Followed     = 2,
		MutualFollow = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.EPlayerStateMachine
	 */
	enum class EPlayerStateMachine : uint8_t
	{
		None      = 0,
		Main      = 1,
		AimBody   = 2,
		AimOffset = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ELaunchSkillPreInputType
	 */
	enum class ELaunchSkillPreInputType : uint8_t
	{
		Attack = 0,
		Step   = 1,
		None   = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBSkillMarkerRange
	 */
	enum class ESBSkillMarkerRange : uint8_t
	{
		None       = 0,
		Direct     = 1,
		Horizontal = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBSkillMarkerRayCollision
	 */
	enum class ESBSkillMarkerRayCollision : uint8_t
	{
		Terrain         = 0,
		Enemy           = 1,
		TerrainAndEnemy = 2,
		MAX             = 3
	};

	/**
	 * Enum SkyBlue.ESBSkillMarkerAim
	 */
	enum class ESBSkillMarkerAim : uint8_t
	{
		None                       = 0,
		ReticleFront               = 1,
		ReticleFrontDown           = 2,
		ReticleHorizontalFrontDown = 3,
		Player                     = 4,
		PlayerFront                = 5,
		PlayerFrontDown            = 6,
		TargetDown                 = 7,
		MAX                        = 8
	};

	/**
	 * Enum SkyBlue.ESBSkillMarkerPlace
	 */
	enum class ESBSkillMarkerPlace : uint8_t
	{
		None    = 0,
		Ground  = 1,
		Terrain = 2,
		Air     = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBCommunicatePlayerSkillEvent
	 */
	enum class ESBCommunicatePlayerSkillEvent : uint8_t
	{
		None                              = 0,
		dummy                             = 1,
		LargeShield_ShieldCreated_Lv1     = 2,
		LargeShield_ShieldCreated_Lv2     = 3,
		LargeShield_ShieldCreated_Lv3     = 4,
		LargeShield_ShieldDestroyed       = 5,
		RegularBuffArrow_ResetGaugeAmount = 6,
		StoneBody_GuardBreak              = 7,
		BreakAction_Success               = 8,
		MAX                               = 9
	};

	/**
	 * Enum SkyBlue.ESBCommunicatePlayerSkillFlag
	 */
	enum class ESBCommunicatePlayerSkillFlag : uint8_t
	{
		None                               = 0,
		LargeShield_ShieldCreated_Lv1      = 1,
		LargeShield_ShieldCreated_Lv2      = 2,
		LargeShield_ShieldCreated_Lv3      = 3,
		LargeShield_ShieldReleased         = 4,
		HatTrick_WeakPointHit              = 5,
		LancerMain_ChargeMax               = 6,
		LancerMain_Charging                = 7,
		ResonanceSpear_SpreadingLancerMark = 8,
		PerformerMain_ChargeMax            = 9,
		MAX                                = 10
	};

	/**
	 * Enum SkyBlue.ESBCommunicatePlayerSkillParam
	 */
	enum class ESBCommunicatePlayerSkillParam : uint8_t
	{
		None                                = 0,
		dummy                               = 1,
		RegularBuffArrow_AddGaugeAmount     = 2,
		StoneBody_Durability                = 3,
		ShieldDash_DamageUpRate             = 4,
		ResonanceSpear_SpreadDamageUpRate   = 5,
		ChargeSkill_LastCastSkillChargeTime = 6,
		AbsoluteDefense_AddGaugeAmount      = 7,
		MAX                                 = 8
	};

	/**
	 * Enum SkyBlue.ESBSmasherReloadType
	 */
	enum class ESBSmasherReloadType : uint8_t
	{
		None                  = 0,
		FullReload            = 1,
		QuickReload           = 2,
		PowerReload           = 3,
		QuickPowerReload      = 4,
		HealBulletReload      = 5,
		QuickHealBulletReload = 6,
		MAX                   = 7
	};

	/**
	 * Enum SkyBlue.ESBEngramCannonRotateDirection
	 */
	enum class ESBEngramCannonRotateDirection : uint8_t
	{
		Left  = 0,
		Right = 1,
		Up    = 2,
		Down  = 3,
		MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBEngramCannonStatus
	 */
	enum class ESBEngramCannonStatus : uint8_t
	{
		Idle                 = 0,
		NowCharge            = 1,
		NowFullCharge        = 2,
		NowFullChargeToEnter = 3,
		InRidePlayer         = 4,
		NowShotting          = 5,
		ShottingAfter        = 6,
		CoolTime             = 7,
		RechargeInit         = 8,
		MAX                  = 9
	};

	/**
	 * Enum SkyBlue.ESBInteractionType
	 */
	enum class ESBInteractionType : uint8_t
	{
		None              = 0,
		InteractionTarget = 1,
		MeshClimbing      = 2,
		Resurrection      = 3,
		CureBadCondition  = 4,
		Sheathe           = 5,
		MAX               = 6
	};

	/**
	 * Enum SkyBlue.ESBInteractionState
	 */
	enum class ESBInteractionState : uint8_t
	{
		None      = 0,
		Search    = 1,
		Input     = 2,
		PreAction = 3,
		Action    = 4,
		MAX       = 5
	};

	/**
	 * Enum SkyBlue.ESBJointGestureState
	 */
	enum class ESBJointGestureState : uint8_t
	{
		None        = 0,
		HandHolding = 1,
		Janken      = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBOccupiedState
	 */
	enum class ESBOccupiedState : uint8_t
	{
		None     = 0,
		Register = 1,
		Success  = 2,
		Failed   = 3,
		MAX      = 4
	};

	/**
	 * Enum SkyBlue.ESBAdminCommandCallbackRequest
	 */
	enum class ESBAdminCommandCallbackRequest : uint8_t
	{
		None             = 0,
		OpenConsole      = 1,
		CloseConsole     = 2,
		CloseChatWindow  = 3,
		OpenBookmarkList = 4,
		StartCommand     = 5,
		FinishCommand    = 6,
		Max              = 7
	};

	/**
	 * Enum SkyBlue.ESBFmAttribute
	 */
	enum class ESBFmAttribute : uint8_t
	{
		None     = 0,
		Earth    = 1,
		Fire     = 2,
		Ice      = 3,
		Thunder  = 4,
		Light    = 5,
		Darkness = 6,
		MAX      = 7
	};

	/**
	 * Enum SkyBlue.ESBFmItemEffect
	 */
	enum class ESBFmItemEffect : uint8_t
	{
		ChangeAttribute = 0,
		ShorteningTime  = 1,
		IncreaseAmount  = 2,
		ResetCell       = 3,
		MAX             = 4
	};

	/**
	 * Enum SkyBlue.ESBFmCellPlantedState
	 */
	enum class ESBFmCellPlantedState : uint8_t
	{
		None    = 0,
		Planted = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBNaEventRewardAssetType
	 */
	enum class ESBNaEventRewardAssetType : uint8_t
	{
		None   = 0,
		Person = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.EGuildMemberRole
	 */
	enum class EGuildMemberRole : uint8_t
	{
		INVALID            = 0,
		GRAND_MASTER       = 1,
		SUB_MASTER         = 2,
		MANAGER            = 3,
		BASIC_GUILD_MEMBER = 4,
		MAX                = 5
	};

	/**
	 * Enum SkyBlue.ESBRewardBoostResetPattern
	 */
	enum class ESBRewardBoostResetPattern : uint8_t
	{
		None  = 0,
		Daily = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.ESBRewardBoostType
	 */
	enum class ESBRewardBoostType : uint8_t
	{
		Mission        = 0,
		Collection     = 1,
		Storing        = 2,
		Production     = 3,
		LiquidMemory   = 4,
		Token          = 5,
		FangExpedition = 6,
		StackB         = 7,
		Quest          = 8,
		SeasonPass     = 9,
		Invalid        = 10,
		MAX            = 11
	};

	/**
	 * Enum SkyBlue.ESBRewardBoostStackBItemType
	 */
	enum class ESBRewardBoostStackBItemType : uint8_t
	{
		None          = 0,
		Weapon        = 1,
		BattleImagine = 2,
		InnerImagine  = 3,
		Mount         = 4,
		MAX           = 5
	};

	/**
	 * Enum SkyBlue.ESBFusionTicketType
	 */
	enum class ESBFusionTicketType : uint8_t
	{
		None      = 0,
		Tuning    = 1,
		Protect   = 2,
		Delete    = 3,
		Recycling = 4,
		Slot1Open = 5,
		Slot2Open = 6,
		Slot3Open = 7,
		Slot4Open = 8,
		Max       = 9
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardClearStatus
	 */
	enum class ESBAdventureBoardClearStatus : uint8_t
	{
		None       = 0,
		PanelClear = 1,
		BoardGoal  = 2,
		Num        = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardPanelStatus
	 */
	enum class ESBAdventureBoardPanelStatus : uint8_t
	{
		Close          = 0,
		Open           = 1,
		ClearEffectBF  = 2,
		Clear          = 3,
		GetRewardAfter = 4,
		Num            = 5,
		None           = 6,
		MAX            = 7
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardStatus
	 */
	enum class ESBAdventureBoardStatus : uint8_t
	{
		Active         = 0,
		Moving         = 1,
		Complete       = 2,
		GetRewardAfter = 3,
		None           = 4,
		Num            = 5,
		MAX            = 6
	};

	/**
	 * Enum SkyBlue.ESBAutoDeliveryQuestReloadType
	 */
	enum class ESBAutoDeliveryQuestReloadType : uint8_t
	{
		Point = 0,
		Pay   = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassQuestType
	 */
	enum class ESBSeasonPassQuestType : uint8_t
	{
		Standard = 0,
		Event    = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESBAutoDeliveryRewardStatus
	 */
	enum class ESBAutoDeliveryRewardStatus : uint8_t
	{
		None    = 0,
		Mail    = 1,
		Exp     = 2,
		MailExp = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassQuestCycleType
	 */
	enum class ESBSeasonPassQuestCycleType : uint8_t
	{
		Daily  = 0,
		Weekly = 1,
		Season = 2,
		Bonus  = 3,
		Event  = 4,
		MAX    = 5,
		Mix    = 6
	};

	/**
	 * Enum SkyBlue.ESBAutoDeliveryQuestUpdateType
	 */
	enum class ESBAutoDeliveryQuestUpdateType : uint8_t
	{
		Reload        = 0,
		Clear         = 1,
		Add           = 2,
		DalyWeeklyEnd = 3,
		SeasonStart   = 4,
		SeasonEnd     = 5,
		Update        = 6,
		MAX           = 7
	};

	/**
	 * Enum SkyBlue.ESBElQuestRewardStatus
	 */
	enum class ESBElQuestRewardStatus : uint8_t
	{
		None    = 0,
		Mail    = 1,
		Exp     = 2,
		MailExp = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBFang_expeditionLimitType
	 */
	enum class ESBFang_expeditionLimitType : uint8_t
	{
		None          = 0,
		AdventureRank = 1,
		Quest         = 2,
		Achievement   = 3,
		ESBFang_MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBFang_expeditionStatus
	 */
	enum class ESBFang_expeditionStatus : uint8_t
	{
		None        = 0,
		Play        = 1,
		NoCheck     = 2,
		Cancel      = 3,
		Complete    = 4,
		ESBFang_MAX = 5
	};

	/**
	 * Enum SkyBlue.EGuildAttribute
	 */
	enum class EGuildAttribute : uint8_t
	{
		Exprole     = 0,
		Traning     = 1,
		Communicate = 2,
		Creative    = 3,
		Casual      = 4,
		Hard        = 5,
		RolePlay    = 6,
		MAX         = 7
	};

	/**
	 * Enum SkyBlue.EGuildAcceptType
	 */
	enum class EGuildAcceptType : uint8_t
	{
		NeedCertification = 0,
		AutoCertification = 1,
		InviteOnly        = 2,
		MAX               = 3
	};

	/**
	 * Enum SkyBlue.ESBGuildActivityTime
	 */
	enum class ESBGuildActivityTime : uint8_t
	{
		UNDECIDED = 0,
		MORNING   = 1,
		NOON      = 2,
		NIGHT     = 3,
		MIDNIGHT  = 4,
		WEEKDAYS  = 5,
		WEEKENDS  = 6,
		MAX       = 7
	};

	/**
	 * Enum SkyBlue.ESBGuildErrorCode
	 */
	enum class ESBGuildErrorCode : uint8_t
	{
		SUCCESS                 = 0,
		UNKNOWN_ERROR           = 1,
		GUILD_NOT_FOUND         = 2,
		GUILD_NOT_MEMBER        = 3,
		GUILD_PERMISSION_DENIED = 4,
		GUILD_NO_ENTRY          = 5,
		DUPLICATE_ENTRY         = 6,
		GUILD_ALREDY_MEMBER     = 7,
		DUPLICATE_NAME          = 8,
		MEMBER_MAX              = 9,
		NG_WORD                 = 10,
		CHARACTER_NOT_FOUND     = 11,
		MAX                     = 12
	};

	/**
	 * Enum SkyBlue.ESBPnQuestRewardStatus
	 */
	enum class ESBPnQuestRewardStatus : uint8_t
	{
		None    = 0,
		Mail    = 1,
		Exp     = 2,
		MailExp = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ELibraryImagineType
	 */
	enum class ELibraryImagineType : uint8_t
	{
		BattleImagine  = 0,
		EnhanceImagine = 1,
		Num            = 2,
		MAX            = 3
	};

	/**
	 * Enum SkyBlue.ESBTutorialHelpTextDispType
	 */
	enum class ESBTutorialHelpTextDispType : uint8_t
	{
		None   = 0,
		Top    = 1,
		Bottom = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBTutorialHelpCategoryType
	 */
	enum class ESBTutorialHelpCategoryType : uint8_t
	{
		None          = 0,
		Control       = 1,
		Character     = 2,
		Equip         = 3,
		Battle        = 4,
		City          = 5,
		Field         = 6,
		Mission       = 7,
		Quest         = 8,
		Party         = 9,
		Communication = 10,
		Team          = 11,
		Shop          = 12,
		Advice        = 13,
		Other         = 14,
		MAX           = 15
	};

	/**
	 * Enum SkyBlue.EAcceptedQuestErrorCode
	 */
	enum class EAcceptedQuestErrorCode : uint8_t
	{
		None              = 0,
		GenericError      = 1,
		AlreadyAccepted   = 2,
		PreconditionError = 3,
		LockedError       = 4,
		Num               = 5,
		MAX               = 6
	};

	/**
	 * Enum SkyBlue.EQuestCompleteResult
	 */
	enum class EQuestCompleteResult : uint8_t
	{
		Success                   = 0,
		InvalidRequest            = 1,
		InventoryNotCapacity      = 2,
		EnougthDeliverables       = 3,
		PreconditionError         = 4,
		EquipBagNotCapacity       = 5,
		StorageNotCapacity        = 6,
		NotFoundMasterDataManager = 7,
		NotFoundQuestMasterData   = 8,
		NotFoundAcceptedQuestInfo = 9,
		QuestStatusIsNotDone      = 10,
		MAX                       = 11
	};

	/**
	 * Enum SkyBlue.ESBResearchTeamStatus
	 */
	enum class ESBResearchTeamStatus : uint8_t
	{
		Unreleased = 0,
		Available  = 1,
		InUse      = 2,
		Charging   = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.ESBGashaPurchaseType
	 */
	enum class ESBGashaPurchaseType : uint8_t
	{
		PurchaseType_None    = 0,
		PurchaseType_RoseOrb = 1,
		PurchaseType_Ticket  = 2,
		PurchaseType_BP      = 3,
		PurchaseType_MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBRmShopErrorStatus
	 */
	enum class ESBRmShopErrorStatus : uint8_t
	{
		NONE                  = 0,
		FEATURE_DISABLED      = 1,
		FEATURE_DISABLED_SHOP = 2,
		FEATURE_UPDATE        = 3,
		UNKNOWN               = 4,
		MAX                   = 5
	};

	/**
	 * Enum SkyBlue.ESBRmShopType
	 */
	enum class ESBRmShopType : uint8_t
	{
		BPP_EXCHANGE           = 0,
		SEASON_PASS_BUY        = 1,
		SEASON_PASS_BUY_RANKUP = 2,
		MAX                    = 3
	};

	/**
	 * Enum SkyBlue.ESBHistoryType
	 */
	enum class ESBHistoryType : uint8_t
	{
		RoseOrb = 0,
		BPpoint = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBRmShopMenuType
	 */
	enum class ESBRmShopMenuType : uint8_t
	{
		Unknown                = 0,
		RoseOrbPurchase        = 1,
		RoseOrbShop            = 2,
		BpPointExchange        = 3,
		BpPointShop            = 4,
		Gasya                  = 5,
		SeasonPassPurchase     = 6,
		SeasonPassShop         = 7,
		SeasonPassRankPurchase = 8,
		Max                    = 9
	};

	/**
	 * Enum SkyBlue.ESBGashaDemoRank
	 */
	enum class ESBGashaDemoRank : uint8_t
	{
		None = 0,
		A    = 1,
		S    = 2,
		MAX  = 3
	};

	/**
	 * Enum SkyBlue.ECountdownResult
	 */
	enum class ECountdownResult : uint8_t
	{
		TimeUp      = 0,
		Interaction = 1,
		Cancel      = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ECountdownType
	 */
	enum class ECountdownType : uint8_t
	{
		RespawnFromDead = 0,
		Warp            = 1,
		GameLogout      = 2,
		MAX             = 3
	};

	/**
	 * Enum SkyBlue.ERsDialogResult
	 */
	enum class ERsDialogResult : uint8_t
	{
		Ok     = 0,
		Yes    = 1,
		No     = 2,
		Cancel = 3,
		None   = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.EItemAppraisalResultPhase
	 */
	enum class EItemAppraisalResultPhase : uint8_t
	{
		UNIDENTIFED   = 0,
		UNDERAPPRAISA = 1,
		APPRAISED     = 2,
		SALE          = 3,
		END           = 4,
		MAX           = 5
	};

	/**
	 * Enum SkyBlue.ESBWarehouseAbilityCharacterStatus
	 */
	enum class ESBWarehouseAbilityCharacterStatus : uint8_t
	{
		Hidden              = 0,
		PreconditionCleared = 1,
		Published           = 2,
		ConditionsCleared   = 3,
		Mastered            = 4,
		MAX                 = 5
	};

	/**
	 * Enum SkyBlue.ESBAbilityForceConditionType
	 */
	enum class ESBAbilityForceConditionType : uint8_t
	{
		NoCheck = 0,
		Success = 1,
		Failure = 2,
		Num     = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBAbilityConditionOperator
	 */
	enum class ESBAbilityConditionOperator : uint8_t
	{
		Greater      = 0,
		GreaterEqual = 1,
		Less         = 2,
		LessEqual    = 3,
		Equal        = 4,
		NotEqual     = 5,
		Num          = 6,
		MAX          = 7
	};

	/**
	 * Enum SkyBlue.ESBAbilityValueLimitType
	 */
	enum class ESBAbilityValueLimitType : uint8_t
	{
		Max = 0,
		Min = 1
	};

	/**
	 * Enum SkyBlue.ESBAbilityDotAmountType
	 */
	enum class ESBAbilityDotAmountType : uint8_t
	{
		Fix   = 0,
		Rate  = 1,
		Scale = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBAbilityExpirationType
	 */
	enum class ESBAbilityExpirationType : uint8_t
	{
		UserAction    = 0,
		TimeLimit     = 1,
		dummy         = 2,
		Count         = 3,
		DotTimeCount  = 4,
		CountWithTime = 5,
		Num           = 6,
		MAX           = 7
	};

	/**
	 * Enum SkyBlue.ESBHealRecoveryType
	 */
	enum class ESBHealRecoveryType : uint8_t
	{
		HealSkill       = 0,
		BattleImagine   = 1,
		Item            = 2,
		TacticalSkillID = 3,
		MAX             = 4
	};

	/**
	 * Enum SkyBlue.ESBAbilityCharacterStatusType
	 */
	enum class ESBAbilityCharacterStatusType : uint8_t
	{
		MoveSpeed            = 0,
		StaminaRecoverySpeed = 1,
		ResurrectionSpeed    = 2,
		JumpVelocity         = 3,
		MAX                  = 4
	};

	/**
	 * Enum SkyBlue.ESBBaseStatusBoostType
	 */
	enum class ESBBaseStatusBoostType : uint8_t
	{
		HP               = 0,
		ST               = 1,
		STR              = 2,
		VIT              = 3,
		DEX              = 4,
		INT              = 5,
		MND              = 6,
		Attack           = 7,
		Defence          = 8,
		Recuperative     = 9,
		CriticalHitRate  = 10,
		CriticalHitPower = 11,
		FireResist       = 12,
		IceResist        = 13,
		ThunderResist    = 14,
		EarthResist      = 15,
		LightResist      = 16,
		DarknessResist   = 17,
		FireAttack       = 18,
		IceAttack        = 19,
		ThunderAttack    = 20,
		EarthAttack      = 21,
		LightAttack      = 22,
		DarknessAttack   = 23,
		None             = 24,
		MAX              = 25
	};

	/**
	 * Enum SkyBlue.ESBAbilityUIAttribute
	 */
	enum class ESBAbilityUIAttribute : uint8_t
	{
		FixAbility  = 0,
		RateAbility = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.ESBAbilityLimitSumParamType
	 */
	enum class ESBAbilityLimitSumParamType : uint8_t
	{
		None                = 0,
		GiveDamage          = 1,
		ReceiveDamage       = 2,
		SkillInterval       = 3,
		ReduceStamina       = 4,
		ElementAccumulation = 5,
		Amount_HealSkill    = 6,
		Max                 = 7
	};

	/**
	 * Enum SkyBlue.ESBAbilityLimitParamType
	 */
	enum class ESBAbilityLimitParamType : uint8_t
	{
		None                      = 0,
		HP                        = 1,
		ST                        = 2,
		STR                       = 3,
		VIT                       = 4,
		DEX                       = 5,
		INT                       = 6,
		MND                       = 7,
		AttackPower               = 8,
		DefencePower              = 9,
		RecuperativePower         = 10,
		CriticalRate              = 11,
		CriticalPower             = 12,
		ElementResist             = 13,
		ElementAttack             = 14,
		ElementAccumulation       = 15,
		GiveDamage                = 16,
		GiveDamage_Main           = 17,
		GiveDamage_Sub            = 18,
		GiveDamage_TSkill         = 19,
		GiveDamage_SpecialSkill   = 20,
		GiveDamage_BI             = 21,
		GiveDamage_NearFar        = 22,
		GiveDamage_Race           = 23,
		GiveDamage_EnemyAttribute = 24,
		GiveDamage_EnemyID        = 25,
		GiveDamage_ContentID      = 26,
		ReceiveDamage             = 27,
		ReceiveDamage_NearFar     = 28,
		ReceiveDamage_Element     = 29,
		Amount_HealSkill          = 30,
		Amount_BI                 = 31,
		SkillInterval             = 32,
		ReduceStamina             = 33,
		ReduceStamina_Dash        = 34,
		ReduceStamina_Jump        = 35,
		ReduceStamina_Dodge       = 36,
		Success_Status            = 37,
		Success_StatusResist      = 38,
		SkillButtonCharge         = 39,
		MoveSpeed                 = 40,
		JumpVelocity              = 41,
		RecoveryStamina           = 42,
		HPLoss                    = 43,
		Max                       = 44
	};

	/**
	 * Enum SkyBlue.ESBAbilityLimitType
	 */
	enum class ESBAbilityLimitType : uint8_t
	{
		EquipItem        = 0,
		NoEquipNoBilling = 1,
		Last             = 2,
		MAX              = 3
	};

	/**
	 * Enum SkyBlue.ESBAbilityCalcSuccessRate
	 */
	enum class ESBAbilityCalcSuccessRate : uint8_t
	{
		None                             = 0,
		Stun                             = 1,
		Sleep                            = 2,
		Poison                           = 3,
		FixTarget                        = 4,
		Fear                             = 5,
		Dark                             = 6,
		CannotSkill                      = 7,
		StaminaZero                      = 8,
		CannotItem                       = 9,
		Nappo                            = 10,
		Restraint                        = 11,
		Paralyze                         = 12,
		RecoverAttackerWhenRecieveDamage = 13,
		GiveDamageDown                   = 14,
		ReceiveDamageUp                  = 15,
		ChargeSpeedDown                  = 16,
		IntervalSpeedDown                = 17,
		MoveSpeedDown                    = 18,
		StaminaRecoveryDown              = 19,
		Earth                            = 20,
		Fire                             = 21,
		Ice                              = 22,
		Thunder                          = 23,
		Light                            = 24,
		Darkness                         = 25,
		BeginControlBadCondition         = 26,
		EndControlBadCondition           = 27,
		Max                              = 28
	};

	/**
	 * Enum SkyBlue.ESBAbilitySimultaneousActivationControl
	 */
	enum class ESBAbilitySimultaneousActivationControl : uint8_t
	{
		Block           = 0,
		FirstInFirstOut = 1,
		Max             = 2
	};

	/**
	 * Enum SkyBlue.ESBAbilityValueShortAndExten
	 */
	enum class ESBAbilityValueShortAndExten : uint8_t
	{
		Shorten   = 0,
		Extension = 1,
		MAX       = 2
	};

	/**
	 * Enum SkyBlue.ESBAbilityValueUpAndDown
	 */
	enum class ESBAbilityValueUpAndDown : uint8_t
	{
		Up   = 0,
		Down = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBAbilityEnemyAttributeType
	 */
	enum class ESBAbilityEnemyAttributeType : uint8_t
	{
		DemiHuman  = 0,
		Avality    = 1,
		Beast      = 2,
		Crustacea  = 3,
		Hygrophila = 4,
		Humanity   = 5,
		Bufferia   = 6,
		Makia      = 7,
		Dragon     = 8,
		Unknown01  = 9,
		Unknown02  = 10,
		Unknown03  = 11,
		Unknown04  = 12,
		Unknown05  = 13,
		Unknown06  = 14,
		RareEnemy  = 15,
		Spirit     = 16,
		Insect     = 17,
		Ground     = 18,
		Aerial     = 19,
		Plant      = 20,
		Bird       = 21,
		Flux       = 22,
		BstDevotee = 23,
		Distortion = 24,
		Max        = 25
	};

	/**
	 * Enum SkyBlue.ESBAbilityOnlyEnemyStatus
	 */
	enum class ESBAbilityOnlyEnemyStatus : uint8_t
	{
		FlashStun = 0,
		NUM       = 1,
		MAX       = 2
	};

	/**
	 * Enum SkyBlue.ESBAbilityControlBadCondition
	 */
	enum class ESBAbilityControlBadCondition : uint8_t
	{
		None                             = 0,
		Stun                             = 1,
		Sleep                            = 2,
		Poison                           = 3,
		FixTarget                        = 4,
		Fear                             = 5,
		Dark                             = 6,
		CannotSkill                      = 7,
		StaminaZero                      = 8,
		CannotItem                       = 9,
		Nappo                            = 10,
		Restraint                        = 11,
		Paralyze                         = 12,
		RecoverAttackerWhenRecieveDamage = 13,
		GiveDamageDown                   = 14,
		ReceiveDamageUp                  = 15,
		ChargeSpeedDown                  = 16,
		IntervalSpeedDown                = 17,
		MoveSpeedDown                    = 18,
		StaminaRecoveryDown              = 19,
		Max                              = 20
	};

	/**
	 * Enum SkyBlue.ESBAbilityRecoveryAmountType
	 */
	enum class ESBAbilityRecoveryAmountType : uint8_t
	{
		Fix  = 0,
		Rate = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBAbilityExecuteEnv
	 */
	enum class ESBAbilityExecuteEnv : uint8_t
	{
		All             = 0,
		Server          = 1,
		LocalController = 2,
		MAX             = 3
	};

	/**
	 * Enum SkyBlue.ESBAbilityReduceStaminaType
	 */
	enum class ESBAbilityReduceStaminaType : uint8_t
	{
		Dash  = 0,
		Jump  = 1,
		Dodge = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBAbilitySkillPosition
	 */
	enum class ESBAbilitySkillPosition : uint8_t
	{
		Main           = 0,
		Sub            = 1,
		TacticalSkill1 = 2,
		TacticalSkill2 = 3,
		TacticalSkill3 = 4,
		TacticalSkill4 = 5,
		ULT            = 6,
		BattleImagine1 = 7,
		BattleImagine2 = 8,
		MountImagine   = 9,
		TacticalSkill5 = 10,
		TacticalSkill6 = 11,
		TacticalSkill7 = 12,
		TacticalSkill8 = 13,
		Max            = 14
	};

	/**
	 * Enum SkyBlue.ESBAbilityEffectiveCategory
	 */
	enum class ESBAbilityEffectiveCategory : uint8_t
	{
		None         = 0,
		Heal         = 1,
		BuffPositive = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBBattleEffectiveFeel
	 */
	enum class ESBBattleEffectiveFeel : uint8_t
	{
		Positive = 0,
		Negative = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESBAchievementSortType
	 */
	enum class ESBAchievementSortType : uint8_t
	{
		Default_Asc  = 0,
		Default_Desc = 1,
		New          = 2,
		Rank_Asc     = 3,
		Rank_Desc    = 4,
		Val_Asc      = 5,
		Val_Desc     = 6,
		Reward       = 7,
		Term         = 8,
		MAX          = 9
	};

	/**
	 * Enum SkyBlue.ESBActivityCategory
	 */
	enum class ESBActivityCategory : uint8_t
	{
		Unknown   = 0,
		Player    = 1,
		Party     = 2,
		Quest     = 3,
		Colosseum = 4,
		Field     = 5,
		MAX       = 6
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardRouteStatus
	 */
	enum class ESBAdventureBoardRouteStatus : uint8_t
	{
		None        = 0,
		Hide        = 1,
		Visble      = 2,
		ClearEffect = 3,
		Num         = 4,
		MAX         = 5
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardFilterType
	 */
	enum class ESBAdventureBoardFilterType : uint8_t
	{
		None     = 0,
		Active   = 1,
		Favorite = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardPanelMissionType
	 */
	enum class ESBAdventureBoardPanelMissionType : uint8_t
	{
		None        = 0,
		Subjugation = 1,
		Gahter      = 2,
		Adventure   = 3,
		Survey      = 4,
		MAX         = 5
	};

	/**
	 * Enum SkyBlue.ESBAdventureBoardRewardStatusType
	 */
	enum class ESBAdventureBoardRewardStatusType : uint8_t
	{
		Noarmal           = 0,
		AllRewardGetAfter = 1,
		AllData           = 2,
		Num               = 3,
		None              = 4,
		MAX               = 5
	};

	/**
	 * Enum SkyBlue.EAestheShop
	 */
	enum class EAestheShop : uint8_t
	{
		None                    = 0,
		AppearanceInfo_Slot_Max = 1,
		MAX                     = 2
	};

	/**
	 * Enum SkyBlue.ESBAIEnemyActionLotteryLogicalOperationType
	 */
	enum class ESBAIEnemyActionLotteryLogicalOperationType : uint8_t
	{
		AND = 0,
		OR  = 1,
		MAX = 2
	};

	/**
	 * Enum SkyBlue.ESBAIEnemyActionLotteryModifierInstant
	 */
	enum class ESBAIEnemyActionLotteryModifierInstant : uint8_t
	{
		ClearRecast = 0,
		MAX         = 1
	};

	/**
	 * Enum SkyBlue.ESBAIEnemyActionLotteryModifierTrigger
	 */
	enum class ESBAIEnemyActionLotteryModifierTrigger : uint8_t
	{
		None         = 0,
		OnPlayerDead = 1,
		MAX          = 2
	};

	/**
	 * Enum SkyBlue.ESBAIEnemyActionLotteryPartyBattle
	 */
	enum class ESBAIEnemyActionLotteryPartyBattle : uint8_t
	{
		None   = 0,
		Normal = 1,
		Party  = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBAIEnemyActionLotteryPhase
	 */
	enum class ESBAIEnemyActionLotteryPhase : uint8_t
	{
		None   = 0,
		Phase1 = 1,
		Phase2 = 2,
		Phase3 = 3,
		Phase4 = 4,
		Phase5 = 5,
		MAX    = 6
	};

	/**
	 * Enum SkyBlue.ESBAIEnemyActionLotteryPriority
	 */
	enum class ESBAIEnemyActionLotteryPriority : uint8_t
	{
		Unspecified = 0,
		P1          = 1,
		P2          = 2,
		P3          = 3,
		Bottom      = 4,
		Num         = 5,
		MAX         = 6
	};

	/**
	 * Enum SkyBlue.ESBAICanAttackResult
	 */
	enum class ESBAICanAttackResult : uint8_t
	{
		NotPossible = 0,
		Possible    = 1,
		NeedTurn    = 2,
		NeedMove    = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.ESBAIActionAreaType
	 */
	enum class ESBAIActionAreaType : uint8_t
	{
		Territory = 0,
		LineArea  = 1,
		BuffArea  = 2,
		Max       = 3
	};

	/**
	 * Enum SkyBlue.ESBAICustomPriority
	 */
	enum class ESBAICustomPriority : uint8_t
	{
		Default    = 0,
		PartsBreak = 1,
		Ultimate   = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBAIReactiveSkill_GuardState
	 */
	enum class ESBAIReactiveSkill_GuardState : uint8_t
	{
		Normal                 = 0,
		Guarding               = 1,
		Both                   = 2,
		ESBAIReactiveSkill_MAX = 3
	};

	/**
	 * Enum SkyBlue.ESBAIPositioningType
	 */
	enum class ESBAIPositioningType : uint8_t
	{
		Vanguard  = 0,
		Rearguard = 1,
		MAX       = 2
	};

	/**
	 * Enum SkyBlue.ESBAITacticalSkill_GuardState
	 */
	enum class ESBAITacticalSkill_GuardState : uint8_t
	{
		Normal                 = 0,
		Guarding               = 1,
		Both                   = 2,
		ESBAITacticalSkill_MAX = 3
	};

	/**
	 * Enum SkyBlue.ESBAITacticalSkill_StateOperation
	 */
	enum class ESBAITacticalSkill_StateOperation : uint8_t
	{
		Set                    = 0,
		Add                    = 1,
		ESBAITacticalSkill_MAX = 2
	};

	/**
	 * Enum SkyBlue.ESBAITacticalSkill_StateComparison
	 */
	enum class ESBAITacticalSkill_StateComparison : uint8_t
	{
		Equal                  = 0,
		NotEqual               = 1,
		LessThan               = 2,
		LessThanEqual          = 3,
		GreaterThan            = 4,
		GreaterThanEqual       = 5,
		ESBAITacticalSkill_MAX = 6
	};

	/**
	 * Enum SkyBlue.ESBAITacticalSkill_StateType
	 */
	enum class ESBAITacticalSkill_StateType : uint8_t
	{
		Bool                   = 0,
		Int                    = 1,
		Float                  = 2,
		ESBAITacticalSkill_MAX = 3
	};

	/**
	 * Enum SkyBlue.EProjectileFollowSlopeRotType
	 */
	enum class EProjectileFollowSlopeRotType : uint8_t
	{
		None            = 0,
		FollowPitchRoll = 1,
		FollowPitchOnly = 2,
		FollowRollOnly  = 3,
		MAX             = 4
	};

	/**
	 * Enum SkyBlue.ESBAmbientAkEventShape
	 */
	enum class ESBAmbientAkEventShape : uint8_t
	{
		Point  = 0,
		Box    = 1,
		Sphere = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBAnimNotifyPlayType
	 */
	enum class ESBAnimNotifyPlayType : uint8_t
	{
		None                 = 0,
		Normal               = 1,
		Berserker_BrutalBlow = 2,
		MAX                  = 3
	};

	/**
	 * Enum SkyBlue.ENotifyRuleLogic
	 */
	enum class ENotifyRuleLogic : uint8_t
	{
		AND  = 0,
		OR   = 1,
		NAND = 2,
		NOR  = 3,
		MAX  = 4
	};

	/**
	 * Enum SkyBlue.EOverlapBattleStatusTarget
	 */
	enum class EOverlapBattleStatusTarget : uint8_t
	{
		None   = 0,
		Enemy  = 1,
		Friend = 2,
		All    = 3,
		MAX    = 4
	};

	/**
	 * Enum SkyBlue.ECameraAnimNotifyPlaySpace
	 */
	enum class ECameraAnimNotifyPlaySpace : uint8_t
	{
		PlaySpace_Local = 0,
		PlaySpace_World = 1,
		PlaySpace_MAX   = 2
	};

	/**
	 * Enum SkyBlue.ECameraSettingsType
	 */
	enum class ECameraSettingsType : uint8_t
	{
		CameraSettingsType_None    = 0,
		CameraSettingsType_Default = 1,
		CameraSettingsType_Custom  = 2,
		CameraSettingsType_MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBLieOnGroundSituation
	 */
	enum class ESBLieOnGroundSituation : uint8_t
	{
		Down    = 0,
		Running = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBSendMaterialParamCalcType
	 */
	enum class ESBSendMaterialParamCalcType : uint8_t
	{
		ElapsedTime = 0,
		ElapsedRate = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.ESBSortType
	 */
	enum class ESBSortType : uint8_t
	{
		ASC  = 0,
		DESC = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBAttackParam
	 */
	enum class ESBAttackParam : uint8_t
	{
		None                   = 0,
		Common_StaminaRecovery = 1,
		Common_ShieldRecovery  = 2,
		Rebellion_RageUp       = 3,
		MAX                    = 4
	};

	/**
	 * Enum SkyBlue.ENavmeshDirection
	 */
	enum class ENavmeshDirection : uint8_t
	{
		Left  = 0,
		Right = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.EAutoWordEventType
	 */
	enum class EAutoWordEventType : uint8_t
	{
		None                = 0,
		Spawn               = 1,
		Respawn             = 2,
		FewHp               = 3,
		ReceiveHeal         = 4,
		Dead                = 5,
		Resurrection        = 6,
		UsedUltimateSkill   = 7,
		UsableUltimateSkill = 8,
		Freeze              = 9,
		EnemyElementalLV3   = 10,
		Num                 = 11,
		MAX                 = 12
	};

	/**
	 * Enum SkyBlue.ESBAttackMoveDestinationHeight
	 */
	enum class ESBAttackMoveDestinationHeight : uint8_t
	{
		None           = 0,
		OnStraightLine = 1,
		AttackerHeight = 2,
		TargetHeight   = 3,
		TargetGround   = 4,
		MAX            = 5
	};

	/**
	 * Enum SkyBlue.ESBShieldGuardResult
	 */
	enum class ESBShieldGuardResult : uint8_t
	{
		Guard       = 0,
		CannotGuard = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.EBattleContentsHUDType
	 */
	enum class EBattleContentsHUDType : uint8_t
	{
		None           = 0,
		Arena          = 1,
		Tower          = 2,
		TimeAttack     = 3,
		ScoreAttack    = 4,
		Raid           = 5,
		InstanceBattle = 6,
		DxBattle       = 7,
		DhcBattle      = 8,
		OneShotArena   = 9,
		KwmArena       = 10,
		ContentAction  = 11,
		MzBattle       = 12,
		Max            = 13
	};

	/**
	 * Enum SkyBlue.ESBBattleScoreSettingType
	 */
	enum class ESBBattleScoreSettingType : uint8_t
	{
		TOTAL                  = 0,
		CLASS_LEVEL            = 1,
		WEAPON_LEVEL           = 2,
		INNER_IMAGINE          = 3,
		BATTLE_IMAGINE         = 4,
		SKILL                  = 5,
		STACKB_WEAK            = 6,
		STACKB                 = 7,
		WEAPON_BASE_WEIGHT     = 8,
		MAX_PLUGS              = 9,
		EXPERT_RANK            = 10,
		POSSESSION_IMAGINE     = 11,
		WEAPON_MULTIPLICATION  = 12,
		EXPERT_RANK_PER_STAR   = 13,
		IMAGINE_BASE_WEIGHT    = 14,
		IMAGINE_MULTIPLICATION = 15,
		NUM                    = 16,
		MAX                    = 17
	};

	/**
	 * Enum SkyBlue.ESBBattleStatusMaterialParam
	 */
	enum class ESBBattleStatusMaterialParam : uint8_t
	{
		FixValue = 0,
		MAX      = 1
	};

	/**
	 * Enum SkyBlue.ESBBattleStatusEffectTiming
	 */
	enum class ESBBattleStatusEffectTiming : uint8_t
	{
		In           = 0,
		Override     = 1,
		InOrOverride = 2,
		Out          = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.ESBStatusProjectileInvoker
	 */
	enum class ESBStatusProjectileInvoker : uint8_t
	{
		Invoker = 0,
		Self    = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBStatusProjectileRequestCondition
	 */
	enum class ESBStatusProjectileRequestCondition : uint8_t
	{
		None             = 0,
		OnlyPlayerType   = 1,
		ExceptPlayerType = 2,
		MAX              = 3
	};

	/**
	 * Enum SkyBlue.EStatusAilmentDuplicateType
	 */
	enum class EStatusAilmentDuplicateType : uint8_t
	{
		Default               = 0,
		Count                 = 1,
		AlternativeAdd        = 2,
		InvokerAlternativeAdd = 3,
		Additional            = 4,
		MAX                   = 5
	};

	/**
	 * Enum SkyBlue.ESBStatusAilmentEffectTiming
	 */
	enum class ESBStatusAilmentEffectTiming : uint8_t
	{
		In           = 0,
		Override     = 1,
		InOrOverride = 2,
		Out          = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.ESBBattleStatusParamStoreType
	 */
	enum class ESBBattleStatusParamStoreType : uint8_t
	{
		Equip     = 0,
		NoBilling = 1,
		Total     = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBEnemyStatusAilmentType
	 */
	enum class ESBEnemyStatusAilmentType : uint8_t
	{
		None       = 0,
		Invincible = 1,
		FullHeal   = 2,
		AutoHeal   = 3,
		Num        = 4,
		MAX        = 5
	};

	/**
	 * Enum SkyBlue.ESBStatusAilmentRegisterState
	 */
	enum class ESBStatusAilmentRegisterState : uint8_t
	{
		None           = 0,
		Additional     = 1,
		AlternativeAdd = 2,
		Override       = 3,
		Count          = 4,
		MAX            = 5
	};

	/**
	 * Enum SkyBlue.ESBBattleDebugParamVariableType
	 */
	enum class ESBBattleDebugParamVariableType : uint8_t
	{
		Invalid = 0,
		Bool    = 1,
		Float   = 2,
		Int32   = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBGuardKnockBackPower
	 */
	enum class ESBGuardKnockBackPower : uint8_t
	{
		None  = 0,
		Small = 1,
		Mid   = 2,
		Large = 3,
		MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBKnockBackWeightClass
	 */
	enum class ESBKnockBackWeightClass : uint8_t
	{
		None                               = 0,
		KnockBackMoveReceiverEmphasisSuper = 1,
		KnockBackMoveReceiverEmphasis      = 2,
		KnockBackMoveFare                  = 3,
		KnockBackMoveAttackerOnly          = 4,
		MAX                                = 5
	};

	/**
	 * Enum SkyBlue.ESBHitKnockBackTime
	 */
	enum class ESBHitKnockBackTime : uint8_t
	{
		None  = 0,
		Short = 1,
		Mid   = 2,
		Long  = 3,
		MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBHitKnockBackPower
	 */
	enum class ESBHitKnockBackPower : uint8_t
	{
		None  = 0,
		Small = 1,
		Mid   = 2,
		Large = 3,
		MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBHitSlomoType
	 */
	enum class ESBHitSlomoType : uint8_t
	{
		None             = 0,
		IgnoreSuperArmor = 1,
		MAX              = 2
	};

	/**
	 * Enum SkyBlue.ESBHitSlomoPower
	 */
	enum class ESBHitSlomoPower : uint8_t
	{
		None      = 0,
		Light     = 1,
		Middle    = 2,
		Heavy     = 3,
		StormRush = 4,
		MAX       = 5
	};

	/**
	 * Enum SkyBlue.ESBAttackDirectionType
	 */
	enum class ESBAttackDirectionType : uint8_t
	{
		None           = 0,
		Forward        = 1,
		OtherCollision = 2,
		OtherActor     = 3,
		Velocity       = 4,
		MAX            = 5
	};

	/**
	 * Enum SkyBlue.ESBAttackDirectionOrigin
	 */
	enum class ESBAttackDirectionOrigin : uint8_t
	{
		None       = 0,
		Collision  = 1,
		Owner      = 2,
		Instigator = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.ESBDamageArmorThroughType
	 */
	enum class ESBDamageArmorThroughType : uint8_t
	{
		None = 0,
		All  = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.EAttackAttributeType
	 */
	enum class EAttackAttributeType : uint8_t
	{
		AttackAttributeType_None   = 0,
		AttackAttributeType_Slash  = 1,
		AttackAttributeType_Blow   = 2,
		AttackAttributeType_Thrust = 3,
		AttackAttributeType_MAX    = 4
	};

	/**
	 * Enum SkyBlue.EAttackHitType
	 */
	enum class EAttackHitType : uint8_t
	{
		AttackHitType_None    = 0,
		AttackHitType_Slash   = 1,
		AttackHitType_Blow    = 2,
		AttackHitType_Thrust  = 3,
		AttackHitType_Claw    = 4,
		AttackHitType_Fang    = 5,
		AttackHitType_BH_Blow = 6,
		AttackHitType_MAX     = 7
	};

	/**
	 * Enum SkyBlue.ESBAttackAttribute
	 */
	enum class ESBAttackAttribute : uint8_t
	{
		ThroughInvincibleLevel1 = 0,
		MAX                     = 1
	};

	/**
	 * Enum SkyBlue.ESBAttackThroughType
	 */
	enum class ESBAttackThroughType : uint8_t
	{
		None           = 0,
		UnBlockable    = 1,
		AbsoluteDamage = 2,
		Through        = 3,
		MAX            = 4
	};

	/**
	 * Enum SkyBlue.ESBDamageAttackType
	 */
	enum class ESBDamageAttackType : uint8_t
	{
		MeleeAttack  = 0,
		RangedAttack = 1,
		Max          = 2
	};

	/**
	 * Enum SkyBlue.ESBMapBossBGMConditionType
	 */
	enum class ESBMapBossBGMConditionType : uint8_t
	{
		Or  = 0,
		And = 1,
		MAX = 2
	};

	/**
	 * Enum SkyBlue.ESBMapBossBGMEnemyConditionType
	 */
	enum class ESBMapBossBGMEnemyConditionType : uint8_t
	{
		EnemyID            = 0,
		EnemyTag_ClearBoss = 1,
		EnemyTag_Unique    = 2,
		EnemyTotal         = 3,
		MAX                = 4
	};

	/**
	 * Enum SkyBlue.ESBResultBGMType
	 */
	enum class ESBResultBGMType : uint8_t
	{
		None         = 0,
		Dungeon      = 1,
		InstanceArea = 2,
		RaidBattle   = 3,
		Arena        = 4,
		UniqueBoss   = 5,
		MAX          = 6
	};

	/**
	 * Enum SkyBlue.ESBBossBGMEventSettingType
	 */
	enum class ESBBossBGMEventSettingType : uint8_t
	{
		None   = 0,
		Type   = 1,
		Unique = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBBossBGMSettingType
	 */
	enum class ESBBossBGMSettingType : uint8_t
	{
		RemainingHP = 0,
		MAX         = 1
	};

	/**
	 * Enum SkyBlue.ESBRaidBattleBGMType
	 */
	enum class ESBRaidBattleBGMType : uint8_t
	{
		None         = 0,
		BeforeBattle = 1,
		Battle       = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBTheaterBGMType
	 */
	enum class ESBTheaterBGMType : uint8_t
	{
		Before  = 0,
		Playing = 1,
		After   = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBArenaBGMType
	 */
	enum class ESBArenaBGMType : uint8_t
	{
		None          = 0,
		InWaitingRoom = 1,
		PreStart      = 2,
		Battle        = 3,
		PreBattleEnd  = 4,
		Result        = 5,
		MAX           = 6
	};

	/**
	 * Enum SkyBlue.ESBInstanceAreaBGMType
	 */
	enum class ESBInstanceAreaBGMType : uint8_t
	{
		BattleBefore = 0,
		Battle       = 1,
		BattleEnd    = 2,
		NoBattle     = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.ESBDungeonBGMType
	 */
	enum class ESBDungeonBGMType : uint8_t
	{
		None           = 0,
		Default        = 1,
		Mount          = 2,
		Battle         = 3,
		InterruptQuest = 4,
		Clear          = 5,
		MAX            = 6
	};

	/**
	 * Enum SkyBlue.ESBInterruptQuestBGMState
	 */
	enum class ESBInterruptQuestBGMState : uint8_t
	{
		None    = 0,
		Start   = 1,
		Battle  = 2,
		Success = 3,
		Failed  = 4,
		Leave   = 5,
		StepUp  = 6,
		MAX     = 7
	};

	/**
	 * Enum SkyBlue.ESBInterruptQuestBGMType
	 */
	enum class ESBInterruptQuestBGMType : uint8_t
	{
		NamedEnemy = 0,
		MAX        = 1
	};

	/**
	 * Enum SkyBlue.ESBFieldBGMType
	 */
	enum class ESBFieldBGMType : uint8_t
	{
		None           = 0,
		Default        = 1,
		Mounting       = 2,
		Battle         = 3,
		InterruptQuest = 4,
		Max            = 5
	};

	/**
	 * Enum SkyBlue.ESBCommonFieldBGMType
	 */
	enum class ESBCommonFieldBGMType : uint8_t
	{
		None     = 0,
		Shopping = 1,
		Fishing  = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBRestrictTextLength
	 */
	enum class ESBRestrictTextLength : uint8_t
	{
		Normal    = 0,
		Short     = 1,
		VeryShort = 2,
		Long      = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBRestrictType
	 */
	enum class ESBRestrictType : uint8_t
	{
		Permit = 0,
		Friend = 1,
		Deny   = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ECharaCreateSliderType
	 */
	enum class ECharaCreateSliderType : uint8_t
	{
		Height   = 0,
		Physique = 1,
		Bust     = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBBreathType
	 */
	enum class ESBBreathType : uint8_t
	{
		None = 0,
		Cold = 1,
		Max  = 2
	};

	/**
	 * Enum SkyBlue.EAIFwBTBattleEffectiveType
	 */
	enum class EAIFwBTBattleEffectiveType : uint8_t
	{
		Paralyze   = 0,
		SuperArmor = 1,
		Stun       = 2,
		Freeze     = 3,
		Sleep      = 4,
		Fear       = 5,
		Dark       = 6,
		Restraint  = 7,
		MAX        = 8
	};

	/**
	 * Enum SkyBlue.ESBBTComparison
	 */
	enum class ESBBTComparison : uint8_t
	{
		Equal            = 0,
		NotEqual         = 1,
		LessThan         = 2,
		LessThanEqual    = 3,
		GreaterThan      = 4,
		GreaterThanEqual = 5,
		MAX              = 6
	};

	/**
	 * Enum SkyBlue.ESBEnemyWarpDirectionType
	 */
	enum class ESBEnemyWarpDirectionType : uint8_t
	{
		None   = 0,
		Player = 1,
		Anchor = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBAIOrderConditionComparison
	 */
	enum class ESBAIOrderConditionComparison : uint8_t
	{
		Equal            = 0,
		NotEqual         = 1,
		LessThan         = 2,
		LessThanEqual    = 3,
		GreaterThan      = 4,
		GreaterThanEqual = 5,
		MAX              = 6
	};

	/**
	 * Enum SkyBlue.ESBConditionalVoiceRequestType
	 */
	enum class ESBConditionalVoiceRequestType : uint8_t
	{
		RandomOne = 0,
		Sequence  = 1,
		Max       = 2
	};

	/**
	 * Enum SkyBlue.ESBConditionalVoicePriority
	 */
	enum class ESBConditionalVoicePriority : uint8_t
	{
		PriorityA = 0,
		PriorityB = 1,
		PriorityC = 2,
		PriorityD = 3,
		PriorityE = 4,
		Max       = 5
	};

	/**
	 * Enum SkyBlue.ESBBuddyType
	 */
	enum class ESBBuddyType : uint8_t
	{
		None         = 0,
		BuddyType1   = 1,
		BuddyType2   = 2,
		BuddyType3   = 3,
		BuddyType4   = 4,
		BuddyType5   = 5,
		BuddyType6   = 6,
		BuddyType7   = 7,
		BuddyType8   = 8,
		BuddyType151 = 9,
		BuddyType152 = 10,
		BuddyType153 = 11,
		BuddyType154 = 12,
		BuddyType155 = 13,
		BuddyType156 = 14,
		BuddyType201 = 15,
		BuddyType202 = 16,
		BuddyType203 = 17,
		BuddyType204 = 18,
		BuddyType205 = 19,
		BuddyType206 = 20,
		BuddyType207 = 21,
		Max          = 22
	};

	/**
	 * Enum SkyBlue.ESBLockOnCameraLookPoint
	 */
	enum class ESBLockOnCameraLookPoint : uint8_t
	{
		RootComponent       = 0,
		TargetableComponent = 1,
		MAX                 = 2
	};

	/**
	 * Enum SkyBlue.ECameraRayHitResult
	 */
	enum class ECameraRayHitResult : uint8_t
	{
		HitResult_WorldStatic = 0,
		HitResult_Hostility   = 1,
		HitResult_CanAttack   = 2,
		HitResult_All         = 3,
		HitResult_MAX         = 4
	};

	/**
	 * Enum SkyBlue.ESBCameraShakeControlType
	 */
	enum class ESBCameraShakeControlType : uint8_t
	{
		Default      = 0,
		EngramCannon = 1,
		MAX          = 2
	};

	/**
	 * Enum SkyBlue.ESBKeepCameraAimLocation
	 */
	enum class ESBKeepCameraAimLocation : uint8_t
	{
		None      = 0,
		KeepIn    = 1,
		KeepInOut = 2,
		NoKeepOut = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBCameraType
	 */
	enum class ESBCameraType : uint8_t
	{
		Normal = 0,
		LockOn = 1,
		Mount  = 2,
		Merker = 3,
		MAX    = 4
	};

	/**
	 * Enum SkyBlue.ECameraPriority
	 */
	enum class ECameraPriority : uint8_t
	{
		CameraPriority     = 0,
		CameraPriority01   = 1,
		CameraPriority_1   = 2,
		CameraPriority02   = 3,
		CameraPriority03   = 4,
		CameraPriority04   = 5,
		CameraPriority05   = 6,
		CameraPriority06   = 7,
		CameraPriority_6   = 8,
		CameraPriority07   = 9,
		CameraPriority08   = 10,
		CameraPriority09   = 11,
		CameraPriority_MAX = 12
	};

	/**
	 * Enum SkyBlue.ESBCostumeSet
	 */
	enum class ESBCostumeSet : uint8_t
	{
		Naked   = 0,
		Common  = 1,
		Giken   = 2,
		Hero    = 3,
		P016    = 4,
		Wizard  = 5,
		P002    = 6,
		P004    = 7,
		Common2 = 8,
		Common3 = 9,
		Common4 = 10,
		Common5 = 11,
		Max     = 12
	};

	/**
	 * Enum SkyBlue.ESBCharacterBoneDisplay
	 */
	enum class ESBCharacterBoneDisplay : uint8_t
	{
		None          = 0,
		AllDisplay    = 1,
		SelectDisplay = 2,
		Num           = 3,
		MAX           = 4
	};

	/**
	 * Enum SkyBlue.ECharaPartsAsyncLoadState
	 */
	enum class ECharaPartsAsyncLoadState : uint8_t
	{
		None        = 0,
		Standby     = 1,
		WaitRequest = 2,
		Loading     = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.ESBAdjustRootMotionTargetInterpolationType
	 */
	enum class ESBAdjustRootMotionTargetInterpolationType : uint8_t
	{
		Default                  = 0,
		OldTargetInfo_DEPRECATED = 1,
		InterpLinear_DEPRECATED  = 2,
		InterpParaboraTop        = 3,
		InterpCliffOutside       = 4,
		DirectlyBelowSelf        = 5,
		TargetTransitPoint       = 6,
		NoTarget                 = 7,
		MAX                      = 8
	};

	/**
	 * Enum SkyBlue.ESBAdjustRootMotionAdjustType
	 */
	enum class ESBAdjustRootMotionAdjustType : uint8_t
	{
		Scale             = 0,
		Linear            = 1,
		ScaleWithPlayRate = 2,
		MAX               = 3
	};

	/**
	 * Enum SkyBlue.ESBCharacterAdjustRootMotion_Facing_RotationType
	 */
	enum class ESBCharacterAdjustRootMotion_Facing_RotationType : uint8_t
	{
		MoveDirection                           = 0,
		TargetDirection                         = 1,
		ESBCharacterAdjustRootMotion_Facing_MAX = 2
	};

	/**
	 * Enum SkyBlue.ESBAdjustRootMotionZAxisMode
	 */
	enum class ESBAdjustRootMotionZAxisMode : uint8_t
	{
		NoAdjustZAxis                     = 0,
		AdjustOnlyZAxis                   = 1,
		AdjustZAxisOnToNavMesh            = 2,
		AdjustZAxisWithRaycastHitLocation = 3,
		Flying                            = 4,
		MAX                               = 5
	};

	/**
	 * Enum SkyBlue.ESBAdjustRootMotionTargetType
	 */
	enum class ESBAdjustRootMotionTargetType : uint8_t
	{
		Default                  = 0,
		OldTargetInfo_DEPRECATED = 1,
		InterpLinear_DEPRECATED  = 2,
		InterpParaboraTop        = 3,
		InterpCliffOutside       = 4,
		DirectlyBelowSelf        = 5,
		TargetTransitPoint       = 6,
		NoTarget                 = 7,
		MAX                      = 8
	};

	/**
	 * Enum SkyBlue.ESBCharacterAnimationSamplingResultActionDerivedType
	 */
	enum class ESBCharacterAnimationSamplingResultActionDerivedType : uint8_t
	{
		Default    = 0,
		MoveSpeed  = 1,
		AnyCommand = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBCharacterCardList
	 */
	enum class ESBCharacterCardList : uint8_t
	{
		None       = 0,
		CardNumMax = 1,
		MAX        = 2
	};

	/**
	 * Enum SkyBlue.ESBCharacterElementalBurstFlag
	 */
	enum class ESBCharacterElementalBurstFlag : uint8_t
	{
		None     = 0,
		Earth    = 1,
		Fire     = 2,
		Ice      = 3,
		Thunder  = 4,
		Light    = 5,
		Darkness = 6,
		MAX      = 7
	};

	/**
	 * Enum SkyBlue.ESkillTreeIconPutType
	 */
	enum class ESkillTreeIconPutType : uint8_t
	{
		Single      = 0,
		Double      = 1,
		Alternative = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESkillTreeHorizonBranchType
	 */
	enum class ESkillTreeHorizonBranchType : uint8_t
	{
		Upper   = 0,
		Central = 1,
		None    = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBEquipImagineFrameType
	 */
	enum class ESBEquipImagineFrameType : uint8_t
	{
		Arts      = 0,
		Support   = 1,
		Support01 = 2,
		Support02 = 3,
		Num       = 4,
		MAX       = 5
	};

	/**
	 * Enum SkyBlue.ESBCharactersLogTypes
	 */
	enum class ESBCharactersLogTypes : uint8_t
	{
		Item         = 0,
		Weapon       = 1,
		Npc          = 2,
		Enemy        = 3,
		Action       = 4,
		TutorialHelp = 5,
		Craft        = 6,
		Imagine      = 7,
		Map          = 8,
		MAX          = 9
	};

	/**
	 * Enum SkyBlue.ECustomMoveMode
	 */
	enum class ECustomMoveMode : uint8_t
	{
		CustomMoveMode_None         = 0,
		CustomMoveMode_MeshClimbing = 1,
		CustomMoveMode_CharaCreate  = 2,
		CustomMoveMode_MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBRoleRangeType
	 */
	enum class ESBRoleRangeType : uint8_t
	{
		Close = 0,
		Long  = 1,
		Max   = 2
	};

	/**
	 * Enum SkyBlue.EMaterialLocation
	 */
	enum class EMaterialLocation : uint8_t
	{
		None   = 0,
		Upper  = 1,
		Lower  = 2,
		Gloves = 3,
		Shoes  = 4,
		Hat    = 5,
		MAX    = 6
	};

	/**
	 * Enum SkyBlue.EMaterialType
	 */
	enum class EMaterialType : uint8_t
	{
		None     = 0,
		Costume  = 1,
		Skin     = 2,
		Face     = 3,
		Hair     = 4,
		Outline  = 5,
		Eye      = 6,
		EyeLash  = 7,
		Brow     = 8,
		Socks    = 9,
		EyeLeft  = 10,
		EyeRight = 11,
		Beard    = 12,
		MAX      = 13
	};

	/**
	 * Enum SkyBlue.ESBCharaCreateColorTable
	 */
	enum class ESBCharaCreateColorTable : uint8_t
	{
		Costume = 0,
		Skin    = 1,
		Hair    = 2,
		Eye     = 3,
		Scar    = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ECharaPartsAgeGroup
	 */
	enum class ECharaPartsAgeGroup : uint8_t
	{
		Child    = 0,
		Teenager = 1,
		Young    = 2,
		Middle   = 3,
		Senior   = 4,
		MAX      = 5
	};

	/**
	 * Enum SkyBlue.EPlacesObtained
	 */
	enum class EPlacesObtained : uint8_t
	{
		None           = 0,
		Treasure       = 1,
		GatherPoint    = 2,
		EnemyDrop      = 3,
		QuestTrigger   = 4,
		ChallengeQuest = 5,
		MAX            = 6
	};

	/**
	 * Enum SkyBlue.ESBAutoMessageTarget
	 */
	enum class ESBAutoMessageTarget : uint8_t
	{
		Party = 0,
		All   = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.ESBChatDetailFilterType
	 */
	enum class ESBChatDetailFilterType : uint8_t
	{
		None          = 0,
		BattleInfo    = 1,
		Stamp         = 2,
		Gesture       = 3,
		SystemMessage = 4,
		ItemGet       = 5,
		LevelUp       = 6,
		DamageMessage = 7,
		DamageBonus   = 8,
		MAX           = 9
	};

	/**
	 * Enum SkyBlue.ESBChatFilterType
	 */
	enum class ESBChatFilterType : uint8_t
	{
		None      = 0,
		Area      = 1,
		Field     = 2,
		Party     = 3,
		Team      = 4,
		Direct    = 5,
		SystemLog = 6,
		BattleLog = 7,
		MAX       = 8
	};

	/**
	 * Enum SkyBlue.ESBChatLogTabType
	 */
	enum class ESBChatLogTabType : uint8_t
	{
		MainTab = 0,
		Sub1Tab = 1,
		Sub2Tab = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBChatLogMode
	 */
	enum class ESBChatLogMode : uint8_t
	{
		AllLog    = 0,
		BattleLog = 1,
		Max       = 2
	};

	/**
	 * Enum SkyBlue.EChatSpecialCommandType
	 */
	enum class EChatSpecialCommandType : uint8_t
	{
		None = 0,
		Dice = 1,
		Send = 2,
		MAX  = 3
	};

	/**
	 * Enum SkyBlue.ESBBattleLogType
	 */
	enum class ESBBattleLogType : uint8_t
	{
		Kill                = 0,
		TakeDamage          = 1,
		GiveDamage          = 2,
		HealHP              = 3,
		HealST              = 4,
		UseSkill            = 5,
		UseImagine          = 6,
		UseSpecial          = 7,
		Death               = 8,
		StatusOff           = 9,
		TakeWeaponExp       = 10,
		TakeImagineExp      = 11,
		ChainKill           = 12,
		PlayerDeath         = 13,
		EnemyDeath          = 14,
		TakePlayerExp       = 15,
		LevelUpPlayer       = 16,
		GetBootyItem        = 17,
		GetMoney            = 18,
		DefeatEnemyExp      = 19,
		GetEventToken       = 20,
		MissionBag          = 21,
		GetLiquidMemory     = 22,
		GetAdventureBoard   = 23,
		BattleDamage1       = 24,
		BattleDamage2       = 25,
		BattleDamage3       = 26,
		BattleDamage4       = 27,
		BattleDamageBonus1  = 28,
		BattleDamageBonus2  = 29,
		BattleDamageBonus3  = 30,
		BattleDamageBonus4  = 31,
		DefeatEnemy         = 32,
		AutoOpenTreasureBox = 33,
		MAX                 = 34
	};

	/**
	 * Enum SkyBlue.ESBCheerfulMoveRestrictMode
	 */
	enum class ESBCheerfulMoveRestrictMode : uint8_t
	{
		None        = 0,
		CannotMove  = 1,
		WalkOnly    = 2,
		RunOnly     = 3,
		DashOnly    = 4,
		WalkAndRun  = 5,
		RunAndDash  = 6,
		WalkAndDash = 7,
		MAX         = 8
	};

	/**
	 * Enum SkyBlue.ESBCheerfulProcessMode
	 */
	enum class ESBCheerfulProcessMode : uint8_t
	{
		CommonProcess_AttachmentType = 0,
		CommonProcess_OneMotionType  = 1,
		ItemSpecificProcess          = 2,
		MAX                          = 3
	};

	/**
	 * Enum SkyBlue.ESBCheerfulItemType
	 */
	enum class ESBCheerfulItemType : uint8_t
	{
		InvalidType       = 0,
		Firework          = 1,
		PartyPopper       = 2,
		GlowStickSingle   = 3,
		GlowStickMultiple = 4,
		Snowman           = 5,
		FlowerShower      = 6,
		MAX               = 7
	};

	/**
	 * Enum SkyBlue.EClimbingEndPointType
	 */
	enum class EClimbingEndPointType : uint8_t
	{
		ClimbingEndPointType_None = 0,
		ClimbingEndPointType_Up   = 1,
		ClimbingEndPointType_Down = 2,
		ClimbingEndPointType_MAX  = 3
	};

	/**
	 * Enum SkyBlue.EClimbingEndActionType
	 */
	enum class EClimbingEndActionType : uint8_t
	{
		ClimbingEndActionType_Drop    = 0,
		ClimbingEndActionType_Clamber = 1,
		ClimbingEndActionType_MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBColoringItemIcon
	 */
	enum class ESBColoringItemIcon : uint8_t
	{
		None                = 0,
		NormalDyeIconNumMax = 1,
		ExtraDyeIconNumMax  = 2,
		MAX                 = 3
	};

	/**
	 * Enum SkyBlue.ESBColoringItemType
	 */
	enum class ESBColoringItemType : uint8_t
	{
		NormalDye   = 0,
		ToningAgent = 1,
		ExtraDye    = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBUseCheckDialogType
	 */
	enum class ESBUseCheckDialogType : uint8_t
	{
		WeaponSynthe_Fusion = 0,
		StackB_Weapon       = 1,
		StackB_Imagine      = 2,
		StackB_Fang         = 3,
		MAX                 = 4
	};

	/**
	 * Enum SkyBlue.ESBEventShopStorage
	 */
	enum class ESBEventShopStorage : uint8_t
	{
		Bag       = 0,
		Warehouse = 1,
		Select    = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBCameraShakeLevel
	 */
	enum class ESBCameraShakeLevel : uint8_t
	{
		None = 0,
		Soft = 1,
		Hard = 2,
		MAX  = 3
	};

	/**
	 * Enum SkyBlue.ESBWishListType
	 */
	enum class ESBWishListType : uint8_t
	{
		None             = 0,
		ItemCraft        = 1,
		ImagineCraft     = 2,
		Quest            = 3,
		WarehouseAbility = 4,
		MAX              = 5
	};

	/**
	 * Enum SkyBlue.ESBBookMarkerSlot
	 */
	enum class ESBBookMarkerSlot : uint8_t
	{
		Marker1  = 0,
		Marker2  = 1,
		Marker3  = 2,
		Marker4  = 3,
		Marker5  = 4,
		Marker6  = 5,
		Marker7  = 6,
		Marker8  = 7,
		Marker9  = 8,
		Marker10 = 9,
		Marker11 = 10,
		Marker12 = 11,
		Marker13 = 12,
		Marker14 = 13,
		Marker15 = 14,
		Marker16 = 15,
		Marker17 = 16,
		Marker18 = 17,
		Marker19 = 18,
		Marker20 = 19,
		Marker21 = 20,
		Marker22 = 21,
		Marker23 = 22,
		Marker24 = 23,
		MAX      = 24
	};

	/**
	 * Enum SkyBlue.ESBShortcutRingMode
	 */
	enum class ESBShortcutRingMode : uint8_t
	{
		Default = 0,
		Simple  = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBSSLogoPosition
	 */
	enum class ESBSSLogoPosition : uint8_t
	{
		TopLeft     = 0,
		TopRight    = 1,
		BottomLeft  = 2,
		BottomRight = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.ESBPlayerVisibleLimit
	 */
	enum class ESBPlayerVisibleLimit : uint8_t
	{
		Unlimit = 0,
		Limit   = 1,
		Limit01 = 2,
		Limit02 = 3,
		Limit03 = 4,
		Limit04 = 5,
		Limit05 = 6,
		MAX     = 7
	};

	/**
	 * Enum SkyBlue.ESBSortFilterSaveType
	 */
	enum class ESBSortFilterSaveType : uint8_t
	{
		Recent                  = 0,
		WeaponLeveling_Material = 1,
		WeaponSynthe_Weapon     = 2,
		WeaponSynthe_Item       = 3,
		Inventory               = 4,
		Storage                 = 5,
		Equip                   = 6,
		ItemCraft               = 7,
		ImagineCraft            = 8,
		MyChara_Weapon          = 9,
		MyChara_Costume         = 10,
		MyChara_Mount           = 11,
		MyChara_BattleImagine   = 12,
		MyChara_Attachment      = 13,
		MyChara_Accessory       = 14,
		BlueProPointExchange    = 15,
		Weapon                  = 16,
		StackB_Weapon           = 17,
		StackB_Imagine          = 18,
		StackB_MountImagine     = 19,
		AlbumListPhoto          = 20,
		Ornament_Select         = 21,
		T_Apart                 = 22,
		MAX                     = 23
	};

	/**
	 * Enum SkyBlue.ESBLowVGAMemory
	 */
	enum class ESBLowVGAMemory : uint8_t
	{
		SBLowVGA_Invalid = 0,
		SBLowVGA_Off     = 1,
		SBLowVGA_On      = 2,
		SBLowVGA_MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBCustomHudLayoutSlot
	 */
	enum class ESBCustomHudLayoutSlot : uint8_t
	{
		HudLayoutSlot_Now     = 0,
		HudLayoutSlot_Custom1 = 1,
		HudLayoutSlot_Custom2 = 2,
		HudLayoutSlot_Custom3 = 3,
		HudLayoutSlot_MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBFrameRateLimitType
	 */
	enum class ESBFrameRateLimitType : uint8_t
	{
		FPS_LIMIT_UNLIMIT = 0,
		FPS_LIMIT         = 1,
		FPS_LIMIT01       = 2,
		FPS_LIMIT02       = 3,
		FPS_LIMIT_MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBKeyGuideDisplayType
	 */
	enum class ESBKeyGuideDisplayType : uint8_t
	{
		KEYGUIDE_AUTO      = 0,
		KEYGUIDE_INVISIBLE = 1,
		KEYGUIDE_VISIBLE   = 2,
		KEYGUIDE_TYPE_MAX  = 3,
		KEYGUIDE_MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBSoundVolumeType
	 */
	enum class ESBSoundVolumeType : uint8_t
	{
		VOLUME_MASTETR     = 0,
		VOLUME_SOUNDEFFECT = 1,
		VOLUME_BGM         = 2,
		VOLUME_VOICE       = 3,
		VOLUME_SYSTEM      = 4,
		VOLUME_AMBIENT     = 5,
		VOLUME_TYPE_MAX    = 6,
		VOLUME_MAX         = 7
	};

	/**
	 * Enum SkyBlue.ESBConfigWindowType
	 */
	enum class ESBConfigWindowType : uint8_t
	{
		WINDOWTYPE_FULLSCREEN          = 0,
		WINDOWTYPE_WINDOW              = 1,
		WINDOWTYPE_WINDOWED_FULLSCREEN = 2,
		WINDOWTYPE_MAX                 = 3
	};

	/**
	 * Enum SkyBlue.ESBConfigSaveDataResult
	 */
	enum class ESBConfigSaveDataResult : uint8_t
	{
		RESULT_SUCCESS = 0,
		RESULT_FAIL    = 1,
		RESULT_MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBDateTimeTextRemainTimeFlag
	 */
	enum class ESBDateTimeTextRemainTimeFlag : uint8_t
	{
		None         = 0,
		LittleTime   = 1,
		FinishedTime = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBDateTimeFinishedTextTemplate
	 */
	enum class ESBDateTimeFinishedTextTemplate : uint8_t
	{
		None    = 0,
		Shortly = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBDateTimeTextRemainTimespanType
	 */
	enum class ESBDateTimeTextRemainTimespanType : uint8_t
	{
		Normal = 0,
		Switch = 1,
		Short  = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBDateTimeTextTemplate
	 */
	enum class ESBDateTimeTextTemplate : uint8_t
	{
		None                       = 0,
		DateTime                   = 1,
		DateTimeWithoutYear        = 2,
		Date                       = 3,
		Timespan                   = 4,
		RemainTimespan             = 5,
		RemainTimespanWithoutTitle = 6,
		PassedTimespan             = 7,
		DurationTime               = 8,
		MAX                        = 9
	};

	/**
	 * Enum SkyBlue.ESBDemoVisibleCharacterType
	 */
	enum class ESBDemoVisibleCharacterType : uint8_t
	{
		None                      = 0,
		VisibleEnemy              = 1,
		VisibleNPC_ExceptStoryNPC = 2,
		MAX                       = 3
	};

	/**
	 * Enum SkyBlue.ESBDemoMediaType
	 */
	enum class ESBDemoMediaType : uint8_t
	{
		Script = 0,
		Movie  = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBDemoType
	 */
	enum class ESBDemoType : uint8_t
	{
		Demo_None  = 0,
		Demo_Main  = 1,
		Demo_Extra = 2,
		Demo_Sub   = 3,
		Demo_Class = 4,
		Demo_Event = 5,
		Demo_MAX   = 6
	};

	/**
	 * Enum SkyBlue.ESBExplosionBarrelDamage
	 */
	enum class ESBExplosionBarrelDamage : uint8_t
	{
		ExplosiveBarrel_Fix200  = 0,
		ExplosiveBarrel_Fix800  = 1,
		ExplosiveBarrel_Fix1000 = 2,
		ExplosiveBarrel_Rate10  = 3,
		ExplosiveBarrel_Rate15  = 4,
		ExplosiveBarrel_Rate20  = 5,
		ExplosiveBarrel_Rate25  = 6,
		ExplosiveBarrel_Rate30  = 7,
		ExplosiveBarrel_MAX     = 8
	};

	/**
	 * Enum SkyBlue.ESBDisplayTextIdFlag
	 */
	enum class ESBDisplayTextIdFlag : uint8_t
	{
		None       = 0,
		Disable    = 1,
		Enable     = 2,
		Table      = 3,
		TextId     = 4,
		Type       = 5,
		OptionMask = 6,
		MAX        = 7
	};

	/**
	 * Enum SkyBlue.ESBDroppingTextOption
	 */
	enum class ESBDroppingTextOption : uint8_t
	{
		None      = 0,
		BlueColor = 1,
		RedColor  = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.EDungeonClearConditionType
	 */
	enum class EDungeonClearConditionType : uint8_t
	{
		Unknown      = 0,
		KillEnemy    = 1,
		AnyCondition = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBDungeonLaterJoinType
	 */
	enum class ESBDungeonLaterJoinType : uint8_t
	{
		No         = 0,
		FriendOnly = 1,
		MAX        = 2
	};

	/**
	 * Enum SkyBlue.ESBDungeonMatchMenuRegisterType
	 */
	enum class ESBDungeonMatchMenuRegisterType : uint8_t
	{
		None          = 0,
		WhenOpend     = 1,
		WhenCompleted = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.ESBDungeonMvpType
	 */
	enum class ESBDungeonMvpType : uint8_t
	{
		Attack         = 0,
		Support        = 1,
		EscortTime     = 2,
		EscortDistance = 3,
		Max            = 4
	};

	/**
	 * Enum SkyBlue.ESBDungeonBossBattleState
	 */
	enum class ESBDungeonBossBattleState : uint8_t
	{
		None    = 0,
		Standby = 1,
		Battle  = 2,
		Max     = 3
	};

	/**
	 * Enum SkyBlue.ESBBattleRule
	 */
	enum class ESBBattleRule : uint8_t
	{
		None               = 0,
		InstanceArea       = 1,
		DungeonNormal      = 2,
		DungeonScenario    = 3,
		DungeonTimeAttack  = 4,
		DungeonScoreAttack = 5,
		BattleArena        = 6,
		Survival           = 7,
		TowerDefense       = 8,
		Max                = 9
	};

	/**
	 * Enum SkyBlue.ESBDxBattleCoefficientScoreType
	 */
	enum class ESBDxBattleCoefficientScoreType : uint8_t
	{
		DX_BATTLE_COEFFICIENT_SCORE_TYPE_PERCENTAGE_NUM = 0,
		DX_BATTLE_COEFFICIENT_SCORE_TYPE_MULTIPLIER_NUM = 1,
		DX_BATTLE_COEFFICIENT_SCORE_TYPE_MAX            = 2
	};

	/**
	 * Enum SkyBlue.ESBDxBattleContributonScoreType
	 */
	enum class ESBDxBattleContributonScoreType : uint8_t
	{
		DX_BATTLE_CONTRIBUTON_SCORE_TYPE_DAMAGE_TO_MINOR_ENEMIES_NUM           = 0,
		DX_BATTLE_CONTRIBUTON_SCORE_TYPE_DAMAGE_TO_BOSSES_NUM                  = 1,
		DX_BATTLE_CONTRIBUTON_SCORE_TYPE_DAMAGE_TO_SPECIAL_ATTACK_SOLDIERS_NUM = 2,
		DX_BATTLE_CONTRIBUTON_SCORE_TYPE_DAMAGE_TO_GATES_NUM                   = 3,
		DX_BATTLE_CONTRIBUTON_SCORE_TYPE_DAMAGE_TO_DEVICES_NUM                 = 4,
		DX_BATTLE_CONTRIBUTON_SCORE_TYPE_REVIVALS_SUCCESSFULLY_CASTED_NUM      = 5,
		DX_BATTLE_CONTRIBUTON_SCORE_TYPE_MAX                                   = 6
	};

	/**
	 * Enum SkyBlue.ESBDxBattleAwardFlag
	 */
	enum class ESBDxBattleAwardFlag : uint8_t
	{
		DX_BATTLE_AWARDED_FLAG_NONE                         = 0,
		DX_BATTLE_AWARDED_FLAG_DAMAGE_ALL                   = 1,
		DX_BATTLE_AWARDED_FLAG_DAMAGE_SPECIAL               = 2,
		DX_BATTLE_AWARDED_FLAG_RESUSCITATION                = 3,
		DX_BATTLE_AWARDED_FLAG_GET_HOSTILITY_TIME_BY_NORMAL = 4,
		DX_BATTLE_AWARDED_FLAG_GET_HOSTILITY_TIME_BY_BOSS   = 5,
		DX_BATTLE_AWARDED_FLAG_BIT_ALL                      = 6,
		DX_BATTLE_AWARDED_FLAG_MAX                          = 7
	};

	/**
	 * Enum SkyBlue.ESBHitCameraShake
	 */
	enum class ESBHitCameraShake : uint8_t
	{
		None         = 0,
		Vertical_S   = 1,
		Vertical_L   = 2,
		Horizontal_S = 3,
		Horizontal_L = 4,
		MAX          = 5
	};

	/**
	 * Enum SkyBlue.ESBHitEffectSize
	 */
	enum class ESBHitEffectSize : uint8_t
	{
		None = 0,
		S    = 1,
		M    = 2,
		L    = 3,
		MAX  = 4
	};

	/**
	 * Enum SkyBlue.ESBEffectShaderParamTarget
	 */
	enum class ESBEffectShaderParamTarget : uint8_t
	{
		Actor       = 0,
		Weapon_R    = 1,
		Weapon_L    = 2,
		Inventory   = 3,
		Inventory01 = 4,
		MAX         = 5
	};

	/**
	 * Enum SkyBlue.ESBEffectVisibleSourceType
	 */
	enum class ESBEffectVisibleSourceType : uint8_t
	{
		None         = 0,
		Player_Self  = 1,
		Player_Party = 2,
		Player_Other = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.ESBGaugeWidgetPlayAnimt
	 */
	enum class ESBGaugeWidgetPlayAnimt : uint8_t
	{
		None   = 0,
		Normal = 1,
		Blink  = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBElQuestRewardRank
	 */
	enum class ESBElQuestRewardRank : uint8_t
	{
		Blue   = 0,
		Red    = 1,
		Copper = 2,
		Silver = 3,
		Gold   = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.ESBEmotionAadditionalInfo
	 */
	enum class ESBEmotionAadditionalInfo : uint8_t
	{
		None         = 0,
		CanSitAction = 1,
		Blank1       = 2,
		Blank2       = 3,
		Blank3       = 4,
		Blank4       = 5,
		Blank5       = 6,
		Blank6       = 7,
		Blank7       = 8,
		MAX          = 9
	};

	/**
	 * Enum SkyBlue.ESBSpawnFailedProcessType
	 */
	enum class ESBSpawnFailedProcessType : uint8_t
	{
		FailToWait = 0,
		FailToNext = 1,
		MAX        = 2
	};

	/**
	 * Enum SkyBlue.ESBEnemyAbilityType
	 */
	enum class ESBEnemyAbilityType : uint8_t
	{
		None     = 0,
		All      = 1,
		Attack   = 2,
		Movement = 3,
		MAX      = 4
	};

	/**
	 * Enum SkyBlue.ESBHitDirection
	 */
	enum class ESBHitDirection : uint8_t
	{
		Front = 0,
		Side  = 1,
		Back  = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.EDeathEffectType
	 */
	enum class EDeathEffectType : uint8_t
	{
		UnActive    = 0,
		NormalDeath = 1,
		FadeOut     = 2,
		Vanish      = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.ESBEnemyDropLogType
	 */
	enum class ESBEnemyDropLogType : uint8_t
	{
		None                           = 0,
		SelfDefeat                     = 1,
		NullPlayerCharacter            = 2,
		NoPlayersAround                = 3,
		DungeonClearCleanUp            = 4,
		PlayerTooFarFromEnemy          = 5,
		NoncontributoryPlayer          = 6,
		NoncontributoryPlayerBailedOut = 7,
		NoncontributorySoloPlayer      = 8,
		ContributoryPlayer             = 9,
		ContributoryParty              = 10,
		LootClassNormal                = 11,
		LootClassSemiHigh              = 12,
		LootClassHigh                  = 13,
		MoneyAndExp                    = 14,
		ItemByPtAlt                    = 15,
		TreasureByPtAlt                = 16,
		TreasureLot                    = 17,
		TreasureLotAdopted             = 18,
		TreasureNumBiased              = 19,
		TreasurePoped                  = 20,
		GuranteedDrop_NbDraw           = 21,
		GuranteedDrop_DropRate         = 22,
		GuranteedDrop_ZeroRate         = 23,
		ValidInstancePartyId           = 24,
		NoInstantParty                 = 25,
		InvalidPlayerState             = 26,
		Max                            = 27
	};

	/**
	 * Enum SkyBlue.ESBEnemyDropLogLevel
	 */
	enum class ESBEnemyDropLogLevel : uint8_t
	{
		None    = 0,
		Minimum = 1,
		Normal  = 2,
		Verbose = 3,
		Max     = 4
	};

	/**
	 * Enum SkyBlue.ESBMarkerType
	 */
	enum class ESBMarkerType : uint8_t
	{
		NormalMarker   = 0,
		ParabolaMarker = 1,
		ChantMarker    = 2,
		MAX            = 3
	};

	/**
	 * Enum SkyBlue.EMarkerSizeType
	 */
	enum class EMarkerSizeType : uint8_t
	{
		Fixed               = 0,
		AttackCollisionSize = 1,
		ProjectileSize      = 2,
		MAX                 = 3
	};

	/**
	 * Enum SkyBlue.EMarkerTargetingType
	 */
	enum class EMarkerTargetingType : uint8_t
	{
		OwnerCharacter            = 0,
		TargetActor               = 1,
		TargetLocation            = 2,
		AttackCollisionCenter     = 3,
		RootMotionAttackCollision = 4,
		RootMotionTargetLocation  = 5,
		MAX                       = 6
	};

	/**
	 * Enum SkyBlue.MarkerState
	 */
	enum class EMarkerState : uint8_t
	{
		MarkerStateWaiting         = 0,
		MarkerStateChanting        = 1,
		MarkerStateFired           = 2,
		MarkerStateMarkerState_MAX = 3
	};

	/**
	 * Enum SkyBlue.ESBMarkerTargetState
	 */
	enum class ESBMarkerTargetState : uint8_t
	{
		UnActive     = 0,
		Active       = 1,
		UnReplicated = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBEnemyExpBonusScaleType
	 */
	enum class ESBEnemyExpBonusScaleType : uint8_t
	{
		OnePeople   = 0,
		TwoPeople   = 1,
		ThreePeople = 2,
		More        = 3,
		Max         = 4
	};

	/**
	 * Enum SkyBlue.ESBEnemyPhaseChangeRuleType
	 */
	enum class ESBEnemyPhaseChangeRuleType : uint8_t
	{
		Or                    = 0,
		And                   = 1,
		Not                   = 2,
		CustomRule            = 3,
		CheckIdle             = 4,
		HitPointRate          = 5,
		CheckPhaseProgression = 6,
		CheckNoBurstBonus     = 7,
		PhaseControlIndex     = 8,
		MAX                   = 9
	};

	/**
	 * Enum SkyBlue.EMovabilityType
	 */
	enum class EMovabilityType : uint8_t
	{
		MV_NORMAL                  = 0,
		MV_UnmovableAndUnrotatable = 1,
		MV_UnmovableOnly           = 2,
		MV_UnrotatableOnly         = 3,
		MV_DoNotMove               = 4,
		MV_DoNotMoveAndRotate      = 5,
		MV_UnmovableAndDoNotRotate = 6,
		Num                        = 7,
		MAX                        = 8
	};

	/**
	 * Enum SkyBlue.ESenseChangerType
	 */
	enum class ESenseChangerType : uint8_t
	{
		AddSensor  = 0,
		Cross      = 1,
		VolumeOnly = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBEnemyActionManagerResult
	 */
	enum class ESBEnemyActionManagerResult : uint8_t
	{
		Success = 0,
		Cancel  = 1,
		Error   = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBEnemyTakeDamageCounterComparison
	 */
	enum class ESBEnemyTakeDamageCounterComparison : uint8_t
	{
		Equal            = 0,
		NotEqual         = 1,
		LessThan         = 2,
		LessThanEqual    = 3,
		GreaterThan      = 4,
		GreaterThanEqual = 5,
		MAX              = 6
	};

	/**
	 * Enum SkyBlue.ESBEnemyTargetType
	 */
	enum class ESBEnemyTargetType : uint8_t
	{
		Projectile       = 0,
		AdjustRootMotion = 1,
		Max              = 2
	};

	/**
	 * Enum SkyBlue.ESBEnemyCauseOfDeath
	 */
	enum class ESBEnemyCauseOfDeath : uint8_t
	{
		Unknown         = 0,
		Attacked        = 1,
		SelfDefeat      = 2,
		NoPlayersAround = 3,
		QuestTimeout    = 4,
		Max             = 5
	};

	/**
	 * Enum SkyBlue.ESBEnemyLoot
	 */
	enum class ESBEnemyLoot : uint8_t
	{
		None     = 0,
		Normal   = 1,
		SemiHigh = 2,
		High     = 3,
		Max      = 4
	};

	/**
	 * Enum SkyBlue.ESBBuddyIconType
	 */
	enum class ESBBuddyIconType : uint8_t
	{
		Normal    = 0,
		Clip      = 1,
		Dead      = 2,
		Nonactive = 3,
		Max       = 4
	};

	/**
	 * Enum SkyBlue.ESBEnemyIconType
	 */
	enum class ESBEnemyIconType : uint8_t
	{
		Normal         = 0,
		Named          = 1,
		Boss           = 2,
		Target         = 3,
		Nonactive      = 4,
		GateAttacker   = 5,
		GuerrillaEnemy = 6,
		Gimmick        = 7,
		Max            = 8
	};

	/**
	 * Enum SkyBlue.ESBEnemyRaceType
	 */
	enum class ESBEnemyRaceType : uint8_t
	{
		None       = 0,
		BaseType1  = 1,
		BaseType2  = 2,
		BaseType3  = 3,
		BaseType4  = 4,
		BaseType5  = 5,
		BaseType6  = 6,
		BaseType20 = 7,
		BaseType21 = 8,
		BaseType22 = 9,
		BaseType23 = 10,
		BaseType24 = 11,
		BaseType25 = 12,
		BaseType26 = 13,
		BaseType27 = 14,
		BaseType30 = 15,
		BaseType31 = 16,
		BaseType32 = 17,
		BaseType33 = 18,
		BaseType34 = 19,
		BaseType35 = 20,
		BaseType36 = 21,
		BaseType40 = 22,
		BaseType41 = 23,
		BaseType42 = 24,
		BaseType50 = 25,
		BaseType51 = 26,
		BaseType52 = 27,
		BaseType60 = 28,
		BaseType61 = 29,
		BaseType62 = 30,
		BaseType63 = 31,
		BaseType70 = 32,
		BaseType71 = 33,
		BaseType72 = 34,
		BaseType73 = 35,
		BaseType74 = 36,
		BaseType75 = 37,
		BaseType76 = 38,
		BaseType77 = 39,
		BaseType78 = 40,
		BaseType79 = 41,
		BaseType80 = 42,
		BaseType81 = 43,
		BaseType82 = 44,
		BaseType83 = 45,
		BaseType84 = 46,
		Max        = 47
	};

	/**
	 * Enum SkyBlue.ESBEnemyWaveStepConditionType
	 */
	enum class ESBEnemyWaveStepConditionType : uint8_t
	{
		EWSCType_None                  = 0,
		EWSCType_ElapsedTime           = 1,
		EWSCType_RemainingEnemyNum     = 2,
		EWSCType_RemainingEnemyHpRatio = 3,
		EWSCType_Max                   = 4
	};

	/**
	 * Enum SkyBlue.ESBEnemyWaveSpawnLocation
	 */
	enum class ESBEnemyWaveSpawnLocation : uint8_t
	{
		EWSLoc_None   = 0,
		EWSLoc_Random = 1,
		EWSLoc_Center = 2,
		EWSLoc_Max    = 3
	};

	/**
	 * Enum SkyBlue.ESBEnemyWaveRuleType
	 */
	enum class ESBEnemyWaveRuleType : uint8_t
	{
		None             = 0,
		RemainingEnemies = 1,
		HP               = 2,
		MAX              = 3
	};

	/**
	 * Enum SkyBlue.ESBEnemyWaveLocationType
	 */
	enum class ESBEnemyWaveLocationType : uint8_t
	{
		Center = 0,
		Random = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBEngramCannonAttributeBullet
	 */
	enum class ESBEngramCannonAttributeBullet : uint8_t
	{
		None    = 0,
		Fire    = 1,
		Ice     = 2,
		Thunder = 3,
		Earth   = 4,
		Light   = 5,
		Dark    = 6,
		MAX     = 7
	};

	/**
	 * Enum SkyBlue.ESBEventExecutorOption
	 */
	enum class ESBEventExecutorOption : uint8_t
	{
		RequireReceiver     = 0,
		DontRequireReceiver = 1,
		MAX                 = 2
	};

	/**
	 * Enum SkyBlue.ESBEventTermCheckNormalStatus
	 */
	enum class ESBEventTermCheckNormalStatus : uint8_t
	{
		OutofTerm = 0,
		OffDays   = 1,
		OffHours  = 2,
		OffWeek   = 3,
		Active    = 4,
		MAX       = 5
	};

	/**
	 * Enum SkyBlue.ESBEventTermVirtualDateType
	 */
	enum class ESBEventTermVirtualDateType : uint8_t
	{
		None = 0,
		Stop = 1,
		Move = 2,
		Max  = 3
	};

	/**
	 * Enum SkyBlue.ESBMerchandiseCounterType
	 */
	enum class ESBMerchandiseCounterType : uint8_t
	{
		None     = 0,
		Exchange = 1,
		Weapon   = 2,
		Item     = 3,
		TAbiliry = 4,
		MAX      = 5
	};

	/**
	 * Enum SkyBlue.ESBEventTermsType
	 */
	enum class ESBEventTermsType : uint8_t
	{
		EVENT_TERM_TYPE_NORMAL    = 0,
		EVENT_TERM_TYPE_EXCLUSION = 1,
		EVENT_TERM_TYPE_MAX       = 2
	};

	/**
	 * Enum SkyBlue.ESBEventTriggerCloseConditionType
	 */
	enum class ESBEventTriggerCloseConditionType : uint8_t
	{
		QuestStep   = 0,
		QuestStatus = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.ESBEventTriggerConditionType
	 */
	enum class ESBEventTriggerConditionType : uint8_t
	{
		Unknown           = 0,
		ScenarioFlag      = 1,
		QuestStatus       = 2,
		QuestStep         = 3,
		EventTerm         = 4,
		ChallengeQuest    = 5,
		AdventurerRank_GE = 6,
		AdventurerRank_LT = 7,
		MAX               = 8
	};

	/**
	 * Enum SkyBlue.EFacilityType
	 */
	enum class EFacilityType : uint8_t
	{
		NONE          = 0,
		CLASS_CHANGE  = 1,
		PLAYER_CRAFT  = 2,
		NPC_CRAFT     = 3,
		CRAFT_RECEIVE = 4,
		MAX           = 5
	};

	/**
	 * Enum SkyBlue.EFacilityIconStatus
	 */
	enum class EFacilityIconStatus : uint8_t
	{
		Enable  = 0,
		Disable = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBFacilityType
	 */
	enum class ESBFacilityType : uint8_t
	{
		None                       = 0,
		WeaponShop                 = 1,
		ItemShop                   = 2,
		HealStation                = 3,
		TutorialGuide              = 4,
		DungeonGuide               = 5,
		WarpPoint                  = 6,
		LocalWarpPoint             = 7,
		ExchangeShop               = 8,
		ArmorShop                  = 9,
		QuestGuide                 = 10,
		Craft                      = 11,
		ClassChange                = 12,
		SyntheShop                 = 13,
		ImagineLabo                = 14,
		Aesthetician               = 15,
		DyeingShop                 = 16,
		Restaurant                 = 17,
		ChallengeBox               = 18,
		Arena                      = 19,
		Warehouse                  = 20,
		Guild                      = 21,
		GachaShop                  = 22,
		MemoryStand                = 23,
		CoinBower                  = 24,
		TimeAttack                 = 25,
		EventPeddler               = 26,
		AdventurerRank             = 27,
		RankingBoard               = 28,
		BuffNPC                    = 29,
		BuffObject                 = 30,
		MaterialSupporter          = 31,
		ChallengeQuestNpc          = 32,
		ChallengeQuestGimmick      = 33,
		ChallengeQuestDestructible = 34,
		AbilityMasteryShop         = 35,
		FishingSpot                = 36,
		Camp                       = 37,
		ClimbPoint                 = 38,
		DxBattleNPC                = 39,
		PineVillageNPC             = 40,
		Fang_expedition            = 41,
		DhcNPC                     = 42,
		Ornament                   = 43,
		MAX                        = 44
	};

	/**
	 * Enum SkyBlue.ESBFang_expeditionItemCategory
	 */
	enum class ESBFang_expeditionItemCategory : uint8_t
	{
		None            = 0,
		Money           = 1,
		Token           = 2,
		Emote           = 3,
		Stamp           = 4,
		Stamp_Category  = 5,
		Recepi_Imagine  = 6,
		Recepi_Craft    = 7,
		Achievement     = 8,
		LiquidMemory    = 9,
		MissionCoin     = 10,
		BPPoint         = 11,
		FreeCurrencies  = 12,
		Exp             = 13,
		BonusSkillPoint = 14,
		ClassSkillPoint = 15,
		ESBFang_MAX     = 16
	};

	/**
	 * Enum SkyBlue.ESBGatherPointType
	 */
	enum class ESBGatherPointType : uint8_t
	{
		Normal = 0,
		MAX    = 1
	};

	/**
	 * Enum SkyBlue.ESBFieldStatusChallengeQuestSettingType
	 */
	enum class ESBFieldStatusChallengeQuestSettingType : uint8_t
	{
		StartConditionPop         = 0,
		StartConditionAndExectPop = 1,
		ExectPop                  = 2,
		MAX                       = 3
	};

	/**
	 * Enum SkyBlue.ESBFieldStatusConditionType
	 */
	enum class ESBFieldStatusConditionType : uint8_t
	{
		Unknown             = 0,
		QuestStatus         = 1,
		ScenarioFlag        = 2,
		ResearchTeam        = 3,
		EventTerm           = 4,
		EventTermStatus     = 5,
		ChallengeQuest      = 6,
		QuestConditionItem  = 7,
		DungeonActivateFlag = 8,
		DungeonCompleteFlag = 9,
		MAX                 = 10
	};

	/**
	 * Enum SkyBlue.ESBFishId
	 */
	enum class ESBFishId : uint8_t
	{
		BlueDevil    = 0,
		ScorpionFish = 1,
		PufferFish   = 2,
		JackMackerel = 3,
		Skipjack     = 4,
		AnglerFish   = 5,
		Marlin       = 6,
		ItemBox      = 7,
		MAX          = 8
	};

	/**
	 * Enum SkyBlue.ESBFishScaleClassId
	 */
	enum class ESBFishScaleClassId : uint8_t
	{
		Small  = 0,
		Middle = 1,
		Large  = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBFishRarityClassId
	 */
	enum class ESBFishRarityClassId : uint8_t
	{
		Common = 0,
		Rare   = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBFishPosition
	 */
	enum class ESBFishPosition : uint8_t
	{
		Center = 0,
		Left   = 1,
		Right  = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBFishMoveState
	 */
	enum class ESBFishMoveState : uint8_t
	{
		Break   = 0,
		Tired   = 1,
		Rampage = 2,
		Landing = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBFishingGameState
	 */
	enum class ESBFishingGameState : uint8_t
	{
		None           = 0,
		Menu           = 1,
		CastLine       = 2,
		WaitForBite    = 3,
		Bite           = 4,
		HookSuccess    = 5,
		HookTimeout    = 6,
		FishingCancel  = 7,
		FishingFight   = 8,
		FishingSuccess = 9,
		FishingFail    = 10,
		MAX            = 11
	};

	/**
	 * Enum SkyBlue.ESBFmControlMode
	 */
	enum class ESBFmControlMode : uint8_t
	{
		None    = 0,
		UseSeed = 1,
		UseItem = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBFmCellOpenCondition
	 */
	enum class ESBFmCellOpenCondition : uint8_t
	{
		Free         = 0,
		EnoughLevel  = 1,
		Purchase     = 2,
		Subscription = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.ESBFoliageReactions
	 */
	enum class ESBFoliageReactions : uint8_t
	{
		Radial      = 0,
		Speed       = 1,
		Height      = 2,
		RadialSpeed = 3,
		MAX         = 4
	};

	/**
	 * Enum SkyBlue.EFootPrintSide
	 */
	enum class EFootPrintSide : uint8_t
	{
		None          = 0,
		Right         = 1,
		Left          = 2,
		RightForefoot = 3,
		LeftForefoot  = 4,
		NUM           = 5,
		MAX           = 6
	};

	/**
	 * Enum SkyBlue.EFootPrintType
	 */
	enum class EFootPrintType : uint8_t
	{
		None           = 0,
		WalkStart      = 1,
		Walk           = 2,
		Run            = 3,
		Dash           = 4,
		Jump           = 5,
		Landing_S      = 6,
		Landing_M      = 7,
		Landing_L      = 8,
		Down           = 9,
		Down_M         = 10,
		Down_L         = 11,
		HeavyAttack    = 12,
		Step           = 13,
		Swimming       = 14,
		DirectWaterIn  = 15,
		DirectWaterOut = 16,
		MAX            = 17
	};

	/**
	 * Enum SkyBlue.ESBOnlineSubsystemType
	 */
	enum class ESBOnlineSubsystemType : uint8_t
	{
		Unknown     = 0,
		Session     = 1,
		Party       = 2,
		Chat        = 3,
		Matchmaking = 4,
		Num         = 5,
		MAX         = 6
	};

	/**
	 * Enum SkyBlue.ECauseOfDetah
	 */
	enum class ECauseOfDetah : uint8_t
	{
		Unknown   = 0,
		HitPoint0 = 1,
		FallDown  = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBDungeonResultCause
	 */
	enum class ESBDungeonResultCause : uint8_t
	{
		Clear    = 0,
		TimeOver = 1,
		Retire   = 2,
		Failure  = 3,
		MAX      = 4
	};

	/**
	 * Enum SkyBlue.ESBGameModeStartMode
	 */
	enum class ESBGameModeStartMode : uint8_t
	{
		OnlyStartImmediately      = 0,
		OnlyStartWithOtherPlayers = 1,
		Any                       = 2,
		MAX                       = 3
	};

	/**
	 * Enum SkyBlue.ESBInventoryAccessType
	 */
	enum class ESBInventoryAccessType : uint8_t
	{
		City    = 0,
		Field   = 1,
		Dungeon = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBContentExitTravelTarget
	 */
	enum class ESBContentExitTravelTarget : uint8_t
	{
		PreviousMap    = 0,
		LastTravelCity = 1,
		MAX            = 2
	};

	/**
	 * Enum SkyBlue.ESBPlayerDungeonStartType
	 */
	enum class ESBPlayerDungeonStartType : uint8_t
	{
		RootStart   = 0,
		Frontline   = 1,
		ModeSpecial = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBScoreAttackRemainTime
	 */
	enum class ESBScoreAttackRemainTime : uint8_t
	{
		Start   = 0,
		Over60  = 1,
		Under60 = 2,
		Under30 = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBMzBattleRatingType
	 */
	enum class ESBMzBattleRatingType : uint8_t
	{
		Rating_S   = 0,
		Rating_A   = 1,
		Rating_B   = 2,
		Rating_C   = 3,
		Rating_D   = 4,
		Rating_MAX = 5
	};

	/**
	 * Enum SkyBlue.ETimeNotifyNetMode
	 */
	enum class ETimeNotifyNetMode : uint8_t
	{
		ServerOnly   = 0,
		ClientOnly   = 1,
		ServerClinet = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBSpecialCutType
	 */
	enum class ESBSpecialCutType : uint8_t
	{
		SpecialCutType_None     = 0,
		SpecialCutType_RankS    = 1,
		SpecialCutType_RarityUp = 2,
		SpecialCutType_MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBGashaCurrencyType
	 */
	enum class ESBGashaCurrencyType : uint8_t
	{
		CurrencyType_None    = 0,
		CurrencyType_Currenc = 1,
		CurrencyType_Paid    = 2,
		CurrencyType_Free    = 3,
		CurrencyType_SkyCoin = 4,
		CurrencyType_MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBGashaCategoryType
	 */
	enum class ESBGashaCategoryType : uint8_t
	{
		CategoryType_None    = 0,
		CategoryType_RoseOrb = 1,
		CategoryType_Ticket  = 2,
		CategoryType_Event   = 3,
		CategoryType_MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBGashaType
	 */
	enum class ESBGashaType : uint8_t
	{
		GashaType_Normal = 0,
		GashaType_Box    = 1,
		GashaType_Friend = 2,
		GashaType_StepUp = 3,
		GashaType_MAX    = 4
	};

	/**
	 * Enum SkyBlue.ESBGashaExpectDemoType
	 */
	enum class ESBGashaExpectDemoType : uint8_t
	{
		GashaStart   = 0,
		Character    = 1,
		GashaMachine = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBGeneralPurposeCounterType
	 */
	enum class ESBGeneralPurposeCounterType : uint8_t
	{
		Stamp         = 0,
		Emote         = 1,
		WishList      = 2,
		Resuscitation = 3,
		Treasure      = 4,
		MaxDamage     = 5,
		MAX           = 6
	};

	/**
	 * Enum SkyBlue.ESBAlertHateAlertStatus
	 */
	enum class ESBAlertHateAlertStatus : uint8_t
	{
		Hide                  = 0,
		EnemyTarget           = 1,
		FindByEnemy           = 2,
		IsTrainingBattleState = 3,
		MAX                   = 4
	};

	/**
	 * Enum SkyBlue.EHealProcResult
	 */
	enum class EHealProcResult : uint8_t
	{
		None            = 0,
		HealDone        = 1,
		ShortOfMoney    = 2,
		HealUnnecessary = 3,
		HealCanceled    = 4,
		MAX             = 5
	};

	/**
	 * Enum SkyBlue.EHealStationDialogMessage
	 */
	enum class EHealStationDialogMessage : uint8_t
	{
		None              = 0,
		HealChargeConfirm = 1,
		ShortOfMoney      = 2,
		HealUnnecessary   = 3,
		MAX               = 4
	};

	/**
	 * Enum SkyBlue.ESBHintShowTypes
	 */
	enum class ESBHintShowTypes : uint8_t
	{
		MYCHARACTER    = 0,
		ITEM_INVENTORY = 1,
		QUEST          = 2,
		MAP            = 3,
		COMMUNICATE    = 4,
		EMOTE          = 5,
		MATCHING       = 6,
		PARTY          = 7,
		OPTION         = 8,
		DUNGEON        = 9,
		NUM            = 10,
		MAX            = 11
	};

	/**
	 * Enum SkyBlue.ESBHTNStateComparison
	 */
	enum class ESBHTNStateComparison : uint8_t
	{
		Equal            = 0,
		NotEqual         = 1,
		LessThan         = 2,
		LessThanEqual    = 3,
		GreaterThan      = 4,
		GreaterThanEqual = 5,
		MAX              = 6
	};

	/**
	 * Enum SkyBlue.ESBAIPartyStrategy
	 */
	enum class ESBAIPartyStrategy : uint8_t
	{
		Normal = 0,
		Siege  = 1,
		Line   = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBImagineCategory
	 */
	enum class ESBImagineCategory : uint8_t
	{
		Arts    = 0,
		Passive = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBInfluencePropagationType
	 */
	enum class ESBInfluencePropagationType : uint8_t
	{
		Linear   = 0,
		Constant = 1,
		Custom   = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.EInteractionTargetType
	 */
	enum class EInteractionTargetType : uint8_t
	{
		None         = 0,
		Player       = 1,
		Npc          = 2,
		GatherPoint  = 3,
		WarpPoint    = 4,
		NoticeBoard  = 5,
		TreasureBox  = 6,
		FishingPoint = 7,
		CraftMachine = 8,
		Gimmick      = 9,
		Ornament     = 10,
		Other        = 11,
		Max          = 12
	};

	/**
	 * Enum SkyBlue.EInterruptQuestEnemySpawnStatus
	 */
	enum class EInterruptQuestEnemySpawnStatus : uint8_t
	{
		Idle      = 0,
		Requested = 1,
		Spawned   = 2,
		Max       = 3
	};

	/**
	 * Enum SkyBlue.EInterruptQuestEventActionCondType
	 */
	enum class EInterruptQuestEventActionCondType : uint8_t
	{
		None                 = 0,
		All                  = 1,
		PlayerDead           = 2,
		NpcTalkAfter         = 3,
		GimmickIntaractAfter = 4,
		ItemUseAfter         = 5,
		MAX                  = 6
	};

	/**
	 * Enum SkyBlue.EInterruptQuestResult
	 */
	enum class EInterruptQuestResult : uint8_t
	{
		Unknown = 0,
		Success = 1,
		Failed  = 2,
		StepUp  = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.EInterruptQuestStatus
	 */
	enum class EInterruptQuestStatus : uint8_t
	{
		Idle           = 0,
		Loading        = 1,
		EnemySyncWait  = 2,
		EnemySpawnWait = 3,
		InitWait       = 4,
		Running        = 5,
		Done           = 6,
		MAX            = 7
	};

	/**
	 * Enum SkyBlue.EInterruptQuestRarePopType
	 */
	enum class EInterruptQuestRarePopType : uint8_t
	{
		None        = 0,
		Probability = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.EInterruptQuestConditionType
	 */
	enum class EInterruptQuestConditionType : uint8_t
	{
		QuestAreaIn                = 0,
		GimmickAreaIn              = 1,
		KillTarget_QuestArea       = 2,
		KillTarget_GimmickArea     = 3,
		QuestAreaIn_Mount          = 4,
		GimmickAreaIn_Mount        = 5,
		QuestAreaIn_PlayerNum      = 6,
		GimmickAreaIn_PlayerNum    = 7,
		HaveMoneyCount_QuestArea   = 8,
		HaveMoneyCount_GimmickArea = 9,
		BadStatus_QuestArea        = 10,
		BadStatus_GimmickArea      = 11,
		ActionIntaract_QuestArea   = 12,
		ActionIntaract_GimmickArea = 13,
		ActionRecovery_QuestArea   = 14,
		ActionRecovery_GimmickArea = 15,
		ActionEmote_QuestArea      = 16,
		ActionEmote_GimmickArea    = 17,
		ActionGather_QuestArea     = 18,
		ActionGather_GimmickArea   = 19,
		ActionItemUse_QuestArea    = 20,
		ActionItemUse_GimmickArea  = 21,
		ActionNpcTalk_QuestArea    = 22,
		ActionNpcTalk_GimmickArea  = 23,
		MAX                        = 24
	};

	/**
	 * Enum SkyBlue.ESBItemUseStatus
	 */
	enum class ESBItemUseStatus : uint8_t
	{
		CanUse                             = 0,
		NotHave                            = 1,
		NotUseItem                         = 2,
		NotClassLeve                       = 3,
		NotFieldBagAccess                  = 4,
		NotUseDungeonItemBox               = 5,
		NotUseCity                         = 6,
		NotUseDead                         = 7,
		NotAllowUseOtherItem               = 8,
		CannotItem                         = 9,
		EngramCannonAction                 = 10,
		RestrictPlayerActionByCheerfulItem = 11,
		RecastTime                         = 12,
		NotUseCheerfulItemMove             = 13,
		NotUseCheerfulItemClimbing         = 14,
		NotUseCheerfulItemUnsheathe        = 15,
		NotUseCheerfulItemMounting         = 16,
		NotUseCheerfulItemAir              = 17,
		NotUseCheerfulItemSwimming         = 18,
		EmoteNow                           = 19,
		NotUseCheerfulItemSit              = 20,
		NotUseFishing                      = 21,
		NotUseCheerfulItemInteraction      = 22,
		NotUseCheerfulItemBattleStatus     = 23,
		IsItemLock                         = 24,
		NotThatClass                       = 25,
		NotUseMission                      = 26,
		NotUseLeveItem                     = 27,
		Error                              = 28,
		MAX                                = 29
	};

	/**
	 * Enum SkyBlue.EItemFilterType
	 */
	enum class EItemFilterType : uint8_t
	{
		None                                                      = 0,
		Filter_WeaponType_ShieldSword                             = 1,
		Filter_WeaponType_Axe                                     = 2,
		Filter_WeaponType_Bow                                     = 3,
		Filter_WeaponType_Cane                                    = 4,
		Filter_Imagine_Active                                     = 5,
		Filter_Imagine_Passive                                    = 6,
		Filter_Imagine_Passive_Position1                          = 7,
		Filter_Imagine_Passive_Position2                          = 8,
		Filter_Imagine_Passive_Position3                          = 9,
		Filter_Imagine_Passive_Position4                          = 10,
		Filter_Imagine_Passive_Position5                          = 11,
		Filter_Effective_None                                     = 12,
		Filter_Effective_Physics                                  = 13,
		Filter_Effective_Earth                                    = 14,
		Filter_Effective_Fire                                     = 15,
		Filter_Effective_Ice                                      = 16,
		Filter_Effective_Thunder                                  = 17,
		Filter_Effective_Light                                    = 18,
		Filter_Effective_Darkness                                 = 19,
		Filter_Items_CanUse                                       = 20,
		Filter_Items_Material                                     = 21,
		Filter_Items_Item                                         = 22,
		Filter_Items_Weapon                                       = 23,
		Filter_Items_Costume                                      = 24,
		Filter_Items_Accessory                                    = 25,
		Filter_Items_Equipment                                    = 26,
		Filter_Items_Imagine                                      = 27,
		Filter_Items_MountImagine                                 = 28,
		Filter_Locked                                             = 29,
		Filter_Costume_Protector_Head                             = 30,
		Filter_Costume_Protector_Body                             = 31,
		Filter_Costume_Protector_Hand                             = 32,
		Filter_Costume_Protector_Leg                              = 33,
		Filter_Costume_Protector_Shoes                            = 34,
		Filter_Costume_Protector_Accessory_HeadTop                = 35,
		Filter_Costume_Protector_Accessory_Eye                    = 36,
		Filter_Costume_Protector_Accessory_Cheek                  = 37,
		Filter_Costume_Protector_Accessory_Ear                    = 38,
		Filter_Costume_Protector_Accessory_RightAndLeftHandFinger = 39,
		Filter_Costume_Protector_Accessory_LeftHandFinger         = 40,
		Filter_Costume_Protector_Accessory_Back                   = 41,
		Filter_Costume_Protector_Accessory_Hip                    = 42,
		Filter_Costume_Protector_Accessory_Underwear              = 43,
		Filter_Quest_Slay                                         = 44,
		Filter_Quest_Errand                                       = 45,
		Filter_Quest_Collect                                      = 46,
		Filter_Quest_Traverse                                     = 47,
		Filter_Quest_Level1                                       = 48,
		Filter_Quest_Level11                                      = 49,
		Filter_Quest_Level21                                      = 50,
		Filter_Quest_Level31                                      = 51,
		Filter_Quest_Level41                                      = 52,
		Filter_Quest_Level51                                      = 53,
		Filter_Quest_Level61                                      = 54,
		Filter_Quest_CantReceive                                  = 55,
		Filter_Quest_Category_Main                                = 56,
		Filter_Quest_Category_Sub                                 = 57,
		Filter_Quest_Category_Class                               = 58,
		Filter_Quest_Category_Extra                               = 59,
		Filter_Quest_Category_ReleaseFunctions                    = 60,
		Filter_Imagine_IllustImagine                              = 61,
		Filter_LevelMax                                           = 62,
		Filter_NotLevelMax                                        = 63,
		Filter_SyntheableWeapons                                  = 64,
		Filter_AddSlotWeapons                                     = 65,
		Filter_TuningWeapons                                      = 66,
		Filter_RemoveAbilityWeapons                               = 67,
		Filter_HasAbilities                                       = 68,
		Filter_SmeltingOnly                                       = 69,
		Filter_BillingOnly                                        = 70,
		Filter_RefiningMaterialOnly                               = 71,
		Filter_Extendable                                         = 72,
		Filter_WeaponType_P020                                    = 73,
		Filter_WeaponType_P019                                    = 74,
		Filter_WeaponType_P021                                    = 75,
		Filter_BlueProPointExchange                               = 76,
		Filter_FusionItemOnly                                     = 77,
		Filter_FusionItemSlot1                                    = 78,
		Filter_FusionItemSlot2                                    = 79,
		Filter_FusionItemSlot3                                    = 80,
		Filter_FusionItemSlot4                                    = 81,
		Filter_WeaponSlot1                                        = 82,
		Filter_WeaponSlot2                                        = 83,
		Filter_WeaponSlot3                                        = 84,
		Filter_WeaponSlot4                                        = 85,
		Filter_FusionItemClass_P012                               = 86,
		Filter_FusionItemClass_P007                               = 87,
		Filter_FusionItemClass_P006                               = 88,
		Filter_FusionItemClass_P011                               = 89,
		Filter_FusionItemClass_P019                               = 90,
		Filter_FusionItemClass_P020                               = 91,
		Filter_FusionItemClass_P021                               = 92,
		Filter_AbilityType_Params                                 = 93,
		Filter_AbilityType_Attack                                 = 94,
		Filter_AbilityType_Defence                                = 95,
		Filter_AbilityType_Support                                = 96,
		Filter_AbilityType_Other                                  = 97,
		Filter_LimitedWeapon                                      = 98,
		Filter_UnlimitedWeapon                                    = 99,
		Filter_ItemCategory_Consumable                            = 100,
		Filter_ItemCategory_Sale                                  = 101,
		Filter_ItemCategory_Smelting                              = 102,
		Filter_ItemCategory_Craft                                 = 103,
		Filter_ItemCategory_Idea                                  = 104,
		Filter_ItemCategory_SetBox                                = 105,
		Filter_ItemCategory_SelectBox                             = 106,
		Filter_ItemCategory_RandomBox                             = 107,
		Filter_Costume_Composite                                  = 108,
		Filter_Costume_NoComposite                                = 109,
		Filter_StackB_Enable                                      = 110,
		Filter_StackB_Disable                                     = 111,
		Filter_StackB_Applied                                     = 112,
		Filter_StackB_NotApplied                                  = 113,
		Filter_StackB_Incomplete                                  = 114,
		Filter_StackB_Complete                                    = 115,
		Filter_IsBattleBuildRegisted                              = 116,
		Filter_IsBattleBuildNotRegisted                           = 117,
		Filter_IsEquiped                                          = 118,
		Filter_IsNotEquiped                                       = 119,
		Filter_IsBuildEquipments                                  = 120,
		Filter_AdventureBoard_Reward_Weapon_Recepi                = 121,
		Filter_AdventureBoard_Reward_PassiveImagine_Recepi        = 122,
		Filter_AdventureBoard_Reward_ActiveImagine_Recepi         = 123,
		Filter_AdventureBoard_Reward_MountImagine                 = 124,
		Filter_AdventureBoard_Reward_Costume                      = 125,
		Filter_AdventureBoard_Reward_Currency                     = 126,
		Filter_AdventureBoard_Reward_Item                         = 127,
		Filter_AdventureBoard_AdventureRank                       = 128,
		Filter_AdventureBoard_Extra                               = 129,
		Filter_AdventureBoard_NotCleared                          = 130,
		Filter_AdventureBoard_Cleared                             = 131,
		Filter_AdventureBoard_Complete                            = 132,
		Filter_AdventureBoard_Favorite                            = 133,
		Filter_AdventureBoard_GetReward                           = 134,
		Filter_AdventureBoard_P012                                = 135,
		Filter_AdventureBoard_P007                                = 136,
		Filter_AdventureBoard_P006                                = 137,
		Filter_AdventureBoard_P011                                = 138,
		Filter_AdventureBoard_P019                                = 139,
		Filter_AdventureBoard_P020                                = 140,
		Filter_AdventureBoard_P021                                = 141,
		Filter_Hyoui                                              = 142,
		Filter_FangExpedition_Using                               = 143,
		Filter_FangExpedition_NoUsing                             = 144,
		Filter_Ornament_All                                       = 145,
		Filter_Ornament_Object                                    = 146,
		Filter_Ornament_Floor                                     = 147,
		Filter_T_Apart                                            = 148,
		Filter_T_ApartWishList                                    = 149,
		Filter_HyouiImagineOnly                                   = 150,
		Filter_WeaponAbility_Common                               = 151,
		Filter_WeaponAbility_Rare                                 = 152,
		Filter_WeaponAbility_Legendary                            = 153,
		Filter_NewFormatEnable                                    = 154,
		Filter_NewFormatDisable                                   = 155,
		Filter_WeaponAbilityEnhanceable                           = 156,
		FILTER_MAX                                                = 157,
		MAX                                                       = 158
	};

	/**
	 * Enum SkyBlue.ESBItemSortType
	 */
	enum class ESBItemSortType : uint8_t
	{
		Default_Time                = 0,
		Default_Time_Reverse        = 1,
		ItemId                      = 2,
		ItemId_Reverse              = 3,
		ItemLevel                   = 4,
		ItemLevel_Reverse           = 5,
		ItemType                    = 6,
		Item_Enhance                = 7,
		SortId                      = 8,
		SortId_Reverse              = 9,
		Str                         = 10,
		Dex                         = 11,
		Vit                         = 12,
		Mnd                         = 13,
		Int                         = 14,
		HP                          = 15,
		Attack                      = 16,
		Recomended                  = 17,
		Item_Slot                   = 18,
		Item_Slot_Reverse           = 19,
		Weapon_Slot                 = 20,
		Weapon_Slot_Reverse         = 21,
		StackB_Num                  = 22,
		StackB_Num_Reverse          = 23,
		BattleScore                 = 24,
		BattleScore_Reverse         = 25,
		WeaponAbilityRarity         = 26,
		WeaponAbilityRarity_Reverse = 27,
		NoSort                      = 28,
		AdventurerLevel             = 29,
		AdventurerLevel_Reverse     = 30,
		SORT_TYPE_MAX               = 31,
		MAX                         = 32
	};

	/**
	 * Enum SkyBlue.ESBLevelSequenceType
	 */
	enum class ESBLevelSequenceType : uint8_t
	{
		Default = 0,
		Demo    = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBLibraryPictureBookType
	 */
	enum class ESBLibraryPictureBookType : uint8_t
	{
		Item           = 0,
		Weapon         = 1,
		BattleImagine  = 2,
		EnhanceImagine = 3,
		Num            = 4,
		MAX            = 5
	};

	/**
	 * Enum SkyBlue.ELibraryItemCategory
	 */
	enum class ELibraryItemCategory : uint8_t
	{
		Consumption = 0,
		Idea        = 1,
		Smelting    = 2,
		Craft       = 3,
		Sale        = 4,
		Num         = 5,
		MAX         = 6
	};

	/**
	 * Enum SkyBlue.ESBLibraryEnemyAppearanceTime
	 */
	enum class ESBLibraryEnemyAppearanceTime : uint8_t
	{
		All   = 0,
		Noon  = 1,
		Night = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBLibraryEnemyElementType
	 */
	enum class ESBLibraryEnemyElementType : uint8_t
	{
		None                = 0,
		Fire                = 1,
		Thunder             = 2,
		Ice                 = 3,
		Rock                = 4,
		Light               = 5,
		Darkness            = 6,
		Stun                = 7,
		Poison              = 8,
		Sleep               = 9,
		FixTarget           = 10,
		Fear                = 11,
		Dark                = 12,
		Bind                = 13,
		Palsy               = 14,
		Drain               = 15,
		FlashStun           = 16,
		Bleeding            = 17,
		CorePoison          = 18,
		SpeakerStun         = 19,
		CannotSkill         = 20,
		StaminaZero         = 21,
		TransformNappo      = 22,
		StaminaRecoveryDown = 23,
		Max                 = 24
	};

	/**
	 * Enum SkyBlue.ESBLibraryEnemyWeaponSetting
	 */
	enum class ESBLibraryEnemyWeaponSetting : uint8_t
	{
		Main = 0,
		Sub  = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBLibraryEnemyViewSetting
	 */
	enum class ESBLibraryEnemyViewSetting : uint8_t
	{
		Default = 0,
		Battle  = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBLibraryEnemyDropItemIconType
	 */
	enum class ESBLibraryEnemyDropItemIconType : uint8_t
	{
		Unknown                   = 0,
		Item                      = 1,
		Weapon                    = 2,
		Costume                   = 3,
		Imagine_Battle            = 4,
		Imagine_Inner             = 5,
		Mount                     = 6,
		Token                     = 7,
		Emote                     = 8,
		Stamp                     = 9,
		ImagineRecipe             = 10,
		CraftMachineRecipe        = 11,
		CraftRecipeSet            = 12,
		AdventureBoard            = 13,
		Direct_Item               = 14,
		Direct_Weapon             = 15,
		Direct_Costume            = 16,
		Direct_Imagine            = 17,
		Direct_Mount              = 18,
		Direct_Token              = 19,
		Direct_Emote              = 20,
		Direct_Stamp              = 21,
		Direct_ImagineRecipe      = 22,
		Direct_CraftMachineRecipe = 23,
		Direct_CraftRecipeSet     = 24,
		Direct_AdventureBoard     = 25,
		Other                     = 26,
		MAX                       = 27
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemoryInfoSortType
	 */
	enum class ESBLiquidMemoryInfoSortType : uint8_t
	{
		LiquidMemoryId_Ascending  = 0,
		LiquidMemoryId_Descending = 1,
		Num                       = 2,
		MAX                       = 3
	};

	/**
	 * Enum SkyBlue.ESBLiquidMemory
	 */
	enum class ESBLiquidMemory : uint8_t
	{
		None                   = 0,
		LevelMax               = 1,
		AccumulateConditionMax = 2,
		MAX                    = 3
	};

	/**
	 * Enum SkyBlue.ELoadingType
	 */
	enum class ELoadingType : uint8_t
	{
		Common  = 0,
		Dungeon = 1,
		PvP     = 2,
		Simple  = 3,
		Max     = 4
	};

	/**
	 * Enum SkyBlue.ESBLocationInfoType
	 */
	enum class ESBLocationInfoType : uint8_t
	{
		None            = 0,
		InstanceDungeon = 1,
		RaidDungeon     = 2,
		FishingPoint    = 3,
		PublicDungeon   = 4,
		MAX             = 5
	};

	/**
	 * Enum SkyBlue.ELoginBonusCategory
	 */
	enum class ELoginBonusCategory : uint8_t
	{
		LoginBonus_Invalid          = 0,
		LoginBonus_Item             = 1,
		LoginBonus_Weapon           = 2,
		LoginBonus_Costume          = 3,
		LoginBonus_Imagine          = 4,
		LoginBonus_MountImagine     = 5,
		LoginBonus_ExCategory_Start = 6,
		LoginBonus_Money            = 7,
		LoginBonus_Orb              = 8,
		LoginBonus_ItemBox          = 9,
		LoginBonus_Emote            = 10,
		LoginBonus_Stamp            = 11,
		LoginBonus_Exp              = 12,
		LoginBonus_Achievement      = 13,
		LoginBonus_ImagineRecipe    = 14,
		LoginBonus_BPP              = 15,
		LoginBonus_ItemRecipe       = 16,
		LoginBonus_WeaponRecipe     = 17,
		LoginBonus_Token            = 18,
		LoginBonus_StampCategory    = 19,
		LoginBonus_WeaponSeries     = 20,
		LoginBonus_AdventureBoard   = 21,
		LoginBonus_FusionItem       = 22,
		LoginBonus_MAX              = 23
	};

	/**
	 * Enum SkyBlue.ESBMailAttachOverflowType
	 */
	enum class ESBMailAttachOverflowType : uint8_t
	{
		None          = 0,
		Over_Vanish   = 1,
		Over_NoVanish = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.ESBMailAttachmentViewType
	 */
	enum class ESBMailAttachmentViewType : uint8_t
	{
		Amount       = 0,
		TransferType = 1,
		Storage      = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBMailReadStatus
	 */
	enum class ESBMailReadStatus : uint8_t
	{
		MAIL_NOREAD    = 0,
		MAIL_READED    = 1,
		MAIL_GETED     = 2,
		MAIL_TRANSED   = 3,
		MAIL_TRANSRECV = 4,
		MAIL_ALL       = 5,
		MAIL_MAX       = 6
	};

	/**
	 * Enum SkyBlue.ESBCharaCreateMole
	 */
	enum class ESBCharaCreateMole : uint8_t
	{
		None             = 0,
		MoleNum          = 1,
		MoleNumOnOneSide = 2,
		MAX              = 3
	};

	/**
	 * Enum SkyBlue.ESBMakeupType
	 */
	enum class ESBMakeupType : uint8_t
	{
		None      = 0,
		Condition = 1,
		Lip       = 2,
		Paint     = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.EPinMaxPerMap
	 */
	enum class EPinMaxPerMap : uint8_t
	{
		None = 0,
		Max  = 1
	};

	/**
	 * Enum SkyBlue.EMapSymbolIconType
	 */
	enum class EMapSymbolIconType : uint8_t
	{
		MapSymbolIcon_Player                           = 0,
		MapSymbolIcon_PartyMember                      = 1,
		MapSymbolIcon_PartyMember_Dead                 = 2,
		MapSymbolIcon_FieldEnemy                       = 3,
		MapSymbolIcon_MainQuest_Acceptable             = 4,
		MapSymbolIcon_MainQuest_InProgress             = 5,
		MapSymbolIcon_MainQuest_Reportable             = 6,
		MapSymbolIcon_MainQuest_Unprocessable          = 7,
		MapSymbolIcon_SubQuest_Acceptable              = 8,
		MapSymbolIcon_SubQuest_InProgress              = 9,
		MapSymbolIcon_SubQuest_Reportable              = 10,
		MapSymbolIcon_SubQuest_Unprocessable           = 11,
		MapSymbolIcon_ExtraQuest_Acceptable            = 12,
		MapSymbolIcon_ExtraQuest_InProgress            = 13,
		MapSymbolIcon_ExtraQuest_Reportable            = 14,
		MapSymbolIcon_ExtraQuest_Unprocessable         = 15,
		MapSymbolIcon_MainQuest_Acceptable_Outside     = 16,
		MapSymbolIcon_MainQuest_InProgress_Outside     = 17,
		MapSymbolIcon_MainQuest_Reportable_Outside     = 18,
		MapSymbolIcon_MainQuest_Unprocessable_Outside  = 19,
		MapSymbolIcon_SubQuest_Acceptable_Outside      = 20,
		MapSymbolIcon_SubQuest_InProgress_Outside      = 21,
		MapSymbolIcon_SubQuest_Reportable_Outside      = 22,
		MapSymbolIcon_SubQuest_Unprocessable_Outside   = 23,
		MapSymbolIcon_ExtraQuest_Acceptable_Outside    = 24,
		MapSymbolIcon_ExtraQuest_InProgress_Outside    = 25,
		MapSymbolIcon_ExtraQuest_Reportable_Outside    = 26,
		MapSymbolIcon_ExtraQuest_Unprocessable_Outside = 27,
		MapSymbolIcon_InterruptQuest_InProgress        = 28,
		MapSymbolIcon_Shop_Weapon                      = 29,
		MapSymbolIcon_HealStation                      = 30,
		MapSymbolIcon_Shop_Item                        = 31,
		MapSymbolIcon_Shop_Peddler                     = 32,
		MapSymbolIcon_Npc_Tutorial                     = 33,
		MapSymbolIcon_Npc_Dungeon                      = 34,
		MapSymbolIcon_WarpPoint                        = 35,
		MapSymbolIcon_LocalWarpPoint                   = 36,
		MapSymbolIcon_InstanceDungeon                  = 37,
		MapSymbolIcon_Shop_Protector                   = 38,
		MapSymbolIcon_Npc_Quest                        = 39,
		MapSymbolIcon_Shop_Aesthe                      = 40,
		MapSymbolIcon_Shop_Dyeing                      = 41,
		MapSymbolIcon_ImagineLabo                      = 42,
		MapSymbolIcon_Workshop                         = 43,
		MapSymbolIcon_UserQuestHouse                   = 44,
		MapSymbolIcon_ExchangeShop                     = 45,
		MapSymbolIcon_CoinHouse                        = 46,
		MapSymbolIcon_Pin                              = 47,
		MapSymbolIcon_Craft                            = 48,
		MapSymbolIcon_ClassChange                      = 49,
		MapSymbolIcon_Shop_Synthe                      = 50,
		MapSymbolIcon_Restuarant                       = 51,
		MapSymbolIcon_ChallengeBox                     = 52,
		MapSymbolIcon_Arena                            = 53,
		MapSymbolIcon_Warehouse                        = 54,
		MapSymbolIcon_Guild                            = 55,
		MapSymbolIcon_GachaShop                        = 56,
		MapSymbolIcon_MemoryStand                      = 57,
		MapSymbolIcon_TimeAttack                       = 58,
		MapSymbolIcon_AdventurerRank                   = 59,
		MapSymbolIcon_RankingBoard                     = 60,
		MapSymbolIcon_ZoneBorder                       = 61,
		MapSymbolIcon_Cloud                            = 62,
		MapSymbolIcon_RegionIcon                       = 63,
		MapSymbolIcon_FightingToghterNPC               = 64,
		MapSymbolIcon_FightingToghterNPC_Dead          = 65,
		MapSymbolIcon_RaidDungeon                      = 66,
		MapSymbolIcon_BuffNPC                          = 67,
		MapSymbolIcon_BuffNPC_Invalid                  = 68,
		MapSymbolIcon_MaterialSupporter                = 69,
		MapSymbolIcon_MaterialSupporter_Invalid        = 70,
		MapSymbolIcon_ReleaseSubQuest_Acceptable       = 71,
		MapSymbolIcon_ReleaseSubQuest_InProgress       = 72,
		MapSymbolIcon_ReleaseSubQuest_Reportable       = 73,
		MapSymbolIcon_ReleaseSubQuest_Unprocessable    = 74,
		MapSymbolIcon_ClassSubQuest_Acceptable         = 75,
		MapSymbolIcon_ClassSubQuest_InProgress         = 76,
		MapSymbolIcon_ClassSubQuest_Reportable         = 77,
		MapSymbolIcon_ClassSubQuest_Unprocessable      = 78,
		MapSymbolIcon_RaidDungeon_Time                 = 79,
		MapSymbolIcon_AbilityMastery                   = 80,
		MapSymbolIcon_Fishing                          = 81,
		MapSymbolIcon_Camp                             = 82,
		MapSymbolIcon_ClimbPoint                       = 83,
		MapSymbolIcon_DxBattleNPC                      = 84,
		MapSymbolIcon_PineVillageNPC                   = 85,
		MapSymbolIcon_DhcNPC                           = 86,
		MapSymbolIcon_Ornament                         = 87,
		MapSymbolIcon_NFTArea                          = 88,
		MapSymbolIcon_Unknown                          = 89,
		MapSymbolIcon_MAX                              = 90
	};

	/**
	 * Enum SkyBlue.EMapFuncIconType
	 */
	enum class EMapFuncIconType : uint8_t
	{
		MapFuncIcon_CurrMap      = 0,
		MapFuncIcon_WorldMap     = 1,
		MapFuncIcon_MapOneBefore = 2,
		MapFuncIcon_LayerToggle  = 3,
		MapFuncIcon_Max          = 4
	};

	/**
	 * Enum SkyBlue.EAreaMapNum
	 */
	enum class EAreaMapNum : uint8_t
	{
		None = 0,
		Num  = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBMapInfoGameModeType
	 */
	enum class ESBMapInfoGameModeType : uint8_t
	{
		City               = 0,
		Field              = 1,
		PublicDungeon      = 2,
		InstanceArea       = 3,
		DungeonNormal      = 4,
		DungeonScenario    = 5,
		DungeonTimeAttack  = 6,
		DungeonScoreAttack = 7,
		DungeonSD          = 8,
		Survival           = 9,
		RaidBattle         = 10,
		DxBattle           = 11,
		KwmBattle          = 12,
		MzBattle           = 13,
		BattleArena        = 14,
		BattleArenaEx      = 15,
		SksBattle          = 16,
		RankUpExam         = 17,
		CATutorial         = 18,
		CharaCreate        = 19,
		Theater            = 20,
		ShadowAvatarBattle = 21,
		TutorialGameMode   = 22,
		OfflineInstance    = 23,
		OfflineDemo        = 24,
		MAX                = 25
	};

	/**
	 * Enum SkyBlue.EMasterDataType
	 */
	enum class EMasterDataType : uint8_t
	{
		PlayerStatusMaster                         = 0,
		PlayerStatusMasterCommonParams             = 1,
		PlayerStatusMapTravelMaster                = 2,
		AbilityMaster                              = 3,
		AbilityEffectMaster                        = 4,
		WeaponKillerPerkPickMaster                 = 5,
		ItemMaster                                 = 6,
		ItemEfficacyTypeMaster                     = 7,
		OutGameBuffMaster                          = 8,
		WeaponMaster                               = 9,
		WeaponLevelStatusPatternMaster             = 10,
		InitializeWeaponMaster                     = 11,
		QuestMaster                                = 12,
		WarpPointMaster                            = 13,
		TextMaster                                 = 14,
		ShopItemMaster                             = 15,
		GameModeInfo                               = 16,
		MapInfo                                    = 17,
		DungeonProcess                             = 18,
		EnemyParamMaster                           = 19,
		EnemyPtAltMaster                           = 20,
		AchievementMaster                          = 21,
		NgWords                                    = 22,
		StampMaster                                = 23,
		CraftMaster                                = 24,
		RecipeReleaseConditionMaster               = 25,
		AdventurerRank                             = 26,
		Treasure                                   = 27,
		MasterImagine                              = 28,
		MasterImagineParam                         = 29,
		MasterImaginePerk                          = 30,
		MasterImagineRecepi                        = 31,
		MasterMountImagine                         = 32,
		AttackDataMaster                           = 33,
		AttackOverrideDataMaster                   = 34,
		AttackModifyDataMaster                     = 35,
		SkillData                                  = 36,
		MasterCostume                              = 37,
		MasterItemBox                              = 38,
		LiquidMemory                               = 39,
		LiquidMemoryAccumulateLotteryTable         = 40,
		Token                                      = 41,
		TokenUse                                   = 42,
		Supply                                     = 43,
		EventTerms                                 = 44,
		Reward                                     = 45,
		DungeonReward                              = 46,
		DungeonRankedReward                        = 47,
		RewardLotteryGroup                         = 48,
		DigitalSignage                             = 49,
		EmoteMaster                                = 50,
		FreeBuff                                   = 51,
		AestheShopCourseMaster                     = 52,
		AestheShopPartsMaster                      = 53,
		AestheShopCharaParamRestrictionMaster      = 54,
		CostumeExtraColorMaster                    = 55,
		GuildRankMaster                            = 56,
		GuildRankUnlockMaster                      = 57,
		PaymentLimitMaster                         = 58,
		RmShopMaster                               = 59,
		PurchaseConditionMaster                    = 60,
		ShopItemSetMaster                          = 61,
		RoseOrbShopItemMaster                      = 62,
		CurrencyShopItemMaster                     = 63,
		CurrencyShopPurchaseLimitMaster            = 64,
		BPPtShopItemMaster                         = 65,
		BPPtShopPurchaseLimitMaster                = 66,
		BPPtExchangeMaster                         = 67,
		SeasonPassShopItemMaster                   = 68,
		SeasonPassShopPurchaseLimitMaster          = 69,
		MasterSeason                               = 70,
		MasterSeasonPass                           = 71,
		MasterSeasonPassReward                     = 72,
		WarehouseAbilityRecipesMaster              = 73,
		WarehouseAbilityCollectionMaster           = 74,
		WarehouseAbilityStoringMaster              = 75,
		WarehouseAbilityMissionMaster              = 76,
		WarehouseAbilityZoneMaster                 = 77,
		WarehouseAbilityProductionMaster           = 78,
		RewardBoostMissionMaster                   = 79,
		WarehouseAbilityTokenMaster                = 80,
		RewardBoostLiquidMemoryMaster              = 81,
		ResearchTeamMaster_CostTime                = 82,
		RaidBattleMaster                           = 83,
		DungeonEntryConditionMaster                = 84,
		InterruptQuestMaster                       = 85,
		CraftTokenMaster                           = 86,
		EventShopMaster                            = 87,
		EventShopItemMaster                        = 88,
		EventShopItemSetMaster                     = 89,
		EventShopRealGoodsMaster                   = 90,
		BattleScoreMaster                          = 91,
		CouponMasterData                           = 92,
		NetworkCafeBuffsMasterData                 = 93,
		EventEnemyDropMasterData                   = 94,
		MasterEventChallengeQuestDrop              = 95,
		SublevelLoad                               = 96,
		MasterVersionData                          = 97,
		InterruptQuestDestructibleObjectMasterData = 98,
		AdventureBoardParamMasterData              = 99,
		LiquidMemoryAccumulateTokenInfoMasterData  = 100,
		RecipeSetMaster                            = 101,
		AdventureBoardPanelParamMasterData         = 102,
		AdventureBoardMissionParamMasterData       = 103,
		CountryConfigMaster                        = 104,
		MasterFusionItem                           = 105,
		MasterSyntheAbilityPickup                  = 106,
		RankingReward                              = 107,
		HappyNappo                                 = 108,
		FeatureSetting                             = 109,
		DxBattleContributonScoreConefficient       = 110,
		DxBattleContributonScoreAttenuAtion        = 111,
		FusionCost                                 = 112,
		FusionTicket                               = 113,
		FusionAdjustment                           = 114,
		RandomTreasureBoxChest                     = 115,
		GameSettings                               = 116,
		AdventureCardDecoration                    = 117,
		MasterUploadImage                          = 118,
		Num                                        = 119,
		MAX                                        = 120
	};

	/**
	 * Enum SkyBlue.ESBFreeBuffPointHourType
	 */
	enum class ESBFreeBuffPointHourType : uint8_t
	{
		Daytime   = 0,
		Nighttime = 1,
		Alltime   = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBMatchingGameStateStatusType
	 */
	enum class ESBMatchingGameStateStatusType : uint8_t
	{
		Matching = 0,
		Canceled = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESBMatchingMenuCancelMatchResult
	 */
	enum class ESBMatchingMenuCancelMatchResult : uint8_t
	{
		Success        = 0,
		UnknownFailure = 1,
		NotLeader      = 2,
		MAX            = 3
	};

	/**
	 * Enum SkyBlue.ESBMatchingMenuStartMatchResult
	 */
	enum class ESBMatchingMenuStartMatchResult : uint8_t
	{
		Success        = 0,
		UnknownFailure = 1,
		NoContents     = 2,
		NotLeader      = 3,
		Unopened       = 4,
		Test_OnlyOne   = 5,
		MAX            = 6
	};

	/**
	 * Enum SkyBlue.EMoneyUIText
	 */
	enum class EMoneyUIText : uint8_t
	{
		None     = 0,
		Currency = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESBMountEffectType
	 */
	enum class ESBMountEffectType : uint8_t
	{
		Mount_Run       = 0,
		Mount_Walk      = 1,
		Mount_Wait      = 2,
		Mount_Dash      = 3,
		Mount_DashStart = 4,
		Default         = 5,
		MAX             = 6
	};

	/**
	 * Enum SkyBlue.ESBMovieSceneAkEventSwitchType
	 */
	enum class ESBMovieSceneAkEventSwitchType : uint8_t
	{
		Character_FloorType = 0,
		Character_Cloth     = 1,
		Language            = 2,
		MAX                 = 3
	};

	/**
	 * Enum SkyBlue.ESBMovieScenePlayerStatus
	 */
	enum class ESBMovieScenePlayerStatus : uint8_t
	{
		Stopped   = 0,
		Playing   = 1,
		Scrubbing = 2,
		Jumping   = 3,
		Stepping  = 4,
		Paused    = 5,
		MAX       = 6
	};

	/**
	 * Enum SkyBlue.ESBFireNotifiesAtPosition
	 */
	enum class ESBFireNotifiesAtPosition : uint8_t
	{
		AtStartOfEvaluation = 0,
		AtEndOfEvaluation   = 1,
		AfterSpawn          = 2,
		None                = 3,
		MAX                 = 4
	};

	/**
	 * Enum SkyBlue.ESBRootMotionType
	 */
	enum class ESBRootMotionType : uint8_t
	{
		Disable  = 0,
		Absolute = 1,
		Relative = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.ESBMovieSceneTextWindowGender
	 */
	enum class ESBMovieSceneTextWindowGender : uint8_t
	{
		TWG_None   = 0,
		TWG_Male   = 1,
		TWG_Female = 2,
		TWG_MAX    = 3
	};

	/**
	 * Enum SkyBlue.EMyCharacterWeaponSortType
	 */
	enum class EMyCharacterWeaponSortType : uint8_t
	{
		SortType_WeaponName   = 0,
		SortType_WeaponAura   = 1,
		SortType_WeaponRarity = 2,
		SortType_Max          = 3
	};

	/**
	 * Enum SkyBlue.ESBNameConventionsType
	 */
	enum class ESBNameConventionsType : uint8_t
	{
		Contains        = 0,
		StartsWith      = 1,
		EndsWith        = 2,
		MatchesWildcard = 3,
		MAX             = 4
	};

	/**
	 * Enum SkyBlue.NavigationTestingType
	 */
	enum class ENavigationTestingType : uint8_t
	{
		NavigationTestingTypePathFinding               = 0,
		NavigationTestingTypeRunAwayPathFinding        = 1,
		NavigationTestingTypeNavigationTestingType_MAX = 2
	};

	/**
	 * Enum SkyBlue.ESBNetworkCafeRewardType
	 */
	enum class ESBNetworkCafeRewardType : uint8_t
	{
		REWARD_TYPE_ITEM     = 0,
		REWARD_TYPE_TOKEN    = 1,
		REWARD_ITEM_TYPE_NUM = 2,
		REWARD_MAX           = 3
	};

	/**
	 * Enum SkyBlue.ENewMarkContentType
	 */
	enum class ENewMarkContentType : uint8_t
	{
		MyChara                        = 0,
		Inventory                      = 1,
		Library                        = 2,
		ItemCraft                      = 3,
		ImagineCraft                   = 4,
		QuestBoard                     = 5,
		SeasonPassMenu_New             = 6,
		WarehouseAbility               = 7,
		AdventureBoard                 = 8,
		QuestList                      = 9,
		SeasonPassMenu_End             = 10,
		SeasonPassMenu_ReceiveEnd      = 11,
		SeasonPassPurchaseMenu_New     = 12,
		SeasonPassPurchaseMenu_End     = 13,
		SeasonPassRankPurchaseMenu_New = 14,
		SeasonPassRankPurchaseMenu_End = 15,
		SeasonPassShopMenu_New         = 16,
		SeasonPassShopMenu_End         = 17,
		SeasonPassShopMenu_ReceiveEnd  = 18,
		BossIntroductionDemo           = 19,
		EventShop_Event                = 20,
		EventShop_Product              = 21,
		NewEquipment                   = 22,
		Mission                        = 23,
		AutoDeliveryQuest              = 24,
		Invalid                        = 25,
		FangExpedition                 = 26,
		MAX                            = 27
	};

	/**
	 * Enum SkyBlue.ESBNFTAreaState
	 */
	enum class ESBNFTAreaState : uint8_t
	{
		None  = 0,
		Start = 1,
		End   = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBNgWordTarget
	 */
	enum class ESBNgWordTarget : uint8_t
	{
		All  = 0,
		Name = 1,
		Text = 2,
		MAX  = 3
	};

	/**
	 * Enum SkyBlue.ENpcType
	 */
	enum class ENpcType : uint8_t
	{
		None            = 0,
		Shop            = 1,
		GatherPoint     = 2,
		WarpPoint       = 3,
		QuestBoard      = 4,
		DungeonEntrance = 5,
		MAX             = 6
	};

	/**
	 * Enum SkyBlue.ENpcState
	 */
	enum class ENpcState : uint8_t
	{
		Idle    = 0,
		Talk    = 1,
		Stagger = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBNpcLaneDirection
	 */
	enum class ESBNpcLaneDirection : uint8_t
	{
		BothWays    = 0,
		LeftToRight = 1,
		RightToLeft = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBNpcSpawnPointCharacterType
	 */
	enum class ESBNpcSpawnPointCharacterType : uint8_t
	{
		RandomAppearance = 0,
		CharaCreate      = 1,
		ExtraNPC         = 2,
		Animal           = 3,
		MAX              = 4
	};

	/**
	 * Enum SkyBlue.ESBNpcSpawnPriority
	 */
	enum class ESBNpcSpawnPriority : uint8_t
	{
		Low      = 0,
		High     = 1,
		OutRange = 2,
		Max      = 3
	};

	/**
	 * Enum SkyBlue.ESBNpcPathFindQueryFlag
	 */
	enum class ESBNpcPathFindQueryFlag : uint8_t
	{
		SearchName      = 0,
		SearchTarget    = 1,
		SearchDirection = 2,
		MAX             = 3
	};

	/**
	 * Enum SkyBlue.EPathTarget
	 */
	enum class EPathTarget : uint8_t
	{
		None = 0,
		MAX  = 1
	};

	/**
	 * Enum SkyBlue.EPathDirection
	 */
	enum class EPathDirection : uint8_t
	{
		OneWay  = 0,
		BothWay = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBNpcWaitType
	 */
	enum class ESBNpcWaitType : uint8_t
	{
		Wait         = 0,
		WaitShift    = 1,
		WaitShiftEnd = 2,
		MAX          = 3
	};

	/**
	 * Enum SkyBlue.ESBPreJoinSessionType
	 */
	enum class ESBPreJoinSessionType : uint8_t
	{
		First       = 0,
		DummyClient = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.EOrnamentEffectType
	 */
	enum class EOrnamentEffectType : uint8_t
	{
		Wait     = 0,
		Interact = 1,
		Default  = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.EOrnamentMaterialType
	 */
	enum class EOrnamentMaterialType : uint8_t
	{
		None = 0,
		MAX  = 1
	};

	/**
	 * Enum SkyBlue.EOrnamentColorType
	 */
	enum class EOrnamentColorType : uint8_t
	{
		Default     = 0,
		Red         = 1,
		Orange      = 2,
		Yellow      = 3,
		YellowGreen = 4,
		Green       = 5,
		LightBlue   = 6,
		Blue        = 7,
		Violet      = 8,
		Purple      = 9,
		RedPurple   = 10,
		Black       = 11,
		White       = 12,
		PureWhite   = 13,
		MAX         = 14
	};

	/**
	 * Enum SkyBlue.ESBOrnamentPlayerState
	 */
	enum class ESBOrnamentPlayerState : uint8_t
	{
		None   = 0,
		Manage = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBOrnamentManageState
	 */
	enum class ESBOrnamentManageState : uint8_t
	{
		None   = 0,
		Manage = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.EOutGameBuffSourceType
	 */
	enum class EOutGameBuffSourceType : uint8_t
	{
		None = 0,
		Item = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.EAddItemOpResult
	 */
	enum class EAddItemOpResult : uint8_t
	{
		Succeeded          = 0,
		Error_CapacityOver = 1,
		MAX                = 2
	};

	/**
	 * Enum SkyBlue.ESBStorageNumber
	 */
	enum class ESBStorageNumber : uint8_t
	{
		Inventory        = 0,
		DungeonBag       = 1,
		EquipmentBag     = 2,
		CharacterStorage = 3,
		AccountStorage   = 4,
		Unpossessed      = 5,
		Drop             = 6,
		OrnamentStorage  = 7,
		MAX              = 8
	};

	/**
	 * Enum SkyBlue.ESBMigrationInfoRequestResult
	 */
	enum class ESBMigrationInfoRequestResult : uint8_t
	{
		Success                      = 0,
		ArbitraryByLeader            = 1,
		UnknownFailure               = 2,
		GameServerNotFound           = 3,
		GameServerReservationFailure = 4,
		MAX                          = 5
	};

	/**
	 * Enum SkyBlue.ESBSendPartyInvitationRequestCompleteResult
	 */
	enum class ESBSendPartyInvitationRequestCompleteResult : uint8_t
	{
		Success            = 0,
		UnknownFailure     = 1,
		InParty            = 2,
		BuildingParty      = 3,
		PlayingDemo        = 4,
		InInstance         = 5,
		Busy               = 6,
		PlayInterruptQuest = 7,
		MAX                = 8
	};

	/**
	 * Enum SkyBlue.ESBBerserkerConsumeComboTiming
	 */
	enum class ESBBerserkerConsumeComboTiming : uint8_t
	{
		None       = 0,
		StartSkill = 1,
		CastSkill  = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBPerformanceCameraLocationOffsetRotation
	 */
	enum class ESBPerformanceCameraLocationOffsetRotation : uint8_t
	{
		None             = 0,
		Player           = 1,
		WatchLocationDir = 2,
		MAX              = 3
	};

	/**
	 * Enum SkyBlue.ESBPerformanceCameraLocationBase
	 */
	enum class ESBPerformanceCameraLocationBase : uint8_t
	{
		None       = 0,
		WatchPoint = 1,
		Player     = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBPerformanceCameraWatchPointBase
	 */
	enum class ESBPerformanceCameraWatchPointBase : uint8_t
	{
		None               = 0,
		Player             = 1,
		Target             = 2,
		InteractionInfo    = 3,
		JointGestureTarget = 4,
		HoldHand           = 5,
		MGC_Meteor         = 6,
		MAX                = 7
	};

	/**
	 * Enum SkyBlue.ESBPerformanceCameraPlayType
	 */
	enum class ESBPerformanceCameraPlayType : uint8_t
	{
		None      = 0,
		Immediate = 1,
		Reserve   = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBPerformanceCameraType
	 */
	enum class ESBPerformanceCameraType : uint8_t
	{
		Default = 0,
		ULT     = 1,
		Enemy   = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.EPhotoMode
	 */
	enum class EPhotoMode : uint8_t
	{
		None             = 0,
		Image_Upload_Max = 1,
		Image_Lock_Max   = 2,
		MAX              = 3
	};

	/**
	 * Enum SkyBlue.ESBPineVillageLeaguesType
	 */
	enum class ESBPineVillageLeaguesType : uint8_t
	{
		AAA = 0,
		AA  = 1,
		A   = 2,
		B   = 3,
		C   = 4,
		D   = 5,
		E   = 6,
		F   = 7,
		Num = 8,
		MAX = 9
	};

	/**
	 * Enum SkyBlue.ESBAdminHideStatus
	 */
	enum class ESBAdminHideStatus : uint8_t
	{
		None  = 0,
		Hide  = 1,
		SHide = 2,
		Max   = 3
	};

	/**
	 * Enum SkyBlue.ESBAutoDeliveryQuestUpdateStatus
	 */
	enum class ESBAutoDeliveryQuestUpdateStatus : uint8_t
	{
		Idle      = 0,
		Requested = 1,
		Updated   = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESBSkillElementIconType
	 */
	enum class ESBSkillElementIconType : uint8_t
	{
		None     = 0,
		Fire     = 1,
		Ice      = 2,
		Thunder  = 3,
		Earth    = 4,
		Light    = 5,
		Darkness = 6,
		MAX      = 7
	};

	/**
	 * Enum SkyBlue.ESBSkillIconBgType
	 */
	enum class ESBSkillIconBgType : uint8_t
	{
		None        = 0,
		Attack      = 1,
		Heal        = 2,
		Buf         = 3,
		Debuf       = 4,
		AttackHeal  = 5,
		AttackBuf   = 6,
		AttackDebuf = 7,
		HealBuf     = 8,
		HealDebuf   = 9,
		BufDebuf    = 10,
		MAX         = 11
	};

	/**
	 * Enum SkyBlue.EChatPropertyItemType
	 */
	enum class EChatPropertyItemType : uint8_t
	{
		Stamp                    = 0,
		Emote                    = 1,
		ChatPropertyItemType_Num = 2,
		MAX                      = 3
	};

	/**
	 * Enum SkyBlue.ESBChatOnlineStatus
	 */
	enum class ESBChatOnlineStatus : uint8_t
	{
		Status_Offline = 0,
		Status_Mission = 1,
		Status_None    = 2,
		Status_Online  = 3,
		Status_MAX     = 4
	};

	/**
	 * Enum SkyBlue.EToggleLookDirection
	 */
	enum class EToggleLookDirection : uint8_t
	{
		Up    = 0,
		Down  = 1,
		Left  = 2,
		Right = 3,
		MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBPlayerDamageUpType
	 */
	enum class ESBPlayerDamageUpType : uint8_t
	{
		Damage              = 0,
		HealDamage          = 1,
		DamageAndHealDamage = 2,
		MAX                 = 3
	};

	/**
	 * Enum SkyBlue.ESBFieldActorExeWebAPI
	 */
	enum class ESBFieldActorExeWebAPI : uint8_t
	{
		SavedFieldActorPoint         = 0,
		SetFlagFieldActorPoint       = 1,
		SavedFieldActorFreeBuffPoint = 2,
		SavedDirectTreasureBox       = 3,
		SavedEmoteGimmick            = 4,
		ResetRespawnTimeByCity       = 5,
		MAX                          = 6
	};

	/**
	 * Enum SkyBlue.ESBFieldActorInteractPoint
	 */
	enum class ESBFieldActorInteractPoint : uint8_t
	{
		GatherPoint       = 0,
		TreasureBox       = 1,
		FreeBuffPoint     = 2,
		DirectTreasureBox = 3,
		MAX               = 4
	};

	/**
	 * Enum SkyBlue.EPlayerFishingState
	 */
	enum class EPlayerFishingState : uint8_t
	{
		None          = 0,
		Walk          = 1,
		Wait          = 2,
		Casting       = 3,
		Fishing       = 4,
		FishingPullUp = 5,
		Success       = 6,
		Miss          = 7,
		Exit          = 8,
		Max           = 9
	};

	/**
	 * Enum SkyBlue.ESBHoldHandResponse
	 */
	enum class ESBHoldHandResponse : uint8_t
	{
		None                     = 0,
		SentRequest              = 1,
		CanFollow                = 2,
		HoldHandSuccess          = 3,
		Error                    = 4,
		Unknown                  = 5,
		InvalidState             = 6,
		InvalidOwner             = 7,
		InvalidTarget            = 8,
		TargetAlreadyHoldingHand = 9,
		InvalidLead              = 10,
		MAX                      = 11
	};

	/**
	 * Enum SkyBlue.ESBInteractionSearchPriorityAdditional
	 */
	enum class ESBInteractionSearchPriorityAdditional : uint8_t
	{
		NotSearchInCity = 0,
		IsSitAction     = 1,
		MAX             = 2
	};

	/**
	 * Enum SkyBlue.ESBPlayerClassCommonParam
	 */
	enum class ESBPlayerClassCommonParam : uint8_t
	{
		None                                    = 0,
		AutoSheatheTime                         = 1,
		ComboKeepTime                           = 2,
		ComboCountMax                           = 3,
		CommandInputTime                        = 4,
		CommandInputTime_Short                  = 5,
		CommandInputTime_Long                   = 6,
		SkillPreInputHoldTime                   = 7,
		SkillPreInputActiveTime                 = 8,
		SkillPreInputLaunchWaitTime             = 9,
		SkillPreInputMoveDirectionUpdatableTime = 10,
		AimAngleReplicateTime                   = 11,
		ResurrectionTime                        = 12,
		ResurrectionSubtractTime                = 13,
		ResurrectionMaxHPDecreaseRate           = 14,
		ResurrectionMaxHPDecreaseMin            = 15,
		RayCheckForPlayerReticle                = 16,
		MinMoveInput                            = 17,
		CityCapsuleRadius                       = 18,
		SpawnEffectWaitTime                     = 19,
		DashInputAutoSheatheTime                = 20,
		DashStartEffectDashTime                 = 21,
		ControlCameraByMoveInputTime            = 22,
		PerformanceCameraCancelLookInput        = 23,
		MashingInputInterval                    = 24,
		AerialActionTransTimeLimit              = 25,
		AerialInputToleranceTime                = 26,
		BackHitStunLevel                        = 27,
		PlayerNumLimitHeightCompressThreshold   = 28,
		PlayerNumLimitHeightCompressPower       = 29,
		Max                                     = 30
	};

	/**
	 * Enum SkyBlue.EMeshClimbingState
	 */
	enum class EMeshClimbingState : uint8_t
	{
		MeshClimbing_None                 = 0,
		MeshClimbing_Start_ParamSet       = 1,
		MeshClimbing_Start_MoveRootMotion = 2,
		MeshClimbing_Start_SafeMove       = 3,
		MeshClimbing_BetweenPoints        = 4,
		MeshClimbing_AtPoint              = 5,
		MeshClimbing_Drop                 = 6,
		MeshClimbing_Clamber              = 7,
		MeshClimbing_MAX                  = 8
	};

	/**
	 * Enum SkyBlue.ESBTurnPlayerActorDirection
	 */
	enum class ESBTurnPlayerActorDirection : uint8_t
	{
		None  = 0,
		Left  = 1,
		Right = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBTurnPlayerActorType
	 */
	enum class ESBTurnPlayerActorType : uint8_t
	{
		None                  = 0,
		UnsheatheMove         = 1,
		CurveMove             = 2,
		Camera                = 3,
		CameraBySpecialKey    = 4,
		TargetComponent       = 5,
		LockonTargetComponent = 6,
		Location              = 7,
		SkillMarker           = 8,
		InteractionTarget     = 9,
		EmoteTarget           = 10,
		JointGestureTarget    = 11,
		GuardDirection        = 12,
		MoveInput             = 13,
		RBL_ShieldDash        = 14,
		MAX                   = 15
	};

	/**
	 * Enum SkyBlue.ESBPassiveStatusParamCalcType
	 */
	enum class ESBPassiveStatusParamCalcType : uint8_t
	{
		None         = 0,
		Add          = 1,
		Percent      = 2,
		FinalPercent = 3,
		MAX          = 4
	};

	/**
	 * Enum SkyBlue.ESBPassiveArtsModifyCategory
	 */
	enum class ESBPassiveArtsModifyCategory : uint8_t
	{
		None                         = 0,
		STR                          = 1,
		VIT                          = 2,
		DEX                          = 3,
		MND                          = 4,
		INT                          = 5,
		BaseStatusAll                = 6,
		HP                           = 7,
		Attack                       = 8,
		Defense                      = 9,
		RecoveryPower                = 10,
		CriticalRate                 = 11,
		StaminaMax                   = 12,
		ConsumeStaminaAtDash         = 13,
		ConsumeStaminaAtDodge        = 14,
		ConsumeStaminaAtDashAndJump  = 15,
		ConsumeStaminaAtJumpAndDodge = 16,
		SkillRecastZeroRate          = 17,
		SpecialArtsRecast            = 18,
		DodgeDistance                = 19,
		GiveResurrectionSpeed        = 20,
		ResurrectedHP                = 21,
		ResurrectTargetHP            = 22,
		GiveHealAmount               = 23,
		BSK_IncComboGauge            = 24,
		BSK_MaxComboGaugeBonus       = 25,
		HealTypeItemRecast           = 26,
		ItemHPHealAmount             = 27,
		AerialGiveDamage             = 28,
		WeakPointDamageRate          = 29,
		HPRateDamageRate             = 30,
		DamageRateByAttackSkillCount = 31,
		DamageHateMagnification      = 32,
		MoveSpeedTargeted            = 33,
		DamageDownTargeted           = 34,
		ElementAttackPower_Fire      = 35,
		ElementAttackPower_Ice       = 36,
		ElementAttackPower_Thunder   = 37,
		ElementAttackPower_Earth     = 38,
		ElementAttackPower_Light     = 39,
		ElementAttackPower_Darkness  = 40,
		MAX                          = 41
	};

	/**
	 * Enum SkyBlue.ESBPhotoModeStartState
	 */
	enum class ESBPhotoModeStartState : uint8_t
	{
		Unknown     = 0,
		Interaction = 1,
		CantInput   = 2,
		Shielding   = 3,
		CanStart    = 4,
		MAX         = 5
	};

	/**
	 * Enum SkyBlue.ESBPlayerCostumePresetEquipItem
	 */
	enum class ESBPlayerCostumePresetEquipItem : uint8_t
	{
		Hat         = 0,
		Upper       = 1,
		Gloves      = 2,
		Lower       = 3,
		Shoes       = 4,
		Accessory   = 5,
		Accessory01 = 6,
		Accessory02 = 7,
		Max         = 8,
		None        = 9
	};

	/**
	 * Enum SkyBlue.ESBPlayerBattlePresetEquipItem
	 */
	enum class ESBPlayerBattlePresetEquipItem : uint8_t
	{
		Weapon             = 0,
		ClassSkill         = 1,
		ClassSkill01       = 2,
		ClassSkill02       = 3,
		ClassSkill03       = 4,
		ClassSkill04       = 5,
		ClassSkill05       = 6,
		ClassSkill06       = 7,
		ClassSkill07       = 8,
		Ability            = 9,
		Ability01          = 10,
		CommonAbility      = 11,
		CommonAbility01    = 12,
		BattleImagen       = 13,
		BattleImagen01     = 14,
		AttachmentHead     = 15,
		AttachmentRightArm = 16,
		AttachmentLeftArm  = 17,
		AttachmentRightLeg = 18,
		AttachmentLeftLeg  = 19,
		Max                = 20,
		None               = 21
	};

	/**
	 * Enum SkyBlue.ESBPlayerPresetEquipItem
	 */
	enum class ESBPlayerPresetEquipItem : uint8_t
	{
		BatttleWeapon             = 0,
		BatttleClassSkill         = 1,
		BatttleClassSkill01       = 2,
		BatttleClassSkill02       = 3,
		BatttleClassSkill03       = 4,
		BatttleClassSkill04       = 5,
		BatttleClassSkill05       = 6,
		BatttleClassSkill06       = 7,
		BatttleClassSkill07       = 8,
		BatttleAbility            = 9,
		BatttleAbility01          = 10,
		BatttleCommonAbility      = 11,
		BatttleCommonAbility01    = 12,
		BatttleBattleImagen       = 13,
		BatttleBattleImagen01     = 14,
		BatttleAttachmentHead     = 15,
		BatttleAttachmentRightArm = 16,
		BatttleAttachmentLeftArm  = 17,
		BatttleAttachmentRightLeg = 18,
		BatttleAttachmentLeftLeg  = 19,
		CostumeHat                = 20,
		CostumeUpper              = 21,
		CostumeGloves             = 22,
		CostumeLower              = 23,
		CostumeShoes              = 24,
		CostumeAccessory          = 25,
		CostumeAccessory01        = 26,
		CostumeAccessory02        = 27,
		Max                       = 28,
		None                      = 29
	};

	/**
	 * Enum SkyBlue.ESBPlayerPresetCarryFilterType
	 */
	enum class ESBPlayerPresetCarryFilterType : uint8_t
	{
		ItemBag = 0,
		Storage = 1,
		MAX     = 2
	};

	/**
	 * Enum SkyBlue.ESBPlayerPresetFunction
	 */
	enum class ESBPlayerPresetFunction : uint8_t
	{
		Rename  = 0,
		Equip   = 1,
		Save    = 2,
		Setting = 3,
		Clear   = 4,
		TakeOut = 5,
		Max     = 6
	};

	/**
	 * Enum SkyBlue.ESBResurrectionInteractState
	 */
	enum class ESBResurrectionInteractState : uint8_t
	{
		None  = 0,
		Start = 1,
		Exec  = 2,
		End   = 3,
		MAX   = 4
	};

	/**
	 * Enum SkyBlue.ESBRewardBoostFangExpeditionType
	 */
	enum class ESBRewardBoostFangExpeditionType : uint8_t
	{
		None  = 0,
		Fixed = 1,
		Ratio = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBShortPinType
	 */
	enum class ESBShortPinType : uint8_t
	{
		Ground = 0,
		Enemy  = 1,
		Player = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBSpecialAnimState
	 */
	enum class ESBSpecialAnimState : uint8_t
	{
		None    = 0,
		Exec    = 1,
		Success = 2,
		Cancel  = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBRequestSpecialSkillReason
	 */
	enum class ESBRequestSpecialSkillReason : uint8_t
	{
		OK                = 0,
		NotOwner          = 1,
		NotAuthority      = 2,
		NotFullGauge      = 3,
		NotHaveBattleComp = 4,
		BadCondition      = 5,
		MAX               = 6
	};

	/**
	 * Enum SkyBlue.ESBPlayerStartType
	 */
	enum class ESBPlayerStartType : uint8_t
	{
		Unknown        = 0,
		FieldMove      = 1,
		WarpPoint      = 2,
		DungeonExit    = 3,
		LocalWarpPoint = 4,
		EventPoint     = 5,
		MAX            = 6
	};

	/**
	 * Enum SkyBlue.ESBPlayerStatusTravelType
	 */
	enum class ESBPlayerStatusTravelType : uint8_t
	{
		MapTravel        = 0,
		SelfRespawn      = 1,
		Resurrection     = 2,
		FieldDeadRespawn = 3,
		MAX              = 4
	};

	/**
	 * Enum SkyBlue.ESBEnableTarget
	 */
	enum class ESBEnableTarget : uint8_t
	{
		Enable                = 0,
		Disable_Invald        = 1,
		Disable_AutoTarget    = 2,
		Disable_MultiTarget   = 3,
		Disable_LockOn        = 4,
		Disable_Self          = 5,
		Disable_NonTargetable = 6,
		Disable_Dead          = 7,
		Disable_CanAttack     = 8,
		Disable_Range         = 9,
		Disable_Block         = 10,
		Disable_Destructed    = 11,
		MAX                   = 12
	};

	/**
	 * Enum SkyBlue.ETargetState
	 */
	enum class ETargetState : uint8_t
	{
		TargetState_None          = 0,
		TargetState_Auto          = 1,
		TargetState_Multi         = 2,
		TargetState_LockOn        = 3,
		TargetState_LockOnSuspend = 4,
		TargetState_MAX           = 5
	};

	/**
	 * Enum SkyBlue.ESBPlayerContentActionType
	 */
	enum class ESBPlayerContentActionType : uint8_t
	{
		None                                = 0,
		Break1                              = 1,
		AbsoluteDefense                     = 2,
		Break2                              = 3,
		ProjectileReflectionAbsoluteDefense = 4,
		Max                                 = 5
	};

	/**
	 * Enum SkyBlue.ESBTSkillStepInputDirection
	 */
	enum class ESBTSkillStepInputDirection : uint8_t
	{
		None  = 0,
		Front = 1,
		Back  = 2,
		Right = 3,
		Left  = 4,
		MAX   = 5
	};

	/**
	 * Enum SkyBlue.ESBPlayerTransformCharacter
	 */
	enum class ESBPlayerTransformCharacter : uint8_t
	{
		None  = 0,
		Nappo = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.ESBAttackType
	 */
	enum class ESBAttackType : uint8_t
	{
		Attack_Light        = 0,
		Attack_LightSpecial = 1,
		Attack_High         = 2,
		Attack_HighSpecial  = 3,
		Attack_Num          = 4,
		Attack_MAX          = 5
	};

	/**
	 * Enum SkyBlue.ESBDisappearEffectType
	 */
	enum class ESBDisappearEffectType : uint8_t
	{
		None         = 0,
		Warp         = 1,
		Death        = 2,
		FallDeath    = 3,
		EngramCannon = 4,
		MAX          = 5
	};

	/**
	 * Enum SkyBlue.ESBMoveInputDirection
	 */
	enum class ESBMoveInputDirection : uint8_t
	{
		None    = 0,
		Front   = 1,
		Right   = 2,
		Left    = 3,
		Back    = 4,
		Neutral = 5,
		MAX     = 6
	};

	/**
	 * Enum SkyBlue.EActionSwitchType
	 */
	enum class EActionSwitchType : uint8_t
	{
		None   = 0,
		Hold   = 1,
		Toggle = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.EPlayerActionTagRange
	 */
	enum class EPlayerActionTagRange : uint8_t
	{
		ATRange_None  = 0,
		ATRange_Short = 1,
		ATRange_Long  = 2,
		ATRange_Num   = 3,
		ATRange_MAX   = 4
	};

	/**
	 * Enum SkyBlue.EPlayerActionTagPower
	 */
	enum class EPlayerActionTagPower : uint8_t
	{
		ATPower_None  = 0,
		ATPower_Light = 1,
		ATPower_High  = 2,
		ATPower_Num   = 3,
		ATPower_MAX   = 4
	};

	/**
	 * Enum SkyBlue.EPlayerActionTagTarget
	 */
	enum class EPlayerActionTagTarget : uint8_t
	{
		ATTarget_None   = 0,
		ATTarget_Single = 1,
		ATTarget_Multi  = 2,
		ATTarget_Num    = 3,
		ATTarget_MAX    = 4
	};

	/**
	 * Enum SkyBlue.EPlayerActionTagType
	 */
	enum class EPlayerActionTagType : uint8_t
	{
		ATType_None    = 0,
		ATType_Damage  = 1,
		ATType_Healing = 2,
		ATType_Support = 3,
		ATType_Num     = 4,
		ATType_MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBPlayerListStatus
	 */
	enum class ESBPlayerListStatus : uint8_t
	{
		Offline   = 0,
		OnMission = 1,
		OnParty   = 2,
		Online    = 3,
		Max       = 4
	};

	/**
	 * Enum SkyBlue.ESBPlayerPassiveArtsSlotType
	 */
	enum class ESBPlayerPassiveArtsSlotType : uint8_t
	{
		Slot1              = 0,
		Slot2              = 1,
		Slot3              = 2,
		Slot4              = 3,
		Max                = 4,
		EquippableLimitNum = 5
	};

	/**
	 * Enum SkyBlue.ESBPlayerActiveArtsSlotType
	 */
	enum class ESBPlayerActiveArtsSlotType : uint8_t
	{
		Slot1 = 0,
		Slot2 = 1,
		Slot3 = 2,
		Slot4 = 3,
		Slot5 = 4,
		Slot6 = 5,
		Slot7 = 6,
		Slot8 = 7,
		Max   = 8
	};

	/**
	 * Enum SkyBlue.ESBPlayerClassBattleRange
	 */
	enum class ESBPlayerClassBattleRange : uint8_t
	{
		None       = 0,
		ShortRange = 1,
		LongRange  = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBVirtualDateTimeParam
	 */
	enum class ESBVirtualDateTimeParam : uint8_t
	{
		Now_Year   = 0,
		Now_Month  = 1,
		Now_Day    = 2,
		Now_Hour   = 3,
		Now_Minute = 4,
		Now_Second = 5,
		Vtl_Year   = 6,
		Vtl_Month  = 7,
		Vtl_Day    = 8,
		Vtl_Hour   = 9,
		Vtl_Minute = 10,
		Vtl_Second = 11,
		Vts_Year   = 12,
		Vts_Month  = 13,
		Vts_Day    = 14,
		Vts_Hour   = 15,
		Vts_Minute = 16,
		Vts_Second = 17,
		MAX        = 18
	};

	/**
	 * Enum SkyBlue.ESBPlayRateSwitch
	 */
	enum class ESBPlayRateSwitch : uint8_t
	{
		Continue = 0,
		Variable = 1,
		Normal   = 2,
		Toggle   = 3,
		MAX      = 4
	};

	/**
	 * Enum SkyBlue.ESBPnQuestBoardCompleteType
	 */
	enum class ESBPnQuestBoardCompleteType : uint8_t
	{
		Max = 0
	};

	/**
	 * Enum SkyBlue.ESBFriendStatusType
	 */
	enum class ESBFriendStatusType : uint8_t
	{
		None      = 0,
		Requested = 1,
		Friend    = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.EProjectileRootCharacterCategory
	 */
	enum class EProjectileRootCharacterCategory : uint8_t
	{
		PLAYER_CONTROL          = 0,
		PLAYER_REMOTE_PARTY_IN  = 1,
		PLAYER_REMOTE_PARTY_OUT = 2,
		ENEMY_ACTIVE            = 3,
		ENEMY_NONACTIVE         = 4,
		MAX                     = 5
	};

	/**
	 * Enum SkyBlue.ESBProjectileBDFRotType
	 */
	enum class ESBProjectileBDFRotType : uint8_t
	{
		Front = 0,
		Back  = 1,
		Right = 2,
		Left  = 3,
		MAX   = 4
	};

	/**
	 * Enum SkyBlue.EProjectileAreaAttackSpawnOrder
	 */
	enum class EProjectileAreaAttackSpawnOrder : uint8_t
	{
		Random = 0,
		Near   = 1,
		Far    = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.FProjectileBeamDirection
	 */
	enum class EFProjectileBeamDirection : uint8_t
	{
		FProjectileBeamDirectionActorRotation                = 0,
		FProjectileBeamDirectionPlayerReticle                = 1,
		FProjectileBeamDirectionFProjectileBeamDirection_MAX = 2
	};

	/**
	 * Enum SkyBlue.FProjectilePartyShotTargetType
	 */
	enum class EFProjectilePartyShotTargetType : uint8_t
	{
		FProjectilePartyShotTargetTypeLimitedPartyMember                 = 0,
		FProjectilePartyShotTargetTypeAllPartyMember                     = 1,
		FProjectilePartyShotTargetTypeOnlyMyself                         = 2,
		FProjectilePartyShotTargetTypeFProjectilePartyShotTargetType_MAX = 3
	};

	/**
	 * Enum SkyBlue.ECollisionOnOff
	 */
	enum class ECollisionOnOff : uint8_t
	{
		On  = 0,
		Off = 1,
		MAX = 2
	};

	/**
	 * Enum SkyBlue.EStatusTargetSide
	 */
	enum class EStatusTargetSide : uint8_t
	{
		All         = 0,
		OnlyHostile = 1,
		OnlyFriend  = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.EProjectileShareGroup
	 */
	enum class EProjectileShareGroup : uint8_t
	{
		None   = 0,
		Group1 = 1,
		Group2 = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.EProjectileShareHitKey
	 */
	enum class EProjectileShareHitKey : uint8_t
	{
		Instigator = 0,
		Spawner    = 1,
		MAX        = 2
	};

	/**
	 * Enum SkyBlue.EProjectileEffectType
	 */
	enum class EProjectileEffectType : uint8_t
	{
		Hit            = 0,
		GroundHit      = 1,
		Muzzle         = 2,
		SelfDead       = 3,
		ShieldHit      = 4,
		DurabilityZero = 5,
		MAX            = 6
	};

	/**
	 * Enum SkyBlue.ESBProjectileBeamDirectingType
	 */
	enum class ESBProjectileBeamDirectingType : uint8_t
	{
		BeamModule = 0,
		UnitExtend = 1,
		MAX        = 2
	};

	/**
	 * Enum SkyBlue.ESelfDeadEffectSpawnRotType
	 */
	enum class ESelfDeadEffectSpawnRotType : uint8_t
	{
		None          = 0,
		ProjectileDir = 1,
		TargetDir     = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.EMuzzleEffectSpawnRotType
	 */
	enum class EMuzzleEffectSpawnRotType : uint8_t
	{
		ProjectileDir = 0,
		TargetDir     = 1,
		Inventory0    = 2,
		Inventory1    = 3,
		Instigator    = 4,
		MAX           = 5
	};

	/**
	 * Enum SkyBlue.EMuzzleEffectSpawnPosType
	 */
	enum class EMuzzleEffectSpawnPosType : uint8_t
	{
		SpawnPos   = 0,
		Inventory0 = 1,
		Inventory1 = 2,
		Instigator = 3,
		MAX        = 4
	};

	/**
	 * Enum SkyBlue.EHitEffectSpawnRotType
	 */
	enum class EHitEffectSpawnRotType : uint8_t
	{
		None                   = 0,
		ActorRotation          = 1,
		HitActorRotation       = 2,
		HitActorNormal         = 3,
		HitActorSocketRotation = 4,
		MAX                    = 5
	};

	/**
	 * Enum SkyBlue.EHitEffectSpawnPosType
	 */
	enum class EHitEffectSpawnPosType : uint8_t
	{
		HitPosition        = 0,
		SocketPosition     = 1,
		ActorPosition      = 2,
		InstigatorPosition = 3,
		MAX                = 4
	};

	/**
	 * Enum SkyBlue.ESBProjectileEffectVisibleType
	 */
	enum class ESBProjectileEffectVisibleType : uint8_t
	{
		Battle_Production        = 0,
		Battle_MarkerAttack      = 1,
		Battle_MarkerHeal        = 2,
		Battle_Projectile        = 3,
		Battle_ULTProjectile     = 4,
		Battle_GimmickProjectile = 5,
		Default                  = 6,
		MAX                      = 7
	};

	/**
	 * Enum SkyBlue.ESBProjectileCompTickType
	 */
	enum class ESBProjectileCompTickType : uint8_t
	{
		AuthorityOnly      = 0,
		ExcludeServer      = 1,
		ServerAndClient    = 2,
		NotServerAndClient = 3,
		Default            = 4,
		MAX                = 5
	};

	/**
	 * Enum SkyBlue.EFollowRotType
	 */
	enum class EFollowRotType : uint8_t
	{
		SameAttachActor         = 0,
		SameAttachActorNotPitch = 1,
		ToAttackTarget          = 2,
		ToAttackTargetNotPitch  = 3,
		MAX                     = 4
	};

	/**
	 * Enum SkyBlue.EProjectileForecastState
	 */
	enum class EProjectileForecastState : uint8_t
	{
		None         = 0,
		WaitForecast = 1,
		Forecast     = 2,
		WaitMain     = 3,
		Main         = 4,
		End          = 5,
		MAX          = 6
	};

	/**
	 * Enum SkyBlue.ESBProjectileSplashSize
	 */
	enum class ESBProjectileSplashSize : uint8_t
	{
		Small = 0,
		Big   = 1,
		NONE  = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBShapeSoundType
	 */
	enum class ESBShapeSoundType : uint8_t
	{
		None   = 0,
		Line   = 1,
		Circle = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.EProjectileEffectAttachTargetType
	 */
	enum class EProjectileEffectAttachTargetType : uint8_t
	{
		Owner = 0,
		Mesh  = 1,
		MAX   = 2
	};

	/**
	 * Enum SkyBlue.ESBTargetChangRule
	 */
	enum class ESBTargetChangRule : uint8_t
	{
		NoTargetChange = 0,
		Sequence       = 1,
		Ramdom         = 2,
		MAX            = 3
	};

	/**
	 * Enum SkyBlue.ESBTargetSelectRule
	 */
	enum class ESBTargetSelectRule : uint8_t
	{
		OnlyFirstTarget         = 0,
		SeqOneFireChangeTarget  = 1,
		SeqRapidNumChagneTarget = 2,
		MAX                     = 3
	};

	/**
	 * Enum SkyBlue.ESBProjectileMeshCollisionType
	 */
	enum class ESBProjectileMeshCollisionType : uint8_t
	{
		Cylinder = 0,
		Custom   = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESBProjectileCollisionSpecificGroup
	 */
	enum class ESBProjectileCollisionSpecificGroup : uint8_t
	{
		None    = 0,
		Group01 = 1,
		Group02 = 2,
		Group03 = 3,
		Group04 = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESBProjectileCollisionSpecificUseType
	 */
	enum class ESBProjectileCollisionSpecificUseType : uint8_t
	{
		Default              = 0,
		UseAsAttackCollision = 1,
		UseAsDamageCollision = 2,
		MAX                  = 3
	};

	/**
	 * Enum SkyBlue.EProjectileChargeLevel
	 */
	enum class EProjectileChargeLevel : uint8_t
	{
		Level0 = 0,
		Level1 = 1,
		Level2 = 2,
		Level3 = 3,
		Num    = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.EProjectileOrderedChainType
	 */
	enum class EProjectileOrderedChainType : uint8_t
	{
		ChainNoHitPoint    = 0,
		ChainProjectileHit = 1,
		MAX                = 2
	};

	/**
	 * Enum SkyBlue.EProjectileHitChainChangeTarget
	 */
	enum class EProjectileHitChainChangeTarget : uint8_t
	{
		InheritanceTarget = 0,
		ChangeInvoker     = 1,
		MAX               = 2
	};

	/**
	 * Enum SkyBlue.EProjectileBaseDir
	 */
	enum class EProjectileBaseDir : uint8_t
	{
		OwnerRotation      = 0,
		InstigatorRotation = 1,
		SpawnerRotation    = 2,
		MAX                = 3
	};

	/**
	 * Enum SkyBlue.ESBProjectileHitResult
	 */
	enum class ESBProjectileHitResult : uint8_t
	{
		Success          = 0,
		Success_Simulate = 1,
		Failed           = 2,
		Failed_Avoid     = 3,
		MAX              = 4
	};

	/**
	 * Enum SkyBlue.EProjectileNonTargetAction
	 */
	enum class EProjectileNonTargetAction : uint8_t
	{
		InvokerFront        = 0,
		ScreenViewDirection = 1,
		MAX                 = 2
	};

	/**
	 * Enum SkyBlue.EProjectileAttachTarget
	 */
	enum class EProjectileAttachTarget : uint8_t
	{
		None    = 0,
		Invoker = 1,
		Target  = 2,
		Spawner = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.EProjectileDirection
	 */
	enum class EProjectileDirection : uint8_t
	{
		AutoSetDirection    = 0,
		TargetDirection     = 1,
		ProjectileDirection = 2,
		SocketDirection     = 3,
		ScreenViewDirection = 4,
		BySystem            = 5,
		MAX                 = 6
	};

	/**
	 * Enum SkyBlue.ESpawnRotType
	 */
	enum class ESpawnRotType : uint8_t
	{
		FaceTarget          = 0,
		SameOwner           = 1,
		SameSocket          = 2,
		InheritanceSpawnPos = 3,
		AttackDirection     = 4,
		Up                  = 5,
		Down                = 6,
		None                = 7,
		MAX                 = 8
	};

	/**
	 * Enum SkyBlue.EProjectileHitActorType
	 */
	enum class EProjectileHitActorType : uint8_t
	{
		None     = 0,
		SBPlayer = 1,
		SBEnemy  = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.EProjectileHitRelative
	 */
	enum class EProjectileHitRelative : uint8_t
	{
		Unknown = 0,
		Hostile = 1,
		Friend  = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.EProjectileChangeDamage
	 */
	enum class EProjectileChangeDamage : uint8_t
	{
		None         = 0,
		HitActorType = 1,
		MAX          = 2
	};

	/**
	 * Enum SkyBlue.EReceiveDamageSide
	 */
	enum class EReceiveDamageSide : uint8_t
	{
		None                  = 0,
		SelfIncludeProjectile = 1,
		MAX                   = 2
	};

	/**
	 * Enum SkyBlue.EDamageSide
	 */
	enum class EDamageSide : uint8_t
	{
		OnlyHostile        = 0,
		OnlyFriend         = 1,
		OnlyTargetHostile  = 2,
		OnlyTargetFriend   = 3,
		OnlyEnemyCharacter = 4,
		Self               = 5,
		All                = 6,
		MAX                = 7
	};

	/**
	 * Enum SkyBlue.EDamageType
	 */
	enum class EDamageType : uint8_t
	{
		None                              = 0,
		HPDamage                          = 1,
		HPRecovery                        = 2,
		DEPRECATED_HPDamageMPRecovery     = 3,
		DEPRECATED_HPDamageMPRateRecovery = 4,
		HPFixDamage                       = 5,
		HPFixRateDamage                   = 6,
		HPFixRecovery                     = 7,
		HPFixRateRecovery                 = 8,
		DEPRECATED_Resurrection           = 9,
		DEPRECATED_PerfectResurrection    = 10,
		MPRecovery                        = 11,
		SYS_HPFixDamage                   = 12,
		SYS_HPFixRateDamage               = 13,
		SYS_HPFixRecovery                 = 14,
		SYS_HPFixRateRecovery             = 15,
		NUM                               = 16,
		MAX                               = 17
	};

	/**
	 * Enum SkyBlue.ESpawnType
	 */
	enum class ESpawnType : uint8_t
	{
		ActorSocket               = 0,
		ActorRoot                 = 1,
		ActorRootOffsetScreenView = 2,
		SpawnerSocket             = 3,
		SpawnerRootOffsetPosOnDir = 4,
		SpawnerRoot               = 5,
		FoundationCharacterRoot   = 6,
		WeaponSocket              = 7,
		WeaponSocketL             = 8,
		WeaponRoot                = 9,
		TargetCompOffsetPosOnDir  = 10,
		TargetComponent           = 11,
		TargetPoint               = 12,
		BySystem                  = 13,
		MAX                       = 14
	};

	/**
	 * Enum SkyBlue.EProjectileNetworkRoleType
	 */
	enum class EProjectileNetworkRoleType : uint8_t
	{
		ReplicatedAuthority             = 0,
		ReplicatedSimulated             = 1,
		ReplicatedDelegateHitAuthority  = 2,
		ReplicatedDelegateHitSimulated  = 3,
		RemoteClientAuthority           = 4,
		RemoteClientSimulated           = 5,
		RemoteClientFromTargetAuthority = 6,
		RemoteClientFromTargetSimulated = 7,
		LocalAuthority                  = 8,
		None                            = 9,
		MAX                             = 10
	};

	/**
	 * Enum SkyBlue.EProjectileType
	 */
	enum class EProjectileType : uint8_t
	{
		Straight     = 0,
		Parabola     = 1,
		AlongGround  = 2,
		Fix          = 3,
		Beam         = 4,
		RapidShot    = 5,
		WideShot     = 6,
		Forecast     = 7,
		AreaAttack   = 8,
		PartyShot    = 9,
		CustomBP_DEF = 10,
		MAX          = 11
	};

	/**
	 * Enum SkyBlue.EQuestUnlockConditionType
	 */
	enum class EQuestUnlockConditionType : uint8_t
	{
		Unknown             = 0,
		SpecificQuestStatus = 1,
		QuestStepArrived    = 2,
		AnyClassLevel       = 3,
		ScenarioFlag        = 4,
		EventTerm           = 5,
		AdventurerRank      = 6,
		Num                 = 7,
		MAX                 = 8
	};

	/**
	 * Enum SkyBlue.EQuestConditionType
	 */
	enum class EQuestConditionType : uint8_t
	{
		Unknown                = 0,
		TalkNpc                = 1,
		KillEnemy              = 2,
		CollectItem            = 3,
		ClearID                = 4,
		ArriveAt               = 5,
		PayedMoney             = 6,
		Emote                  = 7,
		WarpPortal             = 8,
		Interaction            = 9,
		CraftItem              = 10,
		AdventurerRankUp       = 11,
		AnyCondition           = 12,
		CollectTriggerByEnemy  = 13,
		CollectTriggerByGather = 14,
		CollectTrigger         = 15,
		ChallengeQuestStart    = 16,
		FangExpedition         = 17,
		StackB                 = 18,
		Num                    = 19,
		MAX                    = 20
	};

	/**
	 * Enum SkyBlue.EQuestListFilterType
	 */
	enum class EQuestListFilterType : uint8_t
	{
		MainQuest            = 0,
		SubQuest             = 1,
		ClassQuest           = 2,
		ExtraQuest           = 3,
		ReleaseFunctionQuest = 4,
		Num                  = 5,
		MAX                  = 6
	};

	/**
	 * Enum SkyBlue.ESBQuestStatusOnClassChange
	 */
	enum class ESBQuestStatusOnClassChange : uint8_t
	{
		None           = 0,
		DifferentClass = 1,
		NotEnoughLevel = 2,
		Both           = 3,
		MAX            = 4
	};

	/**
	 * Enum SkyBlue.ESBQuest
	 */
	enum class ESBQuest : uint8_t
	{
		None         = 0,
		CheckableNum = 1,
		MAX          = 2
	};

	/**
	 * Enum SkyBlue.EQuestContributionRank
	 */
	enum class EQuestContributionRank : uint8_t
	{
		None   = 0,
		Bronze = 1,
		Silver = 2,
		Gold   = 3,
		Num    = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.EQuestIconType
	 */
	enum class EQuestIconType : uint8_t
	{
		None     = 0,
		Start    = 1,
		Target   = 2,
		Report   = 3,
		Stopping = 4,
		Num      = 5,
		MAX      = 6
	};

	/**
	 * Enum SkyBlue.RAID_BATTLE_SCORE
	 */
	enum class ERAID_BATTLE_SCORE : uint8_t
	{
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_MOST_DAMAGE          = 0,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_INSTANTANEOUS_DAMAGE = 1,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_MOST_BUFF            = 2,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_MOST_RESUSCITATION   = 3,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_MOST_DEBUFF          = 4,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_GIMMICK_ATTACK       = 5,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_TARGET_KILL          = 6,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_MOST_TAKE_HITS       = 7,
		RAID_BATTLE_SCORERAID_BATTLE_SCORE_MAX                  = 8
	};

	/**
	 * Enum SkyBlue.ERaidBattleGameResult
	 */
	enum class ERaidBattleGameResult : uint8_t
	{
		Unknown = 0,
		Sucs    = 1,
		Failed  = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ERaidBattleGameStatus
	 */
	enum class ERaidBattleGameStatus : uint8_t
	{
		Idle    = 0,
		Loading = 1,
		Loaded  = 2,
		Running = 3,
		Done    = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ERoomMakeFunction
	 */
	enum class ERoomMakeFunction : uint8_t
	{
		RoomMakeRandom  = 0,
		RoomMakeStart   = 1,
		RoomMakeGoal    = 2,
		RoomMakeEnemy   = 3,
		RoomMakeTrap    = 4,
		RoomMakeCollect = 5,
		Max             = 6
	};

	/**
	 * Enum SkyBlue.ESBConnectWayType
	 */
	enum class ESBConnectWayType : uint8_t
	{
		ConnectOneRight             = 0,
		ConnectOneLeft              = 1,
		ConnectOneTop               = 2,
		ConnectOneBottom            = 3,
		ConnectTwoRightBottom       = 4,
		ConnectTwoLeftBottom        = 5,
		ConnectTwoRightUp           = 6,
		ConnectTwoLeftUp            = 7,
		ConnectThreeRightUpBottom   = 8,
		ConnectThreeRightLeftBottom = 9,
		ConnectThreeRightLeftUp     = 10,
		ConnectThreeLeftUpBottom    = 11,
		ConnectThreeFourAll         = 12,
		Max                         = 13
	};

	/**
	 * Enum SkyBlue.ESBRankingTargetType
	 */
	enum class ESBRankingTargetType : uint8_t
	{
		None        = 0,
		TimeAtacck  = 1,
		ScoreAttack = 2,
		MAX         = 3
	};

	/**
	 * Enum SkyBlue.ESBRankingType
	 */
	enum class ESBRankingType : uint8_t
	{
		None  = 0,
		Solo  = 1,
		Party = 2,
		MAX   = 3
	};

	/**
	 * Enum SkyBlue.ESBClassRepNodeMapping
	 */
	enum class ESBClassRepNodeMapping : uint8_t
	{
		NotRouted                      = 0,
		RelevantAllConnections         = 1,
		Connection_CityPlayerCharacter = 2,
		Connection_CityPlayerState     = 3,
		Connection_CityRepTest         = 4,
		Connection_FieldEnemyCharacter = 5,
		Spatialize_Static              = 6,
		Spatialize_Dynamic             = 7,
		Spatialize_Dormancy            = 8,
		MAX                            = 9
	};

	/**
	 * Enum SkyBlue.ESBDebugPostDataType
	 */
	enum class ESBDebugPostDataType : uint8_t
	{
		String      = 0,
		Integer     = 1,
		Number      = 2,
		Boolean     = 3,
		ArrayStart  = 4,
		ArrayEnd    = 5,
		ObjectStart = 6,
		ObjectEnd   = 7,
		MAX         = 8
	};

	/**
	 * Enum SkyBlue.ESBRouteGuideDestIdType
	 */
	enum class ESBRouteGuideDestIdType : uint8_t
	{
		Auto                       = 0,
		MiniMapQuestAreaIconInfoDB = 1,
		MAX                        = 2
	};

	/**
	 * Enum SkyBlue.ESBRouteGuideArea
	 */
	enum class ESBRouteGuideArea : uint8_t
	{
		AreaNONE  = 0,
		AreaRED   = 1,
		AreaGREEN = 2,
		AreaBLUE  = 3,
		AreaALL   = 4,
		MAX       = 5
	};

	/**
	 * Enum SkyBlue.ESBRTPCAkComponentType
	 */
	enum class ESBRTPCAkComponentType : uint8_t
	{
		None                     = 0,
		Distance_City01_SummerDJ = 1,
		Angle_City01_SummerDJ    = 2,
		MAX                      = 3
	};

	/**
	 * Enum SkyBlue.ESBScreenShotUtilsProcess
	 */
	enum class ESBScreenShotUtilsProcess : uint8_t
	{
		None     = 0,
		Prepare  = 1,
		Prepare2 = 2,
		Normal   = 3,
		Upload   = 4,
		MAX      = 5
	};

	/**
	 * Enum SkyBlue.ESBScriptVariableType
	 */
	enum class ESBScriptVariableType : uint8_t
	{
		Integer = 0,
		Boolean = 1,
		String  = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBScriptStatus
	 */
	enum class ESBScriptStatus : uint8_t
	{
		None    = 0,
		Ready   = 1,
		Running = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassPurchaseRewordType
	 */
	enum class ESBSeasonPassPurchaseRewordType : uint8_t
	{
		UnlockQuest      = 0,
		RankUp           = 1,
		DailyQuestReload = 2,
		Item             = 3,
		PremiumAesthe    = 4,
		RewardPlus       = 5,
		MAX              = 6
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassRewardItemState
	 */
	enum class ESBSeasonPassRewardItemState : uint8_t
	{
		Unachieved = 0,
		Achieved   = 1,
		Received   = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassQuestUpdateParseParam
	 */
	enum class ESBSeasonPassQuestUpdateParseParam : uint8_t
	{
		QuestId    = 0,
		GroupId    = 1,
		IsAchieve  = 2,
		IsRewarded = 3,
		Progress   = 4,
		MAX        = 5
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassQuestFilterType
	 */
	enum class ESBSeasonPassQuestFilterType : uint8_t
	{
		All    = 0,
		Week1  = 1,
		Week2  = 2,
		Week3  = 3,
		Week4  = 4,
		Week5  = 5,
		Week6  = 6,
		Week7  = 7,
		Week8  = 8,
		Week9  = 9,
		Week10 = 10,
		Week11 = 11,
		Week12 = 12,
		Week13 = 13,
		Week14 = 14,
		Week15 = 15,
		Week16 = 16,
		Week17 = 17,
		Week18 = 18,
		Week19 = 19,
		Week20 = 20,
		MAX    = 21
	};

	/**
	 * Enum SkyBlue.ESBSeasonPassQuestPlanState
	 */
	enum class ESBSeasonPassQuestPlanState : uint8_t
	{
		OutOfTerm  = 0,
		Free       = 1,
		Subscribed = 2,
		MAX        = 3
	};

	/**
	 * Enum SkyBlue.ESendSecondPasswordRole
	 */
	enum class ESendSecondPasswordRole : uint8_t
	{
		Activate = 0,
		Delete   = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESerialCodeRewardType
	 */
	enum class ESerialCodeRewardType : uint8_t
	{
		Money   = 0,
		Engram  = 1,
		Item    = 2,
		Weapon  = 3,
		Costume = 4,
		MAX     = 5
	};

	/**
	 * Enum SkyBlue.ESerialCodeType
	 */
	enum class ESerialCodeType : uint8_t
	{
		AllOnce  = 0,
		OnlyOnce = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESBConnectGameServerFailure
	 */
	enum class ESBConnectGameServerFailure : uint8_t
	{
		None     = 0,
		Unknown  = 1,
		NotFound = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.EShortcutIconCommandID
	 */
	enum class EShortcutIconCommandID : uint8_t
	{
		BookMark1                   = 0,
		BookMark2                   = 1,
		BookMark3                   = 2,
		BookMark4                   = 3,
		BookMark5                   = 4,
		BookMark6                   = 5,
		BookMark7                   = 6,
		BookMark8                   = 7,
		BookMark9                   = 8,
		BookMark10                  = 9,
		BookMark11                  = 10,
		BookMark12                  = 11,
		BookMark13                  = 12,
		BookMark14                  = 13,
		BookMark15                  = 14,
		BookMark16                  = 15,
		BookMark17                  = 16,
		BookMark18                  = 17,
		BookMark19                  = 18,
		BookMark20                  = 19,
		BookMark21                  = 20,
		BookMark22                  = 21,
		BookMark23                  = 22,
		BookMark24                  = 23,
		MyCharacter                 = 24,
		Inventory                   = 25,
		Quest                       = 26,
		AdventureBoard              = 27,
		Map                         = 28,
		Communicate                 = 29,
		Communicate_Friend          = 30,
		Library                     = 31,
		SeasonPass                  = 32,
		Mail                        = 33,
		Contents                    = 34,
		Party                       = 35,
		Guild                       = 36,
		Option                      = 37,
		RmShop                      = 38,
		MyCharacter_SkillBoard      = 39,
		MyCharacter_Costume         = 40,
		MyCharacter_Effect          = 41,
		MyCharacter_AdventureRank   = 42,
		Inventory_Depository        = 43,
		Inventory_LiquidMemory      = 44,
		Inventory_Wallet            = 45,
		Quest_Network               = 46,
		Quest_WishList              = 47,
		Communicate_Album           = 48,
		Communicate_CharacterSearch = 49,
		Communicate_Talk            = 50,
		Library_PictureBook         = 51,
		Library_Achievement         = 52,
		Library_LoginBonus          = 53,
		Library_Movie               = 54,
		Party_OfferList             = 55,
		Guild_Card                  = 56,
		Guild_Member                = 57,
		Guild_Log                   = 58,
		Guild_Rank                  = 59,
		Event                       = 60,
		MAX                         = 61
	};

	/**
	 * Enum SkyBlue.EShortcutIconType
	 */
	enum class EShortcutIconType : uint8_t
	{
		F1  = 0,
		F2  = 1,
		F3  = 2,
		F4  = 3,
		F5  = 4,
		F6  = 5,
		F7  = 6,
		F8  = 7,
		Num = 8,
		MAX = 9
	};

	/**
	 * Enum SkyBlue.EShortcutRingEditFilterType
	 */
	enum class EShortcutRingEditFilterType : uint8_t
	{
		All         = 0,
		InPosession = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.ESimpleAlertType
	 */
	enum class ESimpleAlertType : uint8_t
	{
		None                         = 0,
		NotEnoughStamina             = 1,
		Recasting                    = 2,
		NotRemainCount               = 3,
		NoBullet                     = 4,
		NotEnoughShieldDurability    = 5,
		NotEnoughMagicPoint          = 6,
		InvalidMarkerLocation        = 7,
		ShieldIsBroken               = 8,
		CanUseSkillOnlyOnGround      = 9,
		MountNotUseLocation          = 10,
		CannotUseSkillByBattleStatus = 11,
		Max                          = 12
	};

	/**
	 * Enum SkyBlue.ESBSitTargetSoundType
	 */
	enum class ESBSitTargetSoundType : uint8_t
	{
		None          = 0,
		Hard          = 1,
		Wood          = 2,
		Plastic       = 3,
		Plastic_Light = 4,
		MAX           = 5
	};

	/**
	 * Enum SkyBlue.ESBMuscleMass
	 */
	enum class ESBMuscleMass : uint8_t
	{
		Default = 0,
		Low     = 1,
		High    = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBFootSESocketType
	 */
	enum class ESBFootSESocketType : uint8_t
	{
		None      = 0,
		L_Hand    = 1,
		R_Hand    = 2,
		L_Foot    = 3,
		R_Foot    = 4,
		L_ForeLeg = 5,
		R_ForeLeg = 6,
		L_BackLeg = 7,
		R_BackLeg = 8,
		MAX       = 9
	};

	/**
	 * Enum SkyBlue.ESBSoundDemoState
	 */
	enum class ESBSoundDemoState : uint8_t
	{
		None   = 0,
		DemoSt = 1,
		DemoEd = 2,
		SkilSt = 3,
		SkitEd = 4,
		MAX    = 5
	};

	/**
	 * Enum SkyBlue.ESBAkEventSwitchType
	 */
	enum class ESBAkEventSwitchType : uint8_t
	{
		None                    = 0,
		Character_FloorType     = 1,
		Character_Cloth         = 2,
		Character_AttackElement = 3,
		Player_Class            = 4,
		Player_Chair            = 5,
		Player_Gather           = 6,
		Player_ClimbSurface     = 7,
		Player_Controlled       = 8,
		Player_Fevertime        = 9,
		Enemy_Type              = 10,
		Enemy_Voice             = 11,
		Enemy_Magic             = 12,
		Mount_Type              = 13,
		MAX                     = 14
	};

	/**
	 * Enum SkyBlue.ESBLanguage
	 */
	enum class ESBLanguage : uint8_t
	{
		Japanese = 0,
		English  = 1,
		MAX      = 2
	};

	/**
	 * Enum SkyBlue.ESBSMCSituation
	 */
	enum class ESBSMCSituation : uint8_t
	{
		Relaxed = 0,
		Combat  = 1,
		Misc    = 2,
		Flee    = 3,
		MAX     = 4
	};

	/**
	 * Enum SkyBlue.ESBStatusAilmentPlateType
	 */
	enum class ESBStatusAilmentPlateType : uint8_t
	{
		Buff      = 0,
		Debuff    = 1,
		Attribute = 2,
		Regist    = 3,
		MAX       = 4
	};

	/**
	 * Enum SkyBlue.ESBSTMasterDataType
	 */
	enum class ESBSTMasterDataType : uint8_t
	{
		EnemyParamMaster = 0,
		MapInfo          = 1,
		MAX              = 2
	};

	/**
	 * Enum SkyBlue.ESubMenuTermRequestReply
	 */
	enum class ESubMenuTermRequestReply : uint8_t
	{
		Immediate = 0,
		Wait      = 1,
		Never     = 2,
		MAX       = 3
	};

	/**
	 * Enum SkyBlue.ESubMenuTermReason
	 */
	enum class ESubMenuTermReason : uint8_t
	{
		SwitchMenu = 0,
		Close      = 1,
		MAX        = 2
	};

	/**
	 * Enum SkyBlue.ESBSystemMessageFlag
	 */
	enum class ESBSystemMessageFlag : uint8_t
	{
		None                                 = 0,
		PlayerLoggedIn                       = 1,
		GetItem_Single                       = 2,
		GetItem_Plural                       = 3,
		GetItemFailure_InventoryFull         = 4,
		HealStation_HealDone                 = 5,
		GetEmote                             = 6,
		FailedQuitGame                       = 7,
		CantOpenDuringDead                   = 8,
		CantOpenDuringBattle                 = 9,
		CantOpenDuringAction                 = 10,
		CantOpenDuringTransform              = 11,
		CantStartDungeonDuringDead           = 12,
		CantStartDungeonDuringBattle         = 13,
		FailedFieldTravel                    = 14,
		ChatErrorSendTime                    = 15,
		ChatErrorBan                         = 16,
		LevelSyncApplied                     = 17,
		MissionTerminated                    = 18,
		CantOpenCommandMenu                  = 19,
		NotFoundSpawnPoint                   = 20,
		GetItemFailure_InventoryFull_Advance = 21,
		MAX                                  = 22
	};

	/**
	 * Enum SkyBlue.ESystemSE
	 */
	enum class ESystemSE : uint8_t
	{
		None                  = 0,
		Play_Sys_Config_mst   = 1,
		Play_Sys_Config_bgm   = 2,
		Play_Sys_Config_se    = 3,
		Play_Sys_Config_vo    = 4,
		Play_Sys_Config_sys   = 5,
		Play_Sys_Config_env   = 6,
		Play_Sys_Title_Start  = 7,
		Play_Sys_ok_1_Small   = 8,
		Play_Sys_ok           = 9,
		Play_Sys_ok01         = 10,
		Play_Sys_hover        = 11,
		Play_Sys_cancel       = 12,
		Play_Sys_caution      = 13,
		Play_Sys_forward      = 14,
		Play_Sys_back         = 15,
		Play_Sys_interact     = 16,
		Play_Sys_open         = 17,
		Play_Sys_count        = 18,
		Play_Sys_alert        = 19,
		Play_Sys_trade        = 20,
		Play_Sys_countdown    = 21,
		Play_Sys_warp_release = 22,
		Play_Sys_warp         = 23,
		Play_Sys_warp_local   = 24,
		Play_Sys_equip        = 25,
		Play_Sys_imagine      = 26,
		Play_Sys_revive       = 27,
		Play_Sys_collect      = 28,
		Play_Sys_recover      = 29,
		Play_Sys_reward       = 30,
		Play_Sys_speech       = 31,
		Play_Sys_weaponup     = 32,
		Play_Sys_display      = 33,
		Play_Sys_rankup       = 34,
		Play_Sys_rankup01     = 35,
		Play_Sys_rankup02     = 36,
		Play_Sys_rankup03     = 37,
		Play_Sys_breakthrough = 38,
		Play_Sys_select       = 39,
		Play_Sys_menu_open    = 40,
		Play_Sys_menu_close   = 41,
		Play_Sys_window_open  = 42,
		Play_Sys_window_close = 43,
		Play_Sys_itemdrop     = 44,
		Play_Sys_item         = 45,
		Play_Sys_max          = 46,
		Play_Sys_chat_me      = 47,
		Play_Sys_chat_others  = 48,
		Play_Sys_follow       = 49,
		Play_TUT_Target       = 50,
		Play_TUT_Clear        = 51,
		MAX                   = 52
	};

	/**
	 * Enum SkyBlue.ESBTextIdType
	 */
	enum class ESBTextIdType : uint8_t
	{
		Number = 0,
		String = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBTidalOceanGridPlayInEditor
	 */
	enum class ESBTidalOceanGridPlayInEditor : uint8_t
	{
		Default = 0,
		HiTide  = 1,
		LowTide = 2,
		MAX     = 3
	};

	/**
	 * Enum SkyBlue.ETimerHUDType
	 */
	enum class ETimerHUDType : uint8_t
	{
		None           = 0,
		Arena          = 1,
		Tower          = 2,
		TimeAttack     = 3,
		ScoreAttack    = 4,
		Raid           = 5,
		InstanceBattle = 6,
		DxBattle       = 7,
		DhcBattle      = 8,
		OneShotArena   = 9,
		Max            = 10
	};

	/**
	 * Enum SkyBlue.ESBTransition_IsElementalBurstWithChanceTimeAutoSettingType
	 */
	enum class ESBTransition_IsElementalBurstWithChanceTimeAutoSettingType : uint8_t
	{
		None                 = 0,
		ElementalBurstStart  = 1,
		ElementalBurstFinish = 2,
		ESBTransition_MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESBBDFObjectDestroyedComparisonOperator
	 */
	enum class ESBBDFObjectDestroyedComparisonOperator : uint8_t
	{
		Equal  = 0,
		OrMore = 1,
		OrLess = 2,
		MAX    = 3
	};

	/**
	 * Enum SkyBlue.ESkyBlueSecondPasswordStatus
	 */
	enum class ESkyBlueSecondPasswordStatus : uint8_t
	{
		NoAuthenticationRequired = 0,
		RegistrationRequired     = 1,
		NotAuthenticated         = 2,
		Authenticated            = 3,
		Expired                  = 4,
		CharactersCanBeDeleted   = 5,
		Unknown                  = 6,
		MAX                      = 7
	};

	/**
	 * Enum SkyBlue.ESBEColorOverride
	 */
	enum class ESBEColorOverride : uint8_t
	{
		None        = 0,
		Heal        = 1,
		Buff        = 2,
		Debuff      = 3,
		Stun        = 4,
		Sleep       = 5,
		Poison      = 6,
		TargetFixed = 7,
		Fear        = 8,
		Blind       = 9,
		Restraint   = 10,
		Paralysis   = 11,
		Nappo       = 12,
		Drain       = 13,
		GlitterMode = 14,
		MAX         = 15
	};

	/**
	 * Enum SkyBlue.ESBPlayGameMode
	 */
	enum class ESBPlayGameMode : uint8_t
	{
		Unknown  = 0,
		Scenario = 1,
		Battle   = 2,
		MAX      = 3
	};

	/**
	 * Enum SkyBlue.FSBCountryTimeZoneType
	 */
	enum class EFSBCountryTimeZoneType : uint8_t
	{
		FSBCountryTimeZoneTypeUTC                        = 0,
		FSBCountryTimeZoneTypeJST                        = 1,
		FSBCountryTimeZoneTypeAWST                       = 2,
		FSBCountryTimeZoneTypeKRAT                       = 3,
		FSBCountryTimeZoneTypeFSBCountryTimeZoneType_MAX = 4
	};

	/**
	 * Enum SkyBlue.ESBBanBasisType
	 */
	enum class ESBBanBasisType : uint8_t
	{
		None          = 0,
		Investigation = 1,
		Punishment    = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.ESBLoginBanDurationType
	 */
	enum class ESBLoginBanDurationType : uint8_t
	{
		BanTypeNone                  = 0,
		BanTypeLimitedTimeSuspension = 1,
		BanTypeIndefiniteSuspension  = 2,
		BanTypePermanent             = 3,
		MAX                          = 4
	};

	/**
	 * Enum SkyBlue.ESBLoginBanType
	 */
	enum class ESBLoginBanType : uint8_t
	{
		None          = 0,
		Investigation = 1,
		Sanction      = 2,
		MAX           = 3
	};

	/**
	 * Enum SkyBlue.ESBPlayerClassChangeable
	 */
	enum class ESBPlayerClassChangeable : uint8_t
	{
		Changeable                    = 0,
		UnChangeable_IsInMission      = 1,
		UnChangeable_IsDHCMapParty    = 2,
		UnChangeable_IsInBattleMode   = 3,
		UnChangeable_IsNotNormalWait  = 4,
		UnChangeable_IsAutoRunActive  = 5,
		UnChangeable_IsFollowee       = 6,
		UnChangeable_IsMounting       = 7,
		UnChangeable_IsSwimming       = 8,
		UnChangeable_IsNegativeStatus = 9,
		UnChangeable_IsDhcBattle      = 10,
		UnChangeable_Error            = 11,
		MAX                           = 12
	};

	/**
	 * Enum SkyBlue.EFileDialogResult
	 */
	enum class EFileDialogResult : uint8_t
	{
		Successed = 0,
		Failed    = 1,
		MAX       = 2
	};

	/**
	 * Enum SkyBlue.ESBCharacterEquipsOrSkillsOrCostumesChangeableRetValues
	 */
	enum class ESBCharacterEquipsOrSkillsOrCostumesChangeableRetValues : uint8_t
	{
		Changeable                  = 0,
		UnChangeable_IsInMission    = 1,
		UnChangeable_IsInBattleMode = 2,
		UnChangeable_IsMounting     = 3,
		MAX                         = 4
	};

	/**
	 * Enum SkyBlue.ESBMapUIType
	 */
	enum class ESBMapUIType : uint8_t
	{
		MapUITypeNone                    = 0,
		MapUITypeMapBlur                 = 1,
		MapUITypeMapBlurAndLocation      = 2,
		MapUITypeMapLandscapeAndLocation = 3,
		MAX                              = 4
	};

	/**
	 * Enum SkyBlue.ESBUiAkEventCategory
	 */
	enum class ESBUiAkEventCategory : uint8_t
	{
		Default  = 0,
		Positive = 1,
		Negative = 2,
		Max      = 3
	};

	/**
	 * Enum SkyBlue.ESBMiniMapIconType
	 */
	enum class ESBMiniMapIconType : uint8_t
	{
		MiniMapIconTypeShortPin                   = 0,
		MiniMapIconTypeNamedEnemy                 = 1,
		MiniMapIconTypeBossEnemy                  = 2,
		MiniMapIconTypeAttackerEnemy              = 3,
		MiniMapIconTypeGuerrillaEnemy             = 4,
		MiniMapIconTypeEnemy                      = 5,
		MiniMapIconTypeTargetEnemy                = 6,
		MiniMapIconTypePlayer                     = 7,
		MiniMapIconTypeWorldWerp                  = 8,
		MiniMapIconTypeLocalWerp                  = 9,
		MiniMapIconTypePin                        = 10,
		MiniMapIconTypeEngramCanon                = 11,
		MiniMapIconTypePartyPlayerDead            = 12,
		MiniMapIconTypePartyPlayer                = 13,
		MiniMapIconTypeFightingToghterNPCDead     = 14,
		MiniMapIconTypeFightingToghterNPC         = 15,
		MiniMapIconTypeCarry                      = 16,
		MiniMapIconTypeCarryBase                  = 17,
		MiniMapIconTypeDxBattleEnemyObj           = 18,
		MiniMapIconTypeMainQuestReport            = 19,
		MiniMapIconTypeMainQuestOrder             = 20,
		MiniMapIconTypeMainQuestStopping          = 21,
		MiniMapIconTypeMainQuestProgress          = 22,
		MiniMapIconTypeKeyCharacterQuestReport    = 23,
		MiniMapIconTypeKeyCharacterQuestOrder     = 24,
		MiniMapIconTypeKeyCharacterQuestStopping  = 25,
		MiniMapIconTypeKeyCharacterQuestProgress  = 26,
		MiniMapIconTypeReleaseSubQuestReport      = 27,
		MiniMapIconTypeReleaseSubQuestOrder       = 28,
		MiniMapIconTypeReleaseSubQuestStopping    = 29,
		MiniMapIconTypeReleaseSubQuestProgress    = 30,
		MiniMapIconTypeClassSubQuestReport        = 31,
		MiniMapIconTypeClassSubQuestOrder         = 32,
		MiniMapIconTypeClassSubQuestStopping      = 33,
		MiniMapIconTypeClassSubQuestProgress      = 34,
		MiniMapIconTypeSubQuestReport             = 35,
		MiniMapIconTypeSubQuestOrder              = 36,
		MiniMapIconTypeSubQuestStopping           = 37,
		MiniMapIconTypeSubQuestProgress           = 38,
		MiniMapIconTypeChallengeQuestNpc          = 39,
		MiniMapIconTypeChallengeQuestGimmick      = 40,
		MiniMapIconTypeChallengeQuestDestructible = 41,
		MiniMapIconTypeQuestNpc                   = 42,
		MiniMapIconTypeRaidDungeonGate            = 43,
		MiniMapIconTypeDungeonGate                = 44,
		MiniMapIconTypeDxBattleNPC                = 45,
		MiniMapIconTypePineVillageNPC             = 46,
		MiniMapIconTypeDhcNPC                     = 47,
		MiniMapIconTypeAdventurerRank             = 48,
		MiniMapIconTypeWarehouse                  = 49,
		MiniMapIconTypeSyntheShop                 = 50,
		MiniMapIconTypeCraft                      = 51,
		MiniMapIconTypeImagineLaboratory          = 52,
		MiniMapIconTypeFangExpedition             = 53,
		MiniMapIconTypeBuffNPC                    = 54,
		MiniMapIconTypeCamp                       = 55,
		MiniMapIconTypeClimbPoint                 = 56,
		MiniMapIconTypeUpdraft                    = 57,
		MiniMapIconTypeTradeShop                  = 58,
		MiniMapIconTypeArena                      = 59,
		MiniMapIconTypeAbilityMasteryShop         = 60,
		MiniMapIconTypeMemoryStand                = 61,
		MiniMapIconTypeAesthe                     = 62,
		MiniMapIconTypeDyeingShop                 = 63,
		MiniMapIconTypeItemShop                   = 64,
		MiniMapIconTypeWeaponShop                 = 65,
		MiniMapIconTypeGuild                      = 66,
		MiniMapIconTypeRankingBoard               = 67,
		MiniMapIconTypeOrnament                   = 68,
		MiniMapIconTypeBuffNPCInvalid             = 69,
		MiniMapIconTypeFishing                    = 70,
		MiniMapIconTypeIntrruptQuest              = 71,
		MiniMapIconTypeZoneBorder                 = 72,
		MiniMapIconTypeNFTAreaIcon                = 73,
		MiniMapIconTypeMapName                    = 74,
		MiniMapIconTypeQuestArea                  = 75,
		MiniMapIconTypeCloud                      = 76,
		MiniMapIconTypeRegionIcon                 = 77,
		MiniMapIconTypeBase                       = 78,
		MiniMapIconTypeNum                        = 79,
		MAX                                       = 80
	};

	/**
	 * Enum SkyBlue.ESBUIVisibleSettingOwner
	 */
	enum class ESBUIVisibleSettingOwner : uint8_t
	{
		DebugMenu        = 0,
		WarpAroundEffect = 1,
		ULTSkill         = 2,
		DhcBattleHUD     = 3,
		MAX              = 4
	};

	/**
	 * Enum SkyBlue.ESBWorldUIType
	 */
	enum class ESBWorldUIType : uint8_t
	{
		NormalBattle       = 0,
		OfflineBattle      = 1,
		ShadowAvatarBattle = 2,
		Unknown            = 3,
		Max                = 4
	};

	/**
	 * Enum SkyBlue.ESBMouseCursorType
	 */
	enum class ESBMouseCursorType : uint8_t
	{
		Default   = 0,
		MapPin    = 1,
		MapEraser = 2,
		Max       = 3
	};

	/**
	 * Enum SkyBlue.ESBUIBlockerType
	 */
	enum class ESBUIBlockerType : uint8_t
	{
		Default     = 0,
		CommandMenu = 1,
		MAX         = 2
	};

	/**
	 * Enum SkyBlue.ESBUtilityScoreOperator
	 */
	enum class ESBUtilityScoreOperator : uint8_t
	{
		Min     = 0,
		Max     = 1,
		Average = 2
	};

	/**
	 * Enum SkyBlue.ESBUtilityScoreFunction
	 */
	enum class ESBUtilityScoreFunction : uint8_t
	{
		Linear = 0,
		Step   = 1,
		MAX    = 2
	};

	/**
	 * Enum SkyBlue.ESBWarehouseAbilityConditionType
	 */
	enum class ESBWarehouseAbilityConditionType : uint8_t
	{
		ObtainedItem           = 0,
		ObtainedWeapon         = 1,
		ObtainedCostume        = 2,
		ObtainedImagine        = 3,
		ObtainedMount          = 4,
		AbilityRecipeAcquired  = 5,
		AbilityRecipeMastered  = 6,
		ReachedAdventurerRank  = 7,
		ReachedClassLevel      = 8,
		DefeatedEnemy          = 9,
		ZoneTraversed          = 10,
		MissionReleased        = 11,
		MissionCleared         = 12,
		QuestClearFlagAchieved = 13,
		MAX                    = 14
	};

	/**
	 * Enum SkyBlue.AbilityBuildupID
	 */
	enum class EAbilityBuildupID : uint8_t
	{
		AbilityBuildupIDNONE                 = 0,
		AbilityBuildupIDABILITY_LOT          = 1,
		AbilityBuildupIDABILITY_LOT_RANDOM   = 2,
		AbilityBuildupIDVALUE_UP             = 3,
		AbilityBuildupIDVALUE_LOT            = 4,
		AbilityBuildupIDAbilityBuildupID_MAX = 5
	};

	/**
	 * Enum SkyBlue.ESBTokenConsumeType
	 */
	enum class ESBTokenConsumeType : uint8_t
	{
		INVALID                = 0,
		REMOVE_WEAPON_ABILITY  = 1,
		RESET_WEAPON_ABILITY   = 2,
		PROTECT_WEAPON_ABILITY = 3,
		UNLOCK_WEAPON_ABILITY  = 4,
		MAX                    = 5
	};

	/**
	 * Enum SkyBlue.ESBBattleScoreWeaponEffectAttachType
	 */
	enum class ESBBattleScoreWeaponEffectAttachType : uint8_t
	{
		RootComponent = 0,
		MeshComponent = 1,
		MAX           = 2
	};

	/**
	 * Enum SkyBlue.ESBBattleScoreWeaponEffectType
	 */
	enum class ESBBattleScoreWeaponEffectType : uint8_t
	{
		Spot = 0,
		Aura = 1,
		MAX  = 2
	};

	/**
	 * Enum SkyBlue.ESBWeaponShapeType
	 */
	enum class ESBWeaponShapeType : uint8_t
	{
		WeaponShapeType_None    = 0,
		WeaponShapeType_Cutlery = 1,
		WeaponShapeType_Blunt   = 2,
		WeaponShapeType_MAX     = 3
	};

	/**
	 * Enum SkyBlue.ESBWeaponComponentType
	 */
	enum class ESBWeaponComponentType : uint8_t
	{
		WeaponComponentType_Bow        = 0,
		WeaponComponentType_Shine      = 1,
		WeaponComponentType_BallHammer = 2,
		WeaponComponentType_Bend       = 3,
		WeaponComponentType_FishingRod = 4,
		WeaponComponentType_MAX        = 5
	};

	/**
	 * Enum SkyBlue.ESBWeaponVisibilitySlot
	 */
	enum class ESBWeaponVisibilitySlot : uint8_t
	{
		WVSlot_All            = 0,
		WVSlot_Right          = 1,
		WVSlot_Left           = 2,
		WVSlot_Both           = 3,
		WVSlot_SheathedShield = 4,
		WVSlot_Other          = 5,
		WVSlot_None           = 6,
		WVSlot_MAX            = 7
	};

	/**
	 * Enum SkyBlue.ESBWeaponHiddenConditions
	 */
	enum class ESBWeaponHiddenConditions : uint8_t
	{
		WHC_OwnerInvalid   = 0,
		WHC_OwnerLoading   = 1,
		WHC_OwnerHidden    = 2,
		WHC_GuardBreak     = 3,
		WHC_LargeShield    = 4,
		WHC_Demo           = 5,
		WHC_QuestEvent     = 6,
		WHC_Option         = 7,
		WHC_Option_Fishing = 8,
		WHC_Notify         = 9,
		WHC_Notify_Fade    = 10,
		WHC_Num            = 11,
		WHC_MAX            = 12
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct SkyBlue.SBAbilityID
	 * Size -> 0x0008
	 */
	struct FSBAbilityID
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityElementStatusReinforceLevelModifySetting
	 * Size -> 0x0008
	 */
	struct FSBAbilityElementStatusReinforceLevelModifySetting
	{
	public:
		int32_t                                                    StatusAilmentLevel;                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModifyValue;                                             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackID
	 * Size -> 0x0004
	 */
	struct FSBAttackID
	{
	public:
		int32_t                                                    AttackID;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityLimitParam
	 * Size -> 0x000C
	 */
	struct FSBAbilityLimitParam
	{
	public:
		bool                                                       bEnable : 1;                                             // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1YW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Max;                                                     // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Min;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDefenceGuardConfig
	 * Size -> 0x000C
	 */
	struct FSBDefenceGuardConfig
	{
	public:
		int32_t                                                    GuardBitMask;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NotThroughMask;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GuardableAngle;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectSettingBase
	 * Size -> 0x0050
	 */
	struct FSBEffectSettingBase
	{
	public:
		unsigned char                                              UnknownData_AHNP[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEffectTarget                                              EffectTarget;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_52F0[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ParticleScale;                                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x001C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OQBA[0x4];                                   // 0x0028(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAttach : 1;                                             // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAbsoluteRotation : 1;                                   // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDetachWhenDeactivate : 1;                               // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVisibleByHiddenSourceActor : 1;                         // 0x002C(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8RC6[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachPointName;                                         // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorParameterName;                                      // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLightingChannels : 1;                           // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R700[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLightingChannels                                   OverrideLightingChannels;                                // 0x0044(0x0001) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_45OD[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bOverrideElementType : 1;                                // 0x0048(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHNY[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBAttribute                                               ElementType;                                             // 0x004C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectVisibleType                                       VisibleType;                                             // 0x004D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectType                                              EffectType;                                              // 0x004E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8RCF[0x1];                                   // 0x004F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.AkSwitch
	 * Size -> 0x0020
	 */
	struct FAkSwitch
	{
	public:
		class FString                                              SwitchGroup;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SwitchState;                                             // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAkRTPC
	 * Size -> 0x0014
	 */
	struct FSBAkRTPC
	{
	public:
		class FName                                                RTPCName;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMin;                                                // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMax;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.AkEventVariables
	 * Size -> 0x0040
	 */
	struct FAkEventVariables
	{
	public:
		class UAkAudioEvent*                                       Event;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAkSwitch>                                   SWITCH;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                AttachName;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoDestroy;                                             // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopWhenOwnerDestroyed;                                  // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAkEventLOD                                              LOD;                                                     // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SBR6[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAkRTPC>                                   RTPC;                                                    // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      DelayTime;                                               // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanReuseAkComponent;                                    // 0x003C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_98HB[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectAsset
	 * Size -> 0x0158 (FullSize[0x01A8] - InheritedSize[0x0050])
	 */
	struct FSBEffectAsset : public FSBEffectSettingBase
	{
	public:
		unsigned char                                              Particle[0x28];                                          // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              NiagaraSystem[0x28];                                     // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              EffectActor[0x28];                                       // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              EffectActorList[0x10];                                   // 0x00C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              Sound[0x28];                                             // 0x00D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FAkEventVariables                                   SoundParam;                                              // 0x0100(0x0040) Edit, NativeAccessSpecifierPublic
		unsigned char                                              EndSound[0x28];                                          // 0x0140(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FAkEventVariables                                   EndSoundParam;                                           // 0x0168(0x0040) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGuardEffectSetting
	 * Size -> 0x06A8
	 */
	struct FSBGuardEffectSetting
	{
	public:
		float                                                      NeedDurabilityRate;                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HIGU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEffectAsset                                      GuardActiveEffect;                                       // 0x0008(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      GuardSuccessEffect;                                      // 0x01B0(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      GuardBreakEffect;                                        // 0x0358(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      GuardEndEffect;                                          // 0x0500(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ActionLotteryTableSpecified
	 * Size -> 0x0018
	 */
	struct FActionLotteryTableSpecified
	{
	public:
		class FName                                                Specifier;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          ActionLotteryTable;                                      // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoAttackRequestRequired;                                // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BI5S[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAIAttackableArea
	 * Size -> 0x0024
	 */
	struct FSBAIAttackableArea
	{
	public:
		struct FVector                                             Offset;                                                  // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinRange;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRange;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftAngle;                                               // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightAngle;                                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperAngle;                                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LowerAngle;                                              // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerceiveAttackSettings
	 * Size -> 0x0008
	 */
	struct FSBPerceiveAttackSettings
	{
	public:
		float                                                      VisionAngle;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangedAttackDistance;                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAITacticalSkillRootTask
	 * Size -> 0x0020
	 */
	struct FSBAITacticalSkillRootTask
	{
	public:
		class FString                                              TaskName;                                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MethodName;                                              // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAITacticalSkill_DomainOverride
	 * Size -> 0x0020
	 */
	struct FSBAITacticalSkill_DomainOverride
	{
	public:
		struct FAIFwParameterizedHTNDomain                         Domain;                                                  // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bOverrideCompound;                                       // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M5Y0[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAITacticalSkill_AdditionalPrecondition
	 * Size -> 0x0020
	 */
	struct FSBAITacticalSkill_AdditionalPrecondition
	{
	public:
		class FString                                              StateName;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAITacticalSkill_StateType                               ValueType;                                               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBoolValue;                                              // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXKJ[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    IntValue;                                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FloatValue;                                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAITacticalSkill_StateComparison                         Comparison;                                              // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3U3K[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAITacticalSkill_AdditionalEffect
	 * Size -> 0x0020
	 */
	struct FSBAITacticalSkill_AdditionalEffect
	{
	public:
		class FString                                              StateName;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAITacticalSkill_StateType                               ValueType;                                               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBoolValue;                                              // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SZGC[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    IntValue;                                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FloatValue;                                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAITacticalSkill_StateOperation                          Operation;                                               // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5K2I[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAkEventTriggerAreaData
	 * Size -> 0x0038
	 */
	struct FSBAkEventTriggerAreaData
	{
	public:
		unsigned char                                              UnknownData_WBHS[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6R67[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CategoryName;                                            // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       BeginOverlapAkEvent;                                     // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       EndOverlapAkEvent;                                       // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileHomingConfig
	 * Size -> 0x0040
	 */
	struct FProjectileHomingConfig
	{
	public:
		bool                                                       bIsHoming : 1;                                           // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0QRZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHomingType                                                HomingType;                                              // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XA6S[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HomingAccelerationMagnitude;                             // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingBeginTime;                                         // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingEndTime;                                           // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HomingOffsetPos;                                         // 0x0014(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingCorrectionAngle;                                   // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingCorrectionAngle2;                                  // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingEffectiveCorrectionAngle;                          // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingEffectiveCorrectionAngle2;                         // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCancelHomingEffectiveCorrectionAngle : 1;             // 0x0030(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JVGR[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CancelHomingBeginTime;                                   // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CancelHomingEndTime;                                     // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDisableHomingHeight : 1;                              // 0x003C(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableTargetStop : 1;                                 // 0x003C(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VDF2[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileAlongGroundParameter
	 * Size -> 0x001C
	 */
	struct FSBProjectileAlongGroundParameter
	{
	public:
		float                                                      GroundOffsetHeight;                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisappearFallHeight;                                     // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProjectileFollowSlopeRotType                              FollowSlopeRotType;                                      // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZZAJ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CheckPitchDist;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CheckRollDist;                                           // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlongPitchMax;                                           // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlongRollMax;                                            // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcScriptInfo
	 * Size -> 0x0028
	 */
	struct FSBNpcScriptInfo
	{
	public:
		TArray<class FName>                                        MainTriggers;                                            // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        SubTriggers;                                             // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsNeedFacial;                                           // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFAX[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.AnimalWaitParamInfo
	 * Size -> 0x0010
	 */
	struct FAnimalWaitParamInfo
	{
	public:
		class FName                                                AnimalName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          WaitParamTable;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBExtraCurveForce
	 * Size -> 0x0150
	 */
	struct FSBExtraCurveForce
	{
	public:
		struct FVector                                             PhysicsForce;                                            // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PhysicsExternalForceDir;                                 // 0x000C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  PhysicsExternalVelocityCurve;                            // 0x0018(0x0088) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FVector                                             PhysicsAngularForce;                                     // 0x00A0(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PhysicsExternalAngularForceDir;                          // 0x00AC(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  PhysicsExternalAngularVelocityCurve;                     // 0x00B8(0x0088) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CFI[0x10];                                  // 0x0140(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFootprintSideSocket
	 * Size -> 0x000C
	 */
	struct FSBFootprintSideSocket
	{
	public:
		EFootPrintSide                                             FootprintSide;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V445[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFootprintSoundAdditionalSwitchSetting
	 * Size -> 0x0020
	 */
	struct FSBFootprintSoundAdditionalSwitchSetting
	{
	public:
		class FString                                              SwitchGroup;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SwitchState;                                             // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSurfaceFootprintSettingList
	 * Size -> 0x02B0
	 */
	struct FSBSurfaceFootprintSettingList
	{
	public:
		unsigned char                                              m_FPWalkStart[0x28];                                     // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pWalkStartSetting;                                     // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPWalk[0x28];                                          // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pWalkSetting;                                          // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPRun[0x28];                                           // 0x0060(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pRunSetting;                                           // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPDash[0x28];                                          // 0x0090(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pDashSetting;                                          // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPJump[0x28];                                          // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pJumpSetting;                                          // 0x00E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPLandingS[0x28];                                      // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pLandingSSetting;                                      // 0x0118(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPLandingM[0x28];                                      // 0x0120(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pLandingMSetting;                                      // 0x0148(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPDown[0x28];                                          // 0x0150(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pDownSetting;                                          // 0x0178(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPDownM[0x28];                                         // 0x0180(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pDownMSetting;                                         // 0x01A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPHeavyAttack[0x28];                                   // 0x01B0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pHeavyAttackSetting;                                   // 0x01D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPStep[0x28];                                          // 0x01E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pStepSetting;                                          // 0x0208(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPSwimming[0x28];                                      // 0x0210(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pSwimmingSetting;                                      // 0x0238(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPDirectWaterIn[0x28];                                 // 0x0240(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pDirectWaterInSetting;                                 // 0x0268(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              m_FPDirectWaterOut[0x28];                                // 0x0270(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class USBSurfaceFootprintSetting*                          m_pDirectWaterOutSetting;                                // 0x0298(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		TArray<struct FSBFootprintSoundAdditionalSwitchSetting>    m_AdditionalSwitchSetting;                               // 0x02A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCameraShieldingTransparentParam
	 * Size -> 0x0008
	 */
	struct FSBCameraShieldingTransparentParam
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceBuffer;                                          // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBActiveArtsID
	 * Size -> 0x0004
	 */
	struct FSBActiveArtsID
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveArtsID
	 * Size -> 0x0004
	 */
	struct FSBPassiveArtsID
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckParam
	 * Size -> 0x0068
	 */
	struct FSBConditionCheckParam
	{
	public:
		ESBConditionCheckType                                      ConditionCheckType;                                      // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5OQY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBActiveArtsID                                     ActiveArtsID;                                            // 0x0004(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPassiveArtsID                                    PassiveArtsID;                                           // 0x0008(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBAttackID                                         AttackID;                                                // 0x000C(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    IntValue;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FloatValue;                                              // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NameValue;                                               // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMagnitudeRelation                                       Relation;                                                // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JSUE[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 BattleStatusRowHandle;                                   // 0x0028(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		ESBBattleEffectiveGroup                                    BattleEffectiveGroup;                                    // 0x0038(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B0XA[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBAbilityFlags>                                    AbilityFlagList;                                         // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<ESBAbilityOnlyPlayerStatus>                         OnlyPlayerStatusList;                                    // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBAttribute                                               ElementType;                                             // 0x0060(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerSkillActionType                                   SkillType;                                               // 0x0061(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBArrayLogicalOperator                                    ArrayLogic;                                              // 0x0062(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNot;                                                    // 0x0063(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MUQV[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNotifyRuleSetting
	 * Size -> 0x0038
	 */
	struct FSBNotifyRuleSetting
	{
	public:
		ENotifyRuleLogic                                           NotifyRuleSetting;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KRD7[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USBAnimNotifyRule*>                           NotifyRules;                                             // 0x0008(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class USBAnimNotifyRuleOnServer*>                   NotifyRulesOnServer;                                     // 0x0018(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NotifyStateChangeEmissiveColorTarget
	 * Size -> 0x0018
	 */
	struct FNotifyStateChangeEmissiveColorTarget
	{
	public:
		int32_t                                                    WeaponIndex;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_548S[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            MaterialIndex;                                           // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileSelectHandle
	 * Size -> 0x0018
	 */
	struct FSBProjectileSelectHandle
	{
	public:
		class UDataTable*                                          DataTable;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RowName;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TableRowIndex;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y4K4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.NotityProjectile
	 * Size -> 0x0020
	 */
	struct FNotityProjectile
	{
	public:
		struct FSBProjectileSelectHandle                           ProjectileSelectHandle;                                  // 0x0000(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                SpawnSocketName;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NotifyProjectileByTag
	 * Size -> 0x0028
	 */
	struct FNotifyProjectileByTag
	{
	public:
		class FName                                                AnimationTagName;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FNotityProjectile                                   NotifyConfig;                                            // 0x0008(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NotifyProjectileByCondition
	 * Size -> 0x0030
	 */
	struct FNotifyProjectileByCondition
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FNotityProjectile                                   NotifyConfig;                                            // 0x0010(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NotifyProjectileConfigPackage
	 * Size -> 0x0040
	 */
	struct FNotifyProjectileConfigPackage
	{
	public:
		struct FNotityProjectile                                   NotifyConfig;                                            // 0x0000(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FNotifyProjectileByTag>                      NotifyByTagArray;                                        // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FNotifyProjectileByCondition>                NotifyByConditionArray;                                  // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyProjectileNotifyParam
	 * Size -> 0x001C
	 */
	struct FSBEnemyProjectileNotifyParam
	{
	public:
		bool                                                       bUseLookAtVirtualSocket;                                 // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TLQ8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LookAtVirtualSocketSpownLocation;                        // 0x0004(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LookAtVirtualSocketRotateLocation;                       // 0x0010(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyNotifyCastMagicEffectParams
	 * Size -> 0x0108
	 */
	struct FSBEnemyNotifyCastMagicEffectParams
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x001C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttached;                                               // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSetStartTimeWithProjectileStartTime;                    // 0x002D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2V7D[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WaitStartTime;                                           // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdjustLifeTimeToProjectileSpawnNotify;                  // 0x0034(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7SVT[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LifeTime;                                                // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RVYZ[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventVariables                                   AkEventOnBegin;                                          // 0x0040(0x0040) Edit, NativeAccessSpecifierPublic
		bool                                                       bIsAkEventStopWhenDestroyed;                             // 0x0080(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WMPU[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventVariables                                   AkEventOnEnd;                                            // 0x0088(0x0040) Edit, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   AkEventOnCancel;                                         // 0x00C8(0x0040) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAdjustRootMotionSetupPicker
	 * Size -> 0x0010
	 */
	struct FSBCharacterAdjustRootMotionSetupPicker
	{
	public:
		unsigned char                                              TargetSetupInterface[0x10];                              // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPredictTargetProjectileInfo
	 * Size -> 0x0018
	 */
	struct FSBEnemyPredictTargetProjectileInfo
	{
	public:
		struct FDataTableRowHandle                                 ProjectileHandle;                                        // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                SpawnSocketName;                                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyProjectileChantEffectInfo
	 * Size -> 0x0030
	 */
	struct FSBEnemyProjectileChantEffectInfo
	{
	public:
		class UClass*                                              ChantEffect;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PositionOffset;                                          // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x001C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ScaleOffset;                                             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachToActor;                                          // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PFPU[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySkillMarkerSetting
	 * Size -> 0x0030
	 */
	struct FSBEnemySkillMarkerSetting
	{
	public:
		class UClass*                                              MarkerActor;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSetMarkerRadius : 1;                                    // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X7G8[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MarkerRadius;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillMarkerPlace                                        MarkerPlaceType;                                         // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UTCU[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RangeMin;                                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangeMax;                                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightRange;                                             // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MarkerColRadius;                                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationSpeed;                                           // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowMarkerAnytime;                                      // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YXWS[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantMarkerMinimumParams
	 * Size -> 0x0078
	 */
	struct FSBEnemyChantMarkerMinimumParams
	{
	public:
		struct FSBEnemySkillMarkerSetting                          EnemySkillMarkerSetting;                                 // 0x0000(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0030(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMarkerTargetingType                                       TargetingType;                                           // 0x003C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DL0Q[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharacterAdjustRootMotionSetupPicker             AdjustRootMotionSetupPicker;                             // 0x0040(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    TargetIndex;                                             // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFixedLocation;                                        // 0x0054(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMarkerSizeType                                            SizeType;                                                // 0x0055(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZZ79[0x2];                                   // 0x0056(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SizeMargin;                                              // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PKDE[0x1C];                                  // 0x005C(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantMarkerParams
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	struct FSBEnemyChantMarkerParams : public FSBEnemyChantMarkerMinimumParams
	{
	public:
		float                                                      WaitStartTime;                                           // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitEndTime;                                             // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0084(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartsBreakInfo
	 * Size -> 0x000C
	 */
	struct FSBPartsBreakInfo
	{
	public:
		class FName                                                CollsionGroupName;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PartsStep;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNotifyParticleEffectFloatParams
	 * Size -> 0x000C
	 */
	struct FSBNotifyParticleEffectFloatParams
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNotifyParticleEffectVectorParams
	 * Size -> 0x0014
	 */
	struct FSBNotifyParticleEffectVectorParams
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Value;                                                   // 0x0008(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttributeEffectInfo
	 * Size -> 0x0010
	 */
	struct FSBAttributeEffectInfo
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              EffectActor;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNotifyParticleEffectParams
	 * Size -> 0x00C8
	 */
	struct FSBNotifyParticleEffectParams
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              EffectActor;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEffectTarget                                              EffectTarget;                                            // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PSCM[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x001C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0028(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bAttached;                                               // 0x0034(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCastShadow;                                             // 0x0035(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71AF[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ActorParameterName;                                      // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBNotifyParticleEffectFloatParams>          FloatParameter;                                          // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBNotifyParticleEffectVectorParams>         VectorParameter;                                         // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyOwnerMeshScale;                                    // 0x0064(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomWeaponScale;                                 // 0x0065(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIdentificationFriendOrFoe;                              // 0x0066(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIdentificationFriendOrFoeSendHealParam;                 // 0x0067(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectVisibleType                                       VisibleType;                                             // 0x0068(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KR1T[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ESBAttribute, struct FSBAttributeEffectInfo>          AttributeEffectInfos;                                    // 0x0070(0x0050) Edit, NativeAccessSpecifierPublic
		bool                                                       bSpawnLocalController;                                   // 0x00C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EG3N[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectSetting
	 * Size -> 0x0100 (FullSize[0x0150] - InheritedSize[0x0050])
	 */
	struct FSBEffectSetting : public FSBEffectSettingBase
	{
	public:
		class UParticleSystem*                                     Particle;                                                // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UNiagaraSystem*                                      NiagaraSystem;                                           // 0x0058(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              EffectActor;                                             // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      EffectActorList;                                         // 0x0068(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Sound;                                                   // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   SoundParam;                                              // 0x0080(0x0040) Edit, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       EndSound;                                                // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   EndSoundParam;                                           // 0x00C8(0x0040) Edit, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       CauserPlayerVoice;                                       // 0x0108(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   CauserPlayerVoiceParam;                                  // 0x0110(0x0040) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NotifySwitchVisibilityTarget
	 * Size -> 0x0038
	 */
	struct FNotifySwitchVisibilityTarget
	{
	public:
		bool                                                       bChangeToVisible;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R6H7[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        TargetComponentName;                                     // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        TargetComponentTag;                                      // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TargetMaterialID;                                        // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartsBreakState
	 * Size -> 0x0010
	 */
	struct FSBPartsBreakState
	{
	public:
		class FName                                                CollisionGroupName;                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BreakStep;                                               // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBComparisonOperator                                      ComparisonOperator;                                      // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_82FT[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAdjustRootMotionSettings_AdjustVelocity
	 * Size -> 0x0001
	 */
	struct FSBCharacterAdjustRootMotionSettings_AdjustVelocity
	{
	public:
		ESBAdjustRootMotionAdjustType                              AdjustType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAdjustRootMotionSettings_TargetLocation
	 * Size -> 0x0028
	 */
	struct FSBCharacterAdjustRootMotionSettings_TargetLocation
	{
	public:
		ESBAdjustRootMotionTargetType                              TargetType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BXFT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetDistanceRatio;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetLocationOffsetZ;                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequiredStartLocationOffsetZ;                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TraceTargetBelowHeight;                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustRangeMin;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustRangeMax;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawAngleMax;                                             // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchAngleMax;                                           // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdjustRootMotionZAxisMode                               ZAxisMode;                                               // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P3OB[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAdjustRootMotionSettings_Facing
	 * Size -> 0x0008
	 */
	struct FSBCharacterAdjustRootMotionSettings_Facing
	{
	public:
		float                                                      FacingRotationRate;                                      // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharacterAdjustRootMotion_Facing_RotationType           RotationType;                                            // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2AOT[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAdjustRootMotionSettings_Following
	 * Size -> 0x0008
	 */
	struct FSBCharacterAdjustRootMotionSettings_Following
	{
	public:
		float                                                      FollowTime;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FollowVelocity;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdjustRootMotionSettings
	 * Size -> 0x00C0
	 */
	struct FSBAdjustRootMotionSettings
	{
	public:
		struct FSBCharacterAdjustRootMotionSettings_AdjustVelocity AdjustVelocitySettings;                                  // 0x0000(0x0001) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T9CT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharacterAdjustRootMotionSettings_TargetLocation TargetLocationSettings;                                  // 0x0004(0x0028) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharacterAdjustRootMotionSettings_Facing         FacingSettings;                                          // 0x002C(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharacterAdjustRootMotionSettings_Following      FollowingSettings;                                       // 0x0034(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             ScaleRatio;                                              // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TargetLocationOffsetSocketName;                          // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocationOffset;                                    // 0x0050(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnablePredictTarget;                                    // 0x005C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IQGH[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TargetIndex;                                             // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdjustRootMotionAdjustType                              AdjustType;                                              // 0x0064(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdjustRootMotionTargetInterpolationType                 TargetInterpolationType;                                 // 0x0065(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PX6R[0x2];                                   // 0x0066(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetDistanceRatio;                                     // 0x0068(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetLocationOffsetZ;                                   // 0x006C(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequiredStartLocationOffsetZ;                            // 0x0070(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TraceTargetBelowHeight;                                  // 0x0074(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustRangeMin;                                          // 0x0078(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdjustRangeMax;                                          // 0x007C(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawAngleMax;                                             // 0x0080(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchAngleMax;                                           // 0x0084(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseManualOffset;                                        // 0x0088(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdjustWithZAxis;                                        // 0x0089(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdjustNavMeshArea;                                      // 0x008A(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckNavigationRaycast;                                 // 0x008B(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdjustRootMotionZAxisMode                               ZAxisMode;                                               // 0x008C(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8YZQ[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FacingRotationRate;                                      // 0x0090(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FollowTime;                                              // 0x0094(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FollowRotationRate;                                      // 0x0098(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FollowVelocity;                                          // 0x009C(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PredictTime;                                             // 0x00A0(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinAdjustLength;                                         // 0x00A4(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAdjustLength;                                         // 0x00A8(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawMaxAngle;                                             // 0x00AC(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMaxAngle;                                           // 0x00B0(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrontTargetOffset;                                       // 0x00B4(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TopTargetOffset;                                         // 0x00B8(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawRotationRate;                                         // 0x00BC(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackHitStatusAilmentCondition
	 * Size -> 0x0028
	 */
	struct FSBAttackHitStatusAilmentCondition
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 StatusAilmentHandle;                                     // 0x0010(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bApplyDuplicateStatusAilment;                            // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckSelfApplyOnlyDuplicateStatusAilment;               // 0x0021(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TSYN[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckFloatParam
	 * Size -> 0x0018
	 */
	struct FSBConditionCheckFloatParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      FloatValue;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MD73[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackCollisionAddition
	 * Size -> 0x0018
	 */
	struct FSBAttackCollisionAddition
	{
	public:
		bool                                                       bOverrideAttackHitType;                                  // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttackHitType                                             AttackHitType;                                           // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AttackDirectionOffset;                                   // 0x0002(0x0002) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GCWQ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckFloatParam>                 ModifyScaleList;                                         // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CameraComponentLocationData
	 * Size -> 0x0010
	 */
	struct FCameraComponentLocationData
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetZ;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLocationWeightedAverage;                              // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_URZJ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraZoomData
	 * Size -> 0x0010
	 */
	struct FPlayerCameraZoomData
	{
	public:
		float                                                      ZoomDuration;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomStep;                                                // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomStick;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBlendInOverwriteZoomLevel;                             // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBlendOutOverwriteZoomLevel;                            // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsZoomLevelSave;                                         // 0x000E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GEMH[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraOffsetData
	 * Size -> 0x0018
	 */
	struct FPlayerCameraOffsetData
	{
	public:
		struct FVector                                             MinLengthCameraOffset;                                   // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MaxLengthCameraOffset;                                   // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPitchRotationOffsetData
	 * Size -> 0x0030
	 */
	struct FSBPitchRotationOffsetData
	{
	public:
		unsigned char                                              PitchRotationCurve[0x28];                                // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      MinArmLenghRatio;                                        // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxArmLenghRatio;                                        // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraArmLengthData
	 * Size -> 0x000C
	 */
	struct FPlayerCameraArmLengthData
	{
	public:
		float                                                      MinArmLength;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxArmLength;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultArmLength;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraLagData
	 * Size -> 0x0020
	 */
	struct FPlayerCameraLagData
	{
	public:
		bool                                                       EnableCameraLag;                                         // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9S3W[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinLengthCameraLagSpeed;                                 // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxLengthCameraLagSpeed;                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableCameraRotationLag;                                 // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9QHT[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinLengthCameraRotationLagSpeed;                         // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxLengthCameraRotationLagSpeed;                         // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinLengthCameraLagMaxDistance;                           // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxLengthCameraLagMaxDistance;                           // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraBlendTimeData
	 * Size -> 0x000C
	 */
	struct FPlayerCameraBlendTimeData
	{
	public:
		float                                                      BlendInTime;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseBlendOutTime;                                         // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CBY[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlendOutTime;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraBlendCurveData
	 * Size -> 0x0058
	 */
	struct FPlayerCameraBlendCurveData
	{
	public:
		unsigned char                                              BlendInCurve[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       UseBlendOutCurve;                                        // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61NC[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BlendOutCurve[0x28];                                     // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraPitchData
	 * Size -> 0x0008
	 */
	struct FPlayerCameraPitchData
	{
	public:
		bool                                                       UseDefaultPitch;                                         // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseResetPitch;                                           // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LGU[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Pitch;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraResetYawData
	 * Size -> 0x0003
	 */
	struct FPlayerCameraResetYawData
	{
	public:
		bool                                                       BlendInResetYaw;                                         // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseBlendOutResetYaw;                                     // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BlendOutResetYaw;                                        // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraRotationLimitData
	 * Size -> 0x0010
	 */
	struct FPlayerCameraRotationLimitData
	{
	public:
		float                                                      PitchLimitMax;                                           // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchLimitMin;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawLimitMax;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawLimitMin;                                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraRotationSpeedData
	 * Size -> 0x0010
	 */
	struct FPlayerCameraRotationSpeedData
	{
	public:
		float                                                      RotationSpeedYaw;                                        // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationSpeedPitch;                                      // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationSpeedYaw_Mouse;                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationSpeedPitch_Mouse;                                // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCameraDistanceTransparentParam
	 * Size -> 0x000C
	 */
	struct FSBCameraDistanceTransparentParam
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceBuffer;                                          // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCheckSokcet;                                          // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AKX6[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraTransparentDistanceData
	 * Size -> 0x0010
	 */
	struct FPlayerCameraTransparentDistanceData
	{
	public:
		bool                                                       UseCameraDistanceTransparentParam;                       // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JW52[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCameraDistanceTransparentParam                   CameraDistanceTransparentParam;                          // 0x0004(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraEndData
	 * Size -> 0x0018
	 */
	struct FPlayerCameraEndData
	{
	public:
		TArray<class FName>                                        KeepCameraAnimTags;                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      WaitTagCheckDeltaTime;                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N8L4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCameraData
	 * Size -> 0x0170 (FullSize[0x0178] - InheritedSize[0x0008])
	 */
	struct FPlayerCameraData : public FTableRowBase
	{
	public:
		ESBCameraType                                              CameraType;                                              // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1IKU[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FOV;                                                     // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCameraComponentLocationData                        ComponentLocationData;                                   // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraZoomData                               ZoomData;                                                // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraOffsetData                             CameraOffsetData;                                        // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FSBPitchRotationOffsetData                          PitchRotationOffsetData;                                 // 0x0048(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FPlayerCameraArmLengthData                          ArmLengthData;                                           // 0x0078(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraLagData                                LagData;                                                 // 0x0084(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraBlendTimeData                          BlendTimeData;                                           // 0x00A4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraBlendCurveData                         BlendCurveData;                                          // 0x00B0(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FPlayerCameraPitchData                              PitchData;                                               // 0x0108(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraResetYawData                           ResetYawData;                                            // 0x0110(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_56IX[0x1];                                   // 0x0113(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerCameraRotationLimitData                      RotationLimitData;                                       // 0x0114(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraRotationSpeedData                      RotationSpeedData;                                       // 0x0124(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerCameraTransparentDistanceData                TransparentDistanceData;                                 // 0x0134(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03NT[0x4];                                   // 0x0144(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerCameraEndData                                EndData;                                                 // 0x0148(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ESBKeepCameraAimLocation                                   KeepAimLocation;                                         // 0x0160(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsLockonSuspend;                                         // 0x0161(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A600[0x16];                                  // 0x0162(0x0016) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.GameplayCameraSettings
	 * Size -> 0x01A8 (FullSize[0x01B0] - InheritedSize[0x0008])
	 */
	struct FGameplayCameraSettings : public FTableRowBase
	{
	public:
		bool                                                       Active;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BP4Z[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CameraID;                                                // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlayerCameraData                                   CameraData;                                              // 0x0020(0x0178) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ECameraPriority                                            CameraPriority;                                          // 0x0198(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E8BS[0x17];                                  // 0x0199(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCorrectTargetDirectionInfo
	 * Size -> 0x0030
	 */
	struct FSBCorrectTargetDirectionInfo
	{
	public:
		unsigned char                                              UnknownData_Q3HP[0x24];                                  // 0x0000(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsUpdatingCorrectDirection;                             // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ONH1[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxRotationDegreePerSecond;                              // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxCorrectDegree;                                        // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageReactionSpawn
	 * Size -> 0x0028
	 */
	struct FSBFoliageReactionSpawn
	{
	public:
		struct FVector                                             LocationOffset;                                          // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartDelay;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 DataPreset;                                              // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageReactionNotify
	 * Size -> 0x0030
	 */
	struct FSBFoliageReactionNotify
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBFoliageReactionSpawn                             SpawnParams;                                             // 0x0008(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayingEffect
	 * Size -> 0x00C8
	 */
	struct FSBPlayingEffect
	{
	public:
		unsigned char                                              UnknownData_TQD4[0xC8];                                  // 0x0000(0x00C8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNotifyStatePlayingEffect
	 * Size -> 0x00D8
	 */
	struct FSBNotifyStatePlayingEffect
	{
	public:
		unsigned char                                              UnknownData_20N5[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x0008(0x00C8) Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_8PBP[0x8];                                   // 0x00D0(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNotifyTrailParams
	 * Size -> 0x0038
	 */
	struct FSBNotifyTrailParams
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FirstSocketName;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SecondSocketName;                                        // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETrailWidthMode                                            WidthScaleMode;                                          // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8VDE[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WidthScaleCurve;                                         // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        Tags;                                                    // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ArenaMissionAchieve
	 * Size -> 0x0040
	 */
	struct FArenaMissionAchieve
	{
	public:
		EArenaMissionAchieveType                                   Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2PSQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TotalDealDamage;                                         // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DealDamageAmount;                                        // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalAmount;                                          // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillAmount;                                             // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KQCF[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KillEnemyId;                                             // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillEnemyAmount;                                         // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImagineAmount;                                           // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CastSkill;                                               // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BreakAction;                                             // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbsoluteDefense;                                         // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_55S9[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ArenaMissionInfo
	 * Size -> 0x0048
	 */
	struct FArenaMissionInfo
	{
	public:
		TArray<struct FArenaMissionAchieve>                        Achieves;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         StatusAlimentHandle;                                     // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      TimeLimit;                                               // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CVNR[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                RewardText;                                              // 0x0028(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bCleared;                                                // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S9C9[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ArenaMissionProgressInfo
	 * Size -> 0x0028
	 */
	struct FArenaMissionProgressInfo
	{
	public:
		float                                                      TotalDealDamage;                                         // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DealDamageAmount;                                        // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalHitAmount;                                       // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillHitAmount;                                          // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillEnemyAmount;                                         // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImagineAmount;                                           // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CastSkill;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BreakAction;                                             // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbsoluteDefense;                                         // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCleared;                                                // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MRAO[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.NavDataInfo
	 * Size -> 0x0014
	 */
	struct FNavDataInfo
	{
	public:
		class FName                                                NavMeshName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolatileNavMeshVersion;                                  // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CachedPolyBaseNum;                                       // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CachedPolyNum;                                           // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAutoWordData
	 * Size -> 0x000C
	 */
	struct FSBAutoWordData
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NM9J[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooolTime;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMBattleAreaContentIdData
	 * Size -> 0x0020
	 */
	struct FSBBGMBattleAreaContentIdData
	{
	public:
		class FString                                              ContentId;                                               // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleBGMType                                           BattleBGMType;                                           // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQ2P[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       BattleBGMEvent;                                          // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElementBurstBonusLevelSetting
	 * Size -> 0x0058
	 */
	struct FSBElementBurstBonusLevelSetting
	{
	public:
		int32_t                                                    BonusLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NeedAccumAmount;                                         // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ESBAttribute, float>                                  BurstEndDamageModifyRateList;                            // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBKnockBackWeightClass
	 * Size -> 0x0008
	 */
	struct FSBKnockBackWeightClass
	{
	public:
		ESBKnockBackWeightClass                                    WeightClass;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemyReactionType                                       DamageReactionType;                                      // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RAZ9[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      KnockBackDistanceRatio;                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHitKnockBackSetting
	 * Size -> 0x0018
	 */
	struct FSBHitKnockBackSetting
	{
	public:
		ESBHitKnockBackPower                                       KnockBackPowerType;                                      // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideKnockBackPower;                                 // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2CER[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OverrideKnockBackPower;                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBHitKnockBackTime                                        KnockBackTimeType;                                       // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideKnockBackTime;                                  // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1I9I[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OverrideKnockBackTime;                                   // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoAttackerKnockBack : 1;                                // 0x0010(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseKnockBackDirection : 1;                          // 0x0010(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedGiveStunToKnockBack : 1;                            // 0x0010(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LGEU[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CapsuleSpace;                                            // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGuardKnockBackSetting
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FSBGuardKnockBackSetting : public FSBHitKnockBackSetting
	{
	public:
		float                                                      ShieldDamageRate;                                        // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBGuardKnockBackPower                                     GuardKnockBackPower;                                     // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MSEL[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBHitSlomoCurveSetting
	 * Size -> 0x0010
	 */
	struct FSBHitSlomoCurveSetting
	{
	public:
		ESBHitSlomoPower                                           HitSlomoPower;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YGR2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         CurveData;                                               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSplitDamageUESetting
	 * Size -> 0x0008
	 */
	struct FSBSplitDamageUESetting
	{
	public:
		struct FSBAttackID                                         AttackID;                                                // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    SplitNum;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyChainComboLimitTimeSetting
	 * Size -> 0x0008
	 */
	struct FSBPartyChainComboLimitTimeSetting
	{
	public:
		int32_t                                                    ComboCount;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitTime;                                               // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyChainBonusDamageSetting
	 * Size -> 0x0008
	 */
	struct FSBPartyChainBonusDamageSetting
	{
	public:
		int32_t                                                    NeedComboCount;                                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageModifyRate;                                        // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyChainBonusStatusSetting
	 * Size -> 0x0018
	 */
	struct FSBPartyChainBonusStatusSetting
	{
	public:
		int32_t                                                    NeedComboCount;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4CA6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusRowHandle;                                         // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyChainComboCountLogSetting
	 * Size -> 0x0008
	 */
	struct FSBPartyChainComboCountLogSetting
	{
	public:
		int32_t                                                    NeedComboCount;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPartyChainComboCountLogType                             ShowLogType;                                             // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HU2Q[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyChainSettingParam
	 * Size -> 0x0050
	 */
	struct FSBPartyChainSettingParam
	{
	public:
		TArray<struct FSBPartyChainComboLimitTimeSetting>          PartyChainComboLimitTimeSettingList;                     // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    PartyChainComboCountOccurCoolTime;                       // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PartyChainComboCoolTime;                                 // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PartyChainComboLimitDistance;                            // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PartyChainMaxComboCount;                                 // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBPartyChainBonusDamageSetting>             PartyChainBonusDamageSettingList;                        // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBPartyChainBonusStatusSetting>             PartyChainBonusStatusSettingList;                        // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBPartyChainComboCountLogSetting>           PartyChainComboCountLogSettingList;                      // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLobbyEntry
	 * Size -> 0x0028
	 */
	struct FSBLobbyEntry
	{
	public:
		int32_t                                                    SearchResultsIndex;                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DungeonId;                                               // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YF4E[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              OwnerName;                                               // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentPlayerNum;                                        // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPlayerNum;                                            // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityMasterID
	 * Size -> 0x0004
	 */
	struct FSBAbilityMasterID
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEncryptNetSerializeID
	 * Size -> 0x0008
	 */
	struct FSBEncryptNetSerializeID
	{
	public:
		unsigned char                                              UnknownData_E144[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ID;                                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAilmentID
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FSBStatusAilmentID : public FSBEncryptNetSerializeID
	{	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAilmentAdjustParam
	 * Size -> 0x0008
	 */
	struct FSBStatusAilmentAdjustParam
	{
	public:
		unsigned char                                              UnknownData_VTM5[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAilmentHandle
	 * Size -> 0x0020
	 */
	struct FSBStatusAilmentHandle
	{
	public:
		unsigned char                                              UnknownData_YCXX[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0008(0x0010) Edit, DisableEditOnInstance, RepSkip, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FSBStatusAilmentAdjustParam                         AdjustParam;                                             // 0x0018(0x0008) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusMasterDataMediator
	 * Size -> 0x0070
	 */
	struct FSBBattleStatusMasterDataMediator
	{
	public:
		struct FSBAbilityMasterID                                  AbilityID;                                               // 0x0000(0x0004) NoDestructor, NativeAccessSpecifierPrivate
		int16_t                                                    Parts1Value1;                                            // 0x0004(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int16_t                                                    Parts1Value2;                                            // 0x0006(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int16_t                                                    Parts2Value1;                                            // 0x0008(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int16_t                                                    Parts2Value2;                                            // 0x000A(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I7ID[0x2C];                                  // 0x000C(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBStatusAilmentID                                  BattleStatusID;                                          // 0x0038(0x0008) NoDestructor, NativeAccessSpecifierPrivate
		struct FSBStatusAilmentHandle                              DataHandle;                                              // 0x0040(0x0020) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_MM8I[0x8];                                   // 0x0060(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Causer;                                                  // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveHandle
	 * Size -> 0x0080
	 */
	struct FSBPassiveHandle
	{
	public:
		bool                                                       bEnable : 1;                                             // 0x0000(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H5FH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   UniqueId;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBBattleStatusMasterDataMediator                   MasterDataMediator;                                      // 0x0008(0x0070) NoDestructor, NativeAccessSpecifierPublic
		ESBAbilityRequestSource                                    RequestType;                                             // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXYX[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDynamicTriggerData
	 * Size -> 0x0010
	 */
	struct FSBDynamicTriggerData
	{
	public:
		ESBAbilityDynamicTriggerType                               DynamicTriggerType;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NBDJ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    BeginTimeTicks;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectiveStatusAilment
	 * Size -> 0x0130
	 */
	struct FSBEffectiveStatusAilment
	{
	public:
		struct FSBBattleStatusMasterDataMediator                   MasterDataMediator;                                      // 0x0000(0x0070) NoDestructor, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      AbilityUniqueHandles;                                    // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsActive : 1;                                           // 0x0080(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsReserveDelete : 1;                                    // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TMGE[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               Invoker;                                                 // 0x0084(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              EffectiveUniqueHandle;                                   // 0x008C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilityRequestSource                                    RequestSourceType;                                       // 0x008D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QS76[0x2];                                   // 0x008E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    LimitTimeTicks;                                          // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YJW[0xC];                                   // 0x0098(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitRemainTime;                                          // 0x00A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USBAbility*>                                  Abilitys;                                                // 0x00A8(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IFWP[0x28];                                  // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USBAbilityCondition*>                         AbilityFinishConditions;                                 // 0x00E0(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LUCU[0x38];                                  // 0x00F0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESkillActionPosition                                       SkillPosition;                                           // 0x0128(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXCX[0x7];                                   // 0x0129(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBValueDataByID
	 * Size -> 0x0008
	 */
	struct FSBValueDataByID
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    Value;                                                   // 0x0004(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_USBV[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAlimentPointGravityConfig
	 * Size -> 0x0018
	 */
	struct FSBStatusAlimentPointGravityConfig
	{
	public:
		struct FVector_NetQuantize10                               GravityPoint;                                            // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize10                               GravityVector;                                           // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBValueDataByIDListData
	 * Size -> 0x0010
	 */
	struct FSBValueDataByIDListData
	{
	public:
		TArray<struct FSBValueDataByID>                            ValueDataByIDList;                                       // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectiveStatusParam
	 * Size -> 0x02E8
	 */
	struct FSBEffectiveStatusParam
	{
	public:
		unsigned char                                              UnknownData_EP60[0x34];                                  // 0x0000(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int8_t                                                     AddFireAttack;                                           // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     AddIceAttack;                                            // 0x0035(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     AddThunderAttack;                                        // 0x0036(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     AddEarthAttack;                                          // 0x0037(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     AddLightAttack;                                          // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     AddDarknessAttack;                                       // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AVT4[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBValueDataByID>                            AddElementAccumulationPowerList;                         // 0x0040(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            AddRacePowerList;                                        // 0x0050(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            AddAttributePowerList;                                   // 0x0060(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TMap<class FString, int16_t>                               AddEnemyIDPowerList;                                     // 0x0070(0x0050) RepSkip, NativeAccessSpecifierPublic
		TMap<class FString, int16_t>                               AddDungeonIDPowerList;                                   // 0x00C0(0x0050) RepSkip, NativeAccessSpecifierPublic
		TMap<int32_t, int16_t>                                     AddTacticalSkillIDPowerList;                             // 0x0110(0x0050) RepSkip, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            AddSkillPowerList;                                       // 0x0160(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            AddDamageAttackTypePowerList;                            // 0x0170(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecGiveDamage;                                     // 0x0180(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecDamageRecieve;                                  // 0x0182(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CB4J[0x4];                                   // 0x0184(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBValueDataByID>                            IncAndDecAttackTypeRecieveDamageList;                    // 0x0188(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            IncAndDecElementRecieveDamageList;                       // 0x0198(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            IncAndDecBattleImagineElementRecieveDamageList;          // 0x01A8(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecDotDamage_Fire;                                 // 0x01B8(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecDotDamage_Thunder;                              // 0x01BA(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecDotTime_Light;                                  // 0x01BC(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecDotDamage_Darkness;                             // 0x01BE(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IncAndDecDotRateToHP_Fire;                               // 0x01C0(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IncAndDecParalyzeInterval;                               // 0x01C4(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecDarkIncidenceRate;                              // 0x01C8(0x0002) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3U6[0x6];                                   // 0x01CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBValueDataByID>                            IncAndDecControlBadConditionList;                        // 0x01D0(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            IncAndDecStatusResistValueList;                          // 0x01E0(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<class FName>                                        InvalidAbilitys;                                         // 0x01F0(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		TArray<ESBBattleEffectiveGroup>                            InvalidGroups;                                           // 0x0200(0x0010) ZeroConstructor, RepSkip, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecMoveSpeed;                                      // 0x0210(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecJumpVelocity;                                   // 0x0212(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecResurrectionSpeed;                              // 0x0214(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecStaminaRecovery;                                // 0x0216(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecStaminaReduceCorrect;                           // 0x0218(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecStaminaByDodge;                                 // 0x021A(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecStaminaByJump;                                  // 0x021C(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecStaminaByDash;                                  // 0x021E(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0GKB[0x58];                                  // 0x0220(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int16_t                                                    IncAndDecHateCalcMagnification;                          // 0x0278(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DIT3[0x6];                                   // 0x027A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBValueDataByID>                            IncAndDecSkillRecastTimeList;                            // 0x0280(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBValueDataByID>                            IncAndDecTacticalSkillIDRecastTimeList;                  // 0x0290(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int16_t                                                    IncAndDecSkillButtonChargeTime;                          // 0x02A0(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JS8I[0x6];                                   // 0x02A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBStatusAlimentPointGravityConfig>          GravityConfigList;                                       // 0x02A8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TS22[0x4];                                   // 0x02B8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AddMagicPointWhenResurrectionPlayer;                     // 0x02BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    GuardShieldDamage;                                       // 0x02C0(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    GuardSpecialGauge;                                       // 0x02C2(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    GuardReduceSkillRecastTime;                              // 0x02C4(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    GuardReduceSpecialSkillRecastTime;                       // 0x02C6(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZV7[0x8];                                   // 0x02C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBValueDataByIDListData>                    AddElementAccumulationTacticalSkillIDPowerList;          // 0x02D0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class AActor*                                              Owner;                                                   // 0x02E0(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectiveImpotantStatusParam
	 * Size -> 0x0034
	 */
	struct FSBEffectiveImpotantStatusParam
	{
	public:
		int16_t                                                    AddHp;                                                   // 0x0000(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddPercentHp;                                            // 0x0002(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddStamina;                                              // 0x0004(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddPercentStamina;                                       // 0x0006(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddSTR;                                                  // 0x0008(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddVIT;                                                  // 0x000A(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddDEX;                                                  // 0x000C(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddINT;                                                  // 0x000E(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddMND;                                                  // 0x0010(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddAttackPower;                                          // 0x0012(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     AddPercentAttackPower;                                   // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RRBC[0x1];                                   // 0x0015(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int16_t                                                    AddDefencePower;                                         // 0x0016(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     AddPercentDefencePower;                                  // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D7GP[0x1];                                   // 0x0019(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int16_t                                                    AddRecuperativePower;                                    // 0x001A(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddCriticalHitRate;                                      // 0x001C(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddCriticalHitPower;                                     // 0x001E(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBInvincibleLevel                                         InvincibleLevel;                                         // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NSSX[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bSuperArmor : 1;                                         // 0x0024(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q5WD[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int16_t                                                    AddFireResist;                                           // 0x0028(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddIceResist;                                            // 0x002A(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddThunderResist;                                        // 0x002C(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddEarthResist;                                          // 0x002E(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddLightResist;                                          // 0x0030(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    AddDarknessResist;                                       // 0x0032(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusEffectID
	 * Size -> 0x0008
	 */
	struct FSBBattleStatusEffectID
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityGroupConfig
	 * Size -> 0x0038
	 */
	struct FSBAbilityGroupConfig
	{
	public:
		struct FSBBattleStatusEffectID                             EffectId;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		ESBStatusAilmentIconType                                   IconType;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilityFlags                                            Flag;                                                    // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ISOO[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxTriggers;                                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilitySimultaneousActivationControl                    SimultaneousControl;                                     // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H7MF[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBBattleEffectiveGroup>                            ExcludeGroupList;                                        // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bIsImpossibleSummonMount : 1;                            // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyGroupCalcToAbility : 1;                            // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XOI8[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBAbilityCalcSuccessRate                                  CalcSuccessRate;                                         // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleStatusResistType                                  ReferenceResistType;                                     // 0x002D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XNGA[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bExclusionLevelDifference : 1;                           // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyAccumulation : 1;                                  // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E299[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAccumulationResistSetting
	 * Size -> 0x000C
	 */
	struct FSBAccumulationResistSetting
	{
	public:
		float                                                      SuccessRate;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectiveTimeRate;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMTriggerData
	 * Size -> 0x0030
	 */
	struct FSBBGMTriggerData
	{
	public:
		bool                                                       IsActive;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J1UW[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AreaId;                                                  // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckValidGameMode;                                     // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q8QK[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBBGMMapGameMode>                                  ValidGameModeList;                                       // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateBoneScalePartsData
	 * Size -> 0x0010
	 */
	struct FSBCharaCreateBoneScalePartsData
	{
	public:
		ECharaCreateBoneScaleType                                  ScaleType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaCreateBoneScaleID                                    BoneID;                                                  // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9PIO[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultValue;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateBoneScaleGroupData
	 * Size -> 0x0020
	 */
	struct FSBCharaCreateBoneScaleGroupData
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultSliderValue;                                      // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LVV[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharaCreateBoneScalePartsData>            PartsList;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBreathSetting
	 * Size -> 0x0050
	 */
	struct FSBBreathSetting
	{
	public:
		unsigned char                                              ParticleEffect[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              NiagaraEffect[0x28];                                     // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBBTNodePropertyWalkingMode
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSBBTNodePropertyWalkingMode : public FAIFwBTNodePropertyEnumBase
	{
	public:
		ESBEnemyWalkingMode                                        DefaultValue;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QHRP[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBTNodePropertyWarpDirectionType
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSBBTNodePropertyWarpDirectionType : public FAIFwBTNodePropertyEnumBase
	{
	public:
		ESBEnemyWarpDirectionType                                  DefaultValue;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ETGE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CharaCreateBoneScaleList
	 * Size -> 0x0068
	 */
	struct FCharaCreateBoneScaleList
	{
	public:
		class USBCharaCreateBoneScaleData*                         C000;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         M000;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         M100;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         M200;                                                    // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         M300;                                                    // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         M400;                                                    // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         M500;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         F000;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         F100;                                                    // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         F200;                                                    // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         F300;                                                    // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         F400;                                                    // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBCharaCreateBoneScaleData*                         F500;                                                    // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartsDamageEffectParams
	 * Size -> 0x0038
	 */
	struct FSBPartsDamageEffectParams
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x001C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttached;                                               // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCastShadow;                                             // 0x002D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEffectId                                                  EffectId;                                                // 0x002E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FABT[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AkEvent;                                                 // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElementResistanceSetting
	 * Size -> 0x0008
	 */
	struct FSBElementResistanceSetting
	{
	public:
		ESBAttribute                                               ElementType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J751[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResistanceValue;                                         // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCollisionGroupInfo
	 * Size -> 0x0060
	 */
	struct FSBCollisionGroupInfo
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageScale;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitPointRate;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              NextHitPointRate;                                        // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBPartsDamageEffectParams>                  PartsDamageEffects;                                      // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       Weakness;                                                // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X388[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBElementResistanceSetting>                 PartsResistElementList;                                  // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       ResistElementDamage;                                     // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X0J5[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        GroupNameToShareDamage;                                  // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCollisionGroupHitPointInfo
	 * Size -> 0x0018
	 */
	struct FSBCollisionGroupHitPointInfo
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHitPoint;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentHitPoint;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BreakStep;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5D70[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBElementDamageCondition
	 * Size -> 0x0050
	 */
	struct FSBElementDamageCondition
	{
	public:
		float                                                      AccumDamage;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O4N6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StatusAilmentTimer;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U5TY[0x1C];                                  // 0x000C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StatusAilmentHitPoint;                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9DYX[0x2];                                   // 0x002C(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BurstBonusLevel;                                         // 0x002E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7F1Y[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BurstBonusTimer;                                         // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MCBB[0x1C];                                  // 0x0034(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackManageNumberInfo
	 * Size -> 0x0008
	 */
	struct FSBAttackManageNumberInfo
	{
	public:
		int32_t                                                    AttackID;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ManageNumber;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStunInfo
	 * Size -> 0x0014
	 */
	struct FSBStunInfo
	{
	public:
		int32_t                                                    StunLevel;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStunDirection                                           StunDirection;                                           // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NWA4[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AttackOriginalStunValue;                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLevelDiff;                                            // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FSHH[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LevelDiff;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageInfo
	 * Size -> 0x0058
	 */
	struct FSBDamageInfo
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VOAZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UASDamageType*                                       Type;                                                    // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDamageDirection                                         Direction;                                               // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4DB[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ImpulseDir;                                              // 0x0014(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class APawn>                                PawnInstigator;                                          // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBStunInfo                                         StunInfo;                                                // 0x0028(0x0014) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		ESBAttribute                                               DeathElementType;                                        // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HPU[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bHitWeakPoint : 1;                                       // 0x0040(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XFO1[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBFieldDamageType                                         FieldDamageType;                                         // 0x0044(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDeathReactionType                                       DeathReactionType;                                       // 0x0045(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IT8T[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bBreakActionDamage : 1;                                  // 0x0048(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VKZP[0xF];                                   // 0x0049(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCounterDamageRate
	 * Size -> 0x0018
	 */
	struct FSBCounterDamageRate
	{
	public:
		float                                                      Attack;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stun;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KneelDown;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Down;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperDown;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HiUpperDown;                                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponAttach
	 * Size -> 0x0028
	 */
	struct FSBWeaponAttach
	{
	public:
		ESBWeaponAttach                                            AttachSocket;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H0KU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale3D;                                                 // 0x001C(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInventoryWeapon
	 * Size -> 0x0068
	 */
	struct FSBInventoryWeapon
	{
	public:
		ESBWeaponEquipType                                         EquipType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q547[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                DefaultAssetName;                                        // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBWeaponAttach                                     SheatheAttach;                                           // 0x000C(0x0028) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBWeaponAttach                                     UnsheatheAttach;                                         // 0x0034(0x0028) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CT4G[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASBWeapon*                                           CurrentWeapon;                                           // 0x0060(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateColorHSV
	 * Size -> 0x000C
	 */
	struct FSBCharaCreateColorHSV
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Saturation;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnWeaponLoadParam
	 * Size -> 0x001C
	 */
	struct FSBSpawnWeaponLoadParam
	{
	public:
		ESBWeaponEquipType                                         EquipType;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IN75[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AssetName;                                               // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              ColorHSV;                                                // 0x000C(0x000C) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MaterialIndex;                                           // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEquipWeapon
	 * Size -> 0x0004 (FullSize[0x002C] - InheritedSize[0x0028])
	 */
	struct FSBEquipWeapon : public FASEquipWeapon
	{
	public:
		ESBWeaponAttach                                            WeaponAttach;                                            // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NP55[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayEffect
	 * Size -> 0x0038
	 */
	struct FSBPlayEffect
	{
	public:
		EEffectId                                                  ID;                                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LUZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     AttachToComponent;                                       // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachSocketName;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		EAttachLocation                                            LocationType;                                            // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoDestroy : 1;                                        // 0x0031(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9MVG[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpecialHitEffect
	 * Size -> 0x01B0
	 */
	struct FSBSpecialHitEffect
	{
	public:
		class FName                                                EffectName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      Effect;                                                  // 0x0008(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMoveSpeedSetting
	 * Size -> 0x0018
	 */
	struct FSBMoveSpeedSetting
	{
	public:
		TArray<class FName>                                        AnimTags;                                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      MoveSpeedRate;                                           // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X3R0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateMakeup
	 * Size -> 0x0014
	 */
	struct FSBCharaCreateMakeup
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Mirror;                                                  // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YXXQ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharaCreateColorHSV                              Color;                                                   // 0x0008(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateMole
	 * Size -> 0x0002
	 */
	struct FSBCharaCreateMole
	{
	public:
		bool                                                       IsOn;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsMirror;                                                // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateMoleDataTable
	 * Size -> 0x0010
	 */
	struct FSBCharaCreateMoleDataTable
	{
	public:
		TArray<struct FSBCharaCreateMole>                          MoleDatas;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateParameter
	 * Size -> 0x03C0
	 */
	struct FSBCharaCreateParameter
	{
	public:
		ECharaPartsCharacterType                                   CharacterType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharacterGender                                         Gender;                                                  // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsBody                                            BodyType;                                                // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZHXE[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FaceType;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VoiceId;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENpcJob                                                    JobType;                                                 // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsRegion                                          Region;                                                  // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVSU[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                BodyName;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              BodyColor;                                               // 0x0018(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    BodyMaterial;                                            // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FaceName;                                                // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              FaceColor;                                               // 0x0030(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    FaceMaterial;                                            // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinColorID;                                             // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              SkinColor;                                               // 0x0044(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bHairHatOption;                                          // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OF4E[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                HairName;                                                // 0x0054(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              HairCostumeColor;                                        // 0x005C(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              HairColor1;                                              // 0x0068(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              HairColor2;                                              // 0x0074(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              HairColor3;                                              // 0x0080(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        HairMeshSwitch;                                          // 0x008C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HairGradationType;                                       // 0x009C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EyelashColorValue;                                       // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EyelashColorIndex;                                       // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BrowColorValue;                                          // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BrowColorIndex;                                          // 0x00AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BeardColorIndex;                                         // 0x00B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHairMirror;                                             // 0x00B4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4DNC[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                UpperName;                                               // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              UpperColor;                                              // 0x00C0(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    UpperMaterial;                                           // 0x00CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LowerName;                                               // 0x00D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              LowerColor;                                              // 0x00D8(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    LowerMaterial;                                           // 0x00E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GlovesName;                                              // 0x00E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              GlovesColor;                                             // 0x00F0(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    GlovesMaterial;                                          // 0x00FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ShoesName;                                               // 0x0100(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              ShoesColor;                                              // 0x0108(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ShoesMaterial;                                           // 0x0114(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HatName;                                                 // 0x0118(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              HatColor;                                                // 0x0120(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    HatMaterial;                                             // 0x012C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Accessory1Name;                                          // 0x0130(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              Accessory1Color;                                         // 0x0138(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                Accessory2Name;                                          // 0x0144(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              Accessory2Color;                                         // 0x014C(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                Accessory3Name;                                          // 0x0158(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              Accessory3Color;                                         // 0x0160(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                UnderwearName;                                           // 0x016C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              UnderwearColor;                                          // 0x0174(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    UnderwearMaterial;                                       // 0x0180(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnderwearUpperName;                                      // 0x0184(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              UnderwearUpperColor;                                     // 0x018C(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    UnderwearUpperMaterial;                                  // 0x0198(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsAccessoryLocation                               Accessory1CustomLocation;                                // 0x019C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsAccessoryLocation                               Accessory2CustomLocation;                                // 0x019D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsAccessoryLocation                               Accessory3CustomLocation;                                // 0x019E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WFQX[0x1];                                   // 0x019F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EyeName;                                                 // 0x01A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BrowName;                                                // 0x01A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MouthName;                                               // 0x01B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NoseName;                                                // 0x01B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LineName;                                                // 0x01C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BeardName;                                               // 0x01C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BackOfHeadName;                                          // 0x01D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryHeadTopName;                                    // 0x01D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryHeadTopColor;                                   // 0x01E0(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryHeadTopMaterial;                                // 0x01EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryHeadMidName;                                    // 0x01F0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryHeadMidColor;                                   // 0x01F8(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryHeadMidMaterial;                                // 0x0204(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryHeadLowName;                                    // 0x0208(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryHeadLowColor;                                   // 0x0210(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryHeadLowMaterial;                                // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryHeadEarName;                                    // 0x0220(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryHeadEarColor;                                   // 0x0228(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryHeadEarMaterial;                                // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryFingerName;                                     // 0x0238(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryFingerColor;                                    // 0x0240(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryFingerMaterial;                                 // 0x024C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryLeftFingerName;                                 // 0x0250(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryLeftFingerColor;                                // 0x0258(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryLeftFingerMaterial;                             // 0x0264(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryEngagementName;                                 // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryEngagementColor;                                // 0x0270(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryEngagementMaterial;                             // 0x027C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryBodyBackName;                                   // 0x0280(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryBodyBackColor;                                  // 0x0288(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryBodyBackMaterial;                               // 0x0294(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AccessoryHipBackName;                                    // 0x0298(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              AccessoryHipBackColor;                                   // 0x02A0(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryHipBackMaterial;                                // 0x02AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMouthSpecular;                                        // 0x02B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOddEye;                                               // 0x02B1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0O1E[0x2];                                   // 0x02B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EyeLeftIrisID;                                           // 0x02B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EyeRightIrisID;                                          // 0x02B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeLeftColor1;                                           // 0x02BC(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeLeftColor2;                                           // 0x02C8(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeLeftColor3;                                           // 0x02D4(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeLeftColor4;                                           // 0x02E0(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeRightColor1;                                          // 0x02EC(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeRightColor2;                                          // 0x02F8(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeRightColor3;                                          // 0x0304(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColorHSV                              EyeRightColor4;                                          // 0x0310(0x000C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateMakeup                                MakeupCondition;                                         // 0x031C(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateMakeup                                MakeupLip;                                               // 0x0330(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateMakeup                                MakeupPaint1;                                            // 0x0344(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateMakeup                                MakeupPaint2;                                            // 0x0358(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_829K[0x4];                                   // 0x036C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharaCreateMoleDataTable                         MakeupMole;                                              // 0x0370(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      EyebrowAngle;                                            // 0x0380(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EyeAngle;                                                // 0x0384(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EyelashTextureIndex;                                     // 0x0388(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HairGradationHeight;                                     // 0x038C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HairGradationRange;                                      // 0x0390(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ODXN[0x4];                                   // 0x0394(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              SliderValue;                                             // 0x0398(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    HatItemID;                                               // 0x03A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpperItemID;                                             // 0x03AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LowerItemID;                                             // 0x03B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GlovesItemID;                                            // 0x03B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShoesItemID;                                             // 0x03B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnderwearItemID;                                         // 0x03BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateColor
	 * Size -> 0x003C
	 */
	struct FSBCharaCreateColor
	{
	public:
		bool                                                       IsValid;                                                 // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DL7B[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ColorName;                                               // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BaseColor;                                               // 0x000C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SaturationMin;                                           // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SaturationMax;                                           // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValueMin;                                                // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValueMax;                                                // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SaturationPuls;                                          // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SaturationMinus;                                         // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValuePuls;                                               // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMinus;                                              // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.HairColorLUT
	 * Size -> 0x0010
	 */
	struct FHairColorLUT
	{
	public:
		TArray<struct FColor>                                      Color;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.HairColorByRegion
	 * Size -> 0x000C
	 */
	struct FHairColorByRegion
	{
	public:
		ESBCharaCreateColorHue                                     Hue;                                                     // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DRFB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinValue;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxValue;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SkinColorByRegion
	 * Size -> 0x000C
	 */
	struct FSkinColorByRegion
	{
	public:
		int32_t                                                    Hue;                                                     // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinValue;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxValue;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NpcColorByRegion
	 * Size -> 0x0020
	 */
	struct FNpcColorByRegion
	{
	public:
		TArray<struct FHairColorByRegion>                          HairColor;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSkinColorByRegion>                          SkinColor;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCostumeColorValiation
	 * Size -> 0x0010
	 */
	struct FSBCostumeColorValiation
	{
	public:
		float                                                      SaturationMin;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SaturationMax;                                           // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMin;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMax;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateTweakColorOffset
	 * Size -> 0x0010
	 */
	struct FSBCharaCreateTweakColorOffset
	{
	public:
		float                                                      SaturationScale;                                         // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueScale;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SaturationOffset;                                        // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueOffset;                                             // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateDebugInfoPartsNameAndPartsData
	 * Size -> 0x0018
	 */
	struct FSBCharaCreateDebugInfoPartsNameAndPartsData
	{
	public:
		ECharaPartsLocation                                        CharaPartsLocation;                                      // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VJB6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                PartsName;                                               // 0x0004(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZICI[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharaPartsData*                                     CharaPartsData;                                          // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreatePartsSettings
	 * Size -> 0x00C0
	 */
	struct FSBCharaCreatePartsSettings
	{
	public:
		unsigned char                                              UnknownData_PEKF[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     HoldAssetArray;                                          // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_80CX[0x48];                                  // 0x0060(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharaPartsData*                                     PartsData;                                               // 0x00A8(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VSQ4[0x10];                                  // 0x00B0(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateComponentPostPhysicsTickFunction
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FSBCharaCreateComponentPostPhysicsTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_96UI[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultAttackRange
	 * Size -> 0x001C
	 */
	struct FSBCharacterAnimationSamplingResultAttackRange
	{
	public:
		float                                                      LeftAngle;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightAngle;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinRange;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRange;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0010(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultAttackRangePitchAngle
	 * Size -> 0x0008
	 */
	struct FSBCharacterAnimationSamplingResultAttackRangePitchAngle
	{
	public:
		float                                                      UpperAngle;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LowerAngle;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultAttackInfo
	 * Size -> 0x0084
	 */
	struct FSBCharacterAnimationSamplingResultAttackInfo
	{
	public:
		class FName                                                AnimSequenceName;                                        // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NotifyName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharacterAnimationSamplingResultAttackRange      AttackRange;                                             // 0x0010(0x001C) Edit, DisableEditOnInstance, EditConst, NoDestructor, NativeAccessSpecifierPublic
		float                                                      HomingRange;                                             // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseManualSettingAttackRangeWithAdjustRootMotion;        // 0x0030(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KDI2[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharacterAnimationSamplingResultAttackRange      AttackRangeWithAdjustRootMotion;                         // 0x0034(0x001C) Deprecated, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharacterAnimationSamplingResultAttackRangePitchAngle AttackRangePitchAngle;                                   // 0x0050(0x0008) Edit, DisableEditOnInstance, EditConst, NoDestructor, NativeAccessSpecifierPrivate
		bool                                                       bUseManualSettingAttackRangePitchAngle;                  // 0x0058(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4M7F[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharacterAnimationSamplingResultAttackRangePitchAngle ManualSettingAttackRangePitchAngle;                      // 0x005C(0x0008) Deprecated, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BeginAttackTime;                                         // 0x0064(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BeginAttackLocation;                                     // 0x0068(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndAttackTime;                                           // 0x0074(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndAttackLocation;                                       // 0x0078(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterLocationAndRotation
	 * Size -> 0x0018
	 */
	struct FSBCharacterLocationAndRotation
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultAdjustRootMotion
	 * Size -> 0x0150
	 */
	struct FSBCharacterAnimationSamplingResultAdjustRootMotion
	{
	public:
		class FName                                                AnimSequenceName;                                        // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NotifyName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BeginNotifyTime;                                         // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VO2A[0xC];                                   // 0x0014(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          BeginNotifyTransform;                                    // 0x0020(0x0030) Edit, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      EndNotifyTime;                                           // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3XDO[0xC];                                   // 0x0054(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          EndNotifyTransform;                                      // 0x0060(0x0030) Edit, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSBAdjustRootMotionSettings                         Settings;                                                // 0x0090(0x00C0) Edit, DisableEditOnInstance, EditConst, NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultFaceTarget
	 * Size -> 0x001C
	 */
	struct FSBCharacterAnimationSamplingResultFaceTarget
	{
	public:
		class FName                                                AnimSequenceName;                                        // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NotifyName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BeginNotifyTime;                                         // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndNotifyTime;                                           // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawOffset;                                               // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultActionData
	 * Size -> 0x0068
	 */
	struct FSBCharacterAnimationSamplingResultActionData
	{
	public:
		TArray<struct FSBCharacterAnimationSamplingResultAttackInfo> AttackInfos;                                             // 0x0000(0x0010) Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		TArray<class FName>                                        UseAnimationAssetPath;                                   // 0x0010(0x0010) Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		float                                                      AnimTime;                                                // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharacterLocationAndRotation                     LocationAndRotation;                                     // 0x0024(0x0018) Edit, DisableEditOnInstance, EditConst, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HX5E[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterAnimationSamplingResultAdjustRootMotion> AdjustRootMotionInfoArray;                               // 0x0040(0x0010) Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterAnimationSamplingResultFaceTarget> FaceTargetInfoArray;                                     // 0x0050(0x0010) Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		float                                                      ProjectileRange;                                         // 0x0060(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8GJE[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingOverrideActionData
	 * Size -> 0x0024
	 */
	struct FSBCharacterAnimationSamplingOverrideActionData
	{
	public:
		struct FSBAIAttackableArea                                 OverrideAttackableArea;                                  // 0x0000(0x0024) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultActionDerivationKey
	 * Size -> 0x0018
	 */
	struct FSBCharacterAnimationSamplingResultActionDerivationKey
	{
	public:
		ESBCharacterAnimationSamplingResultActionDerivedType       Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IX37[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ThresholdVelocity;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        CommandArray;                                            // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultActionDerivationInfo
	 * Size -> 0x0080
	 */
	struct FSBCharacterAnimationSamplingResultActionDerivationInfo
	{
	public:
		struct FSBCharacterAnimationSamplingResultActionDerivationKey Key;                                                     // 0x0000(0x0018) Edit, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		struct FSBCharacterAnimationSamplingResultActionData       ActionData;                                              // 0x0018(0x0068) Edit, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultActionGroup
	 * Size -> 0x0010
	 */
	struct FSBCharacterAnimationSamplingResultActionGroup
	{
	public:
		TArray<struct FSBCharacterAnimationSamplingResultActionDerivationInfo> ActionDerivationArray;                                   // 0x0000(0x0010) Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultAnimNotifyStateGroup
	 * Size -> 0x0008
	 */
	struct FSBCharacterAnimationSamplingResultAnimNotifyStateGroup
	{
	public:
		float                                                      BeginNotifyTime;                                         // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndNotifyTime;                                           // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultAnimationSequenceGroup
	 * Size -> 0x0050
	 */
	struct FSBCharacterAnimationSamplingResultAnimationSequenceGroup
	{
	public:
		TMap<class FName, struct FSBCharacterAnimationSamplingResultAnimNotifyStateGroup> NotifyStateGroupMap;                                     // 0x0000(0x0050) Edit, EditFixedSize, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResultAnimationSocketOrBoneGroup
	 * Size -> 0x0008
	 */
	struct FSBCharacterAnimationSamplingResultAnimationSocketOrBoneGroup
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBone : 1;                                               // 0x0004(0x0001) BIT_FIELD Edit, DisableEditOnInstance, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q7BV[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingResult
	 * Size -> 0x0190
	 */
	struct FSBCharacterAnimationSamplingResult
	{
	public:
		TMap<class FName, struct FSBCharacterAnimationSamplingResultActionData> ActionGroupMap;                                          // 0x0000(0x0050) Deprecated, NativeAccessSpecifierPublic
		TMap<class FName, struct FSBCharacterAnimationSamplingOverrideActionData> OverrideActionDataMap;                                   // 0x0050(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FName, struct FSBCharacterAnimationSamplingResultActionGroup> ActionDataGroupMap;                                      // 0x00A0(0x0050) Edit, EditFixedSize, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		TMap<class FName, struct FSBCharacterAnimationSamplingResultAnimationSequenceGroup> AnimationSequenceGroupMap;                               // 0x00F0(0x0050) Edit, EditFixedSize, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		TMap<class FName, struct FSBCharacterAnimationSamplingResultAnimationSocketOrBoneGroup> SocketOrBoneInfoMap;                                     // 0x0140(0x0050) Edit, EditFixedSize, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterChanceTimeTableElementalBurst
	 * Size -> 0x0050
	 */
	struct FSBCharacterChanceTimeTableElementalBurst
	{
	public:
		TMap<ESBAttribute, float>                                  ChanceTimeMap;                                           // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterChanceTimeTablePartsBreak
	 * Size -> 0x0050
	 */
	struct FSBCharacterChanceTimeTablePartsBreak
	{
	public:
		TMap<class FName, float>                                   ChanceTimeMap;                                           // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMaterialColorInfo
	 * Size -> 0x000C
	 */
	struct FSBMaterialColorInfo
	{
	public:
		int32_t                                                    MaterialIndex;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmissiveColorIndex;                                      // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TargetTagIndex;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponColorInfo
	 * Size -> 0x000C
	 */
	struct FSBWeaponColorInfo
	{
	public:
		int32_t                                                    InventoryWeaponIndex;                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponMaterialIndex;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmissiveColorIndex;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBKeyPair
	 * Size -> 0x0018
	 */
	struct FSBKeyPair
	{
	public:
		class FName                                                Key;                                                     // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value;                                                   // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBKeyPairList
	 * Size -> 0x0010
	 */
	struct FSBKeyPairList
	{
	public:
		TArray<struct FSBKeyPair>                                  Pairs;                                                   // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CharaEquipItemInfo
	 * Size -> 0x0028
	 */
	struct FCharaEquipItemInfo
	{
	public:
		bool                                                       EquipFlag;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X6NF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemIndex;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorIndex;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RC07[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemUniqueId;                                            // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CharaEquipInfo
	 * Size -> 0x0010
	 */
	struct FCharaEquipInfo
	{
	public:
		TArray<struct FCharaEquipItemInfo>                         EquipItems;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.EquipedArtsInfo
	 * Size -> 0x000C
	 */
	struct FEquipedArtsInfo
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerArtsType                                          ArtsType;                                                // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R0QP[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ArtsId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SlotId;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.EquipedArtsListInfo
	 * Size -> 0x0010
	 */
	struct FEquipedArtsListInfo
	{
	public:
		TArray<struct FEquipedArtsInfo>                            InfoList;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ShortcutItemInfo
	 * Size -> 0x0050
	 */
	struct FShortcutItemInfo
	{
	public:
		EShortcutType                                              Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBEW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemIndex;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagineUniqueId;                                         // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EmotionCommand;                                          // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StampUniqueId;                                           // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FixedPhraseIndex;                                        // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CommandIndex;                                            // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WarpId;                                                  // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ShortcutInfo
	 * Size -> 0x0010
	 */
	struct FShortcutInfo
	{
	public:
		TArray<struct FShortcutItemInfo>                           ItemInfos;                                               // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterStepListInfo
	 * Size -> 0x0018
	 */
	struct FSBCharacterStepListInfo
	{
	public:
		ESBCharacterStepListType                                   Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5RSA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ID;                                                      // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StringId;                                                // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStepListTargetEnemyData
	 * Size -> 0x0018
	 */
	struct FSBStepListTargetEnemyData
	{
	public:
		class FString                                              EnemyId;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelMin;                                                // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelMax;                                                // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterQuestSetting
	 * Size -> 0x0038
	 */
	struct FSBCharacterQuestSetting
	{
	public:
		TArray<int32_t>                                            CheckList;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterStepListInfo>                    StepList;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsUpdateStepList;                                        // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XRB8[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBStepListTargetEnemyData>                  TargetEnemyIdList;                                       // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MapPinInfo
	 * Size -> 0x0040
	 */
	struct FMapPinInfo
	{
	public:
		int32_t                                                    PinIndex;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMapPinType                                                PinType;                                                 // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NR4[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PinnedMapZoneId;                                         // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           PinnedLocationXY;                                        // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PinnedWorldPosition;                                     // 0x0020(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GDI1[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MapPinListInfo
	 * Size -> 0x0018
	 */
	struct FMapPinListInfo
	{
	public:
		TArray<struct FMapPinInfo>                                 MapPinList;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsPinDataLoadedFromDB;                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V53O[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CharaSkillMasteryInfo
	 * Size -> 0x000C
	 */
	struct FCharaSkillMasteryInfo
	{
	public:
		int32_t                                                    SkillId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillLevel;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillTreeAbilityType                                      AbilityType;                                             // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YC2A[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CharaClassInfo
	 * Size -> 0x0010
	 */
	struct FCharaClassInfo
	{
	public:
		ESBClassType                                               Role;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ICP6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Exp;                                                     // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassMaxDamage;                                          // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExtraExp;                                                // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterToken
	 * Size -> 0x000C
	 */
	struct FSBCharacterToken
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUser;                                                  // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1HC[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterMisc
	 * Size -> 0x01E0
	 */
	struct FSBCharacterMisc
	{
	public:
		int32_t                                                    Money;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerRank;                                          // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBKeyPairList                                      KeyValues;                                               // 0x0008(0x0010) NativeAccessSpecifierPublic
		struct FCharaEquipInfo                                     EquipInfo;                                               // 0x0018(0x0010) BlueprintVisible, NativeAccessSpecifierPublic
		struct FEquipedArtsListInfo                                EquipedArtsListInfo;                                     // 0x0028(0x0010) BlueprintVisible, NativeAccessSpecifierPublic
		struct FShortcutInfo                                       ShortcutInfo;                                            // 0x0038(0x0010) BlueprintVisible, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               Role;                                                    // 0x0058(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6CP0[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TensionTag;                                              // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharacterQuestSetting                            QuestSetting;                                            // 0x0070(0x0038) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FMapPinListInfo                                     MapPinInfoList;                                          // 0x00A8(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    AchievementSelected;                                     // 0x00C0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MissionQuestRank;                                        // 0x00C4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       OpenCommandMenuFlag;                                     // 0x00C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1IV6[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCharaSkillMasteryInfo>                      CharaSkillMasteryInfoList;                               // 0x00D0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharaSkillMasteryInfo>                      CharaSkillMasteryOthersInfoList;                         // 0x00E0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<ESBClassType>                                       CharaSkillMasteryOthersInfoLoadClassList;                // 0x00F0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharaClassInfo>                             CharaClassInfoList;                                      // 0x0100(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IPDR[0x20];                                  // 0x0110(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterToken>                           CharacterTokenList;                                      // 0x0130(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      TraversedList;                                           // 0x0140(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      MyBlackList;                                             // 0x0150(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      MyPlatformBlackList;                                     // 0x0160(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                LastTravelCityId;                                        // 0x0170(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MountingImagineId;                                       // 0x0178(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CommandMenuPlayerAvatarPoseId;                           // 0x0188(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBanType                                                 BanType;                                                 // 0x018C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZHU[0x3];                                   // 0x018D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MountEnergy;                                             // 0x0190(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoseOrbPaid;                                             // 0x0194(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoseOrbFree;                                             // 0x0198(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BPPoint;                                                 // 0x019C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeasonPoint;                                             // 0x01A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M7QP[0x4];                                   // 0x01A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BestScore;                                               // 0x01A8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SendRestrictionTime;                                     // 0x01B8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredTimeRoseOrbPaid;                                  // 0x01C8(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredTimeRoseOrbFree;                                  // 0x01D0(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredTimeBPPoint;                                      // 0x01D8(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterNotification
	 * Size -> 0x0018
	 */
	struct FSBCharacterNotification
	{
	public:
		int32_t                                                    Type;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4CO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Body;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterBanFinishedTimeInfos
	 * Size -> 0x000C
	 */
	struct FSBCharacterBanFinishedTimeInfos
	{
	public:
		int32_t                                                    Day;                                                     // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Hour;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Minute;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttributeSlashDisk
	 * Size -> 0x0158
	 */
	struct FSBAttributeSlashDisk
	{
	public:
		ESBAttribute                                               ElementType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5IBV[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEffectSetting                                    SlashDiskEffect;                                         // 0x0008(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NavMeshInWaterDepthSetting
	 * Size -> 0x0008
	 */
	struct FNavMeshInWaterDepthSetting
	{
	public:
		unsigned char                                              UnknownData_894A[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ClimbingPoint
	 * Size -> 0x0040
	 */
	struct FClimbingPoint
	{
	public:
		int32_t                                                    PointID;                                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GroupId;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0008(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SearchRadius;                                            // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSwimmingSearch;                                        // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCanClimbBackSide;                                     // 0x0025(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JSXD[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            LinkPointIDList;                                         // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		EClimbingEndPointType                                      ExitPointType;                                           // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Active;                                                  // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HBFG[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUseCheckDialogFlags
	 * Size -> 0x0050
	 */
	struct FSBUseCheckDialogFlags
	{
	public:
		unsigned char                                              UnknownData_0NZN[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBConfigureSaveData_General
	 * Size -> 0x0080
	 */
	struct FSBConfigureSaveData_General
	{
	public:
		ESBOperateMode                                             OperateMode;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyGuideDisplayType                                     IsOperateModeGuideVisibility;                            // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPadKeySkinType                                          PadSkinType;                                             // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHUDBeltVisible;                                        // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSilentBalloon;                                         // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWeaponVisibleType                                       WeaponVisibleType;                                       // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSilentInterruptDialog;                                 // 0x0006(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSSLogoPosition                                          LogoPosition;                                            // 0x0007(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ScreenshotSaveDirectory;                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHideHudAtScreenshot;                                   // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowScreenshotNotifications;                           // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowDemoCaption;                                       // 0x001A(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBShortcutRingMode                                        eShortcutRingMode;                                       // 0x001B(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShortcutClosingExecute;                                 // 0x001C(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShortcutAuotClose;                                      // 0x001D(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFocusNearSight;                                         // 0x001E(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoNextTarget;                                         // 0x001F(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCheckDialogActive;                                   // 0x0020(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDontDisplayThePhotoModeQuitConfirmDialog;               // 0x0021(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideOthersPlayerAtFishing;                              // 0x0022(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TBX3[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBUseCheckDialogFlags                              UseCheckDialogFlags;                                     // 0x0028(0x0050) SaveGame, NativeAccessSpecifierPublic
		bool                                                       bSwapPadDecideButton;                                    // 0x0078(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_70LS[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBConfigureSaveData_Sound
	 * Size -> 0x0020
	 */
	struct FSBConfigureSaveData_Sound
	{
	public:
		int32_t                                                    VolumeMaster;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolumeBackGroundMusic;                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolumeAmbient;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolumeSoundEffect;                                       // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolumeVoice;                                             // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VolumeSystem;                                            // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteMaster;                                             // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteBackGroundMusic;                                    // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteAmbient;                                            // 0x001A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteSoundEffect;                                        // 0x001B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteVoice;                                              // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteSystem;                                             // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FU7N[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBConfigureSaveData_ChatSound
	 * Size -> 0x0005
	 */
	struct FSBConfigureSaveData_ChatSound
	{
	public:
		bool                                                       bPlayNear;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayZone;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayParty;                                              // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayGuild;                                              // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayPrivate;                                            // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConfigureSaveData_SoundUser
	 * Size -> 0x0018
	 */
	struct FSBConfigureSaveData_SoundUser
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteGestureSound;                                       // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuteCostumeSound;                                       // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBConfigureSaveData_ChatSound                      ChatSound;                                               // 0x0012(0x0005) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bMuteNonActiveWindowSound;                               // 0x0017(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConfigureSaveData_Graphics
	 * Size -> 0x002C
	 */
	struct FSBConfigureSaveData_Graphics
	{
	public:
		bool                                                       bIsCustom;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A4G9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ScreenPercentage;                                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ViewDistanceQuality;                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AntiAliasQuality;                                        // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PostProcessQuality;                                      // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShadowQuality;                                           // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextureQuality;                                          // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EffectsQuality;                                          // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FoliageQuality;                                          // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PresetTextId;                                            // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyVisibledDistance;                                   // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ConfigSaveData_GraphicsUser
	 * Size -> 0x0018
	 */
	struct FConfigSaveData_GraphicsUser
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsShowNamePlateParty;                                   // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsShowNamePlateOther;                                   // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAlwaysShowFieldHUD;                                   // 0x0012(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerVisibleLimit                                      PlayerVisibleType;                                       // 0x0013(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTeamTagVisible;                                       // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCameraShakeLevel                                        CameraShakeLevel;                                        // 0x0015(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A1OQ[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ConfigSaveData_GraphicsBattleScoreWeaponEffect
	 * Size -> 0x0003
	 */
	struct FConfigSaveData_GraphicsBattleScoreWeaponEffect
	{
	public:
		ESBBattleScoreWeaponEffectVisibleType                      Selfs;                                                   // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleScoreWeaponEffectVisibleType                      Others;                                                  // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleScoreWeaponEffectVisibleType                      ToOthers;                                                // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ConfigSaveData_VFXItem
	 * Size -> 0x0007
	 */
	struct FConfigSaveData_VFXItem
	{
	public:
		bool                                                       Category;                                                // 0x0000(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AttackDirectingVfx;                                      // 0x0001(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AreaAttackVfx;                                           // 0x0002(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AreaHealVfx;                                             // 0x0003(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RangeAttackVfx;                                          // 0x0004(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BattleImagineVfx;                                        // 0x0005(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ULTVfx;                                                  // 0x0006(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ConfigSaveData_VFX
	 * Size -> 0x0058
	 */
	struct FConfigSaveData_VFX
	{
	public:
		TMap<ESBBattleEffectVisibleCategory, struct FConfigSaveData_VFXItem> VisibleType;                                             // 0x0000(0x0050) SaveGame, NativeAccessSpecifierPublic
		bool                                                       IsCustom;                                                // 0x0050(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1H4[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterShortcutInfos
	 * Size -> 0x0028
	 */
	struct FSBCharacterShortcutInfos
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FShortcutInfo>                               ShortcutInfo;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SlotNo;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L8DC[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBShortcutDatas
	 * Size -> 0x0020
	 */
	struct FSBShortcutDatas
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterShortcutInfos>                   Infos;                                                   // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHUDLayoutDatas
	 * Size -> 0x00F0
	 */
	struct FSBHUDLayoutDatas
	{
	public:
		TMap<class FString, struct FVector2D>                      LayoutData;                                              // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, struct FAnchors>                       LayoutAnchors;                                           // 0x0050(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, int32_t>                               LayoutZOrder;                                            // 0x00A0(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChatLogWindowStatusSave
	 * Size -> 0x0010
	 */
	struct FSBChatLogWindowStatusSave
	{
	public:
		bool                                                       bIsVisible;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2U1[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FilterType;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DetailFilterType;                                        // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTabVisible;                                           // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsChatUnreadNotify;                                     // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9G1Z[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBChatSaveDatas
	 * Size -> 0x0028
	 */
	struct FSBChatSaveDatas
	{
	public:
		TArray<struct FSBChatLogWindowStatusSave>                  ChatLogWindow;                                           // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    LogTextSize;                                             // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LogTextSizeIndex;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDirectMode;                                           // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HC9Q[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MainSelectTab;                                           // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LogDispTimeType;                                         // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F687[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBHintShowStatusData
	 * Size -> 0x0020
	 */
	struct FSBHintShowStatusData
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<bool>                                               bIsShowedArray;                                          // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHintShowStatusTable
	 * Size -> 0x0050
	 */
	struct FSBHintShowStatusTable
	{
	public:
		TMap<class FString, struct FSBHintShowStatusData>          StatusTable;                                             // 0x0000(0x0050) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.AutoStampWordData
	 * Size -> 0x0028
	 */
	struct FAutoStampWordData
	{
	public:
		class FString                                              StampId;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FixedPhraseId;                                           // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAutoMessageTarget                                       MessageTarget;                                           // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BB2L[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.AutoWordUserSetting
	 * Size -> 0x0058
	 */
	struct FAutoWordUserSetting
	{
	public:
		TMap<EAutoWordEventType, struct FAutoStampWordData>        WordDataList;                                            // 0x0000(0x0050) NativeAccessSpecifierPrivate
		bool                                                       IsDisableAutoStamp;                                      // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VPKR[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAutoStampSaveData
	 * Size -> 0x0050
	 */
	struct FSBAutoStampSaveData
	{
	public:
		TMap<class FString, struct FAutoWordUserSetting>           AutoStampData;                                           // 0x0000(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHUDLayoutWindowSizeDatas
	 * Size -> 0x0050
	 */
	struct FSBHUDLayoutWindowSizeDatas
	{
	public:
		TMap<class FString, struct FVector2D>                      SizeData;                                                // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStampHistoryDatas
	 * Size -> 0x0010
	 */
	struct FSBStampHistoryDatas
	{
	public:
		TArray<int32_t>                                            StampIds;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEmoteHistoryDatas
	 * Size -> 0x0010
	 */
	struct FSBEmoteHistoryDatas
	{
	public:
		TArray<int32_t>                                            EmoteIds;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBActionGamepadKeyPair
	 * Size -> 0x0002
	 */
	struct FSBActionGamepadKeyPair
	{
	public:
		ESBKeyConfigAction                                         Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Key;                                                     // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBKeyconfigFloatParamValuePair
	 * Size -> 0x0008
	 */
	struct FSBKeyconfigFloatParamValuePair
	{
	public:
		ESBKeyConfigFloatParam                                     ParamType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WAP8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBActionKeyboardKeyPair
	 * Size -> 0x0002
	 */
	struct FSBActionKeyboardKeyPair
	{
	public:
		ESBKeyConfigAction                                         Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Key;                                                     // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBActionMouseKeyPair
	 * Size -> 0x0002
	 */
	struct FSBActionMouseKeyPair
	{
	public:
		ESBKeyConfigAction                                         Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Key;                                                     // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerClassKeyConfigDataDiff
	 * Size -> 0x0078
	 */
	struct FSBPlayerClassKeyConfigDataDiff
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_101B[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBActionGamepadKeyPair>                     GamepadButtonDiffList;                                   // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBKeyconfigFloatParamValuePair>             GamepadFloatParamDiffList;                               // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBActionKeyboardKeyPair>                    KeyboardButtonDiffList;                                  // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBKeyconfigFloatParamValuePair>             KeyboardFloatParamDiffList;                              // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBActionMouseKeyPair>                       MouseButtonDiffList;                                     // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBKeyconfigFloatParamValuePair>             MouseFloatParamDiffList;                                 // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bSwitchAnalogStick : 1;                                  // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseCameraPitch : 1;                                 // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseCameraYaw : 1;                                   // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseMouseYAxis : 1;                                  // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseMouseXAxis : 1;                                  // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDashToggle : 1;                                         // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableHoldAutoAttack : 1;                               // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMoveKeyDodge : 1;                                       // 0x0068(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEXT[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBMoveInputCommandInterval                                MoveInputCommandInterval;                                // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EYAP[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bHoldSubPalette : 1;                                     // 0x0070(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SGNR[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBKeyConfigDatas
	 * Size -> 0x0010
	 */
	struct FSBKeyConfigDatas
	{
	public:
		TArray<struct FSBPlayerClassKeyConfigDataDiff>             DiffKeyConfig;                                           // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CameraZoomLevelParam
	 * Size -> 0x0018
	 */
	struct FCameraZoomLevelParam
	{
	public:
		class FString                                              CameraID;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomLevel;                                               // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMLI[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCameraZoomLevelDatas
	 * Size -> 0x0010
	 */
	struct FSBCameraZoomLevelDatas
	{
	public:
		TArray<struct FCameraZoomLevelParam>                       CameraZoomLevelParam;                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCameraZoomLevelCharacterData
	 * Size -> 0x0050
	 */
	struct FSBCameraZoomLevelCharacterData
	{
	public:
		TMap<class FString, struct FSBCameraZoomLevelDatas>        CharacterZoomLevels;                                     // 0x0000(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMachineCacheData
	 * Size -> 0x0010
	 */
	struct FSBMachineCacheData
	{
	public:
		struct FDateTime                                           LastBootDate;                                            // 0x0000(0x0008) ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GamepadUISpeed;                                          // 0x0008(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CICC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ReadedMarkData
	 * Size -> 0x0010
	 */
	struct FReadedMarkData
	{
	public:
		TArray<class FString>                                      ReadedIDArray;                                           // 0x0000(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterReadedData
	 * Size -> 0x0060
	 */
	struct FSBCharacterReadedData
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ENewMarkContentType, struct FReadedMarkData>          Data;                                                    // 0x0010(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerReadedData
	 * Size -> 0x0060
	 */
	struct FSBPlayerReadedData
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, struct FSBCharacterReadedData>         CharacterData;                                           // 0x0010(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSortSave
	 * Size -> 0x0050
	 */
	struct FSBPlayerSortSave
	{
	public:
		TMap<ESBSortFilterSaveType, ESBItemSortType>               SortTypes;                                               // 0x0000(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBookMarkData
	 * Size -> 0x0188
	 */
	struct FSBBookMarkData
	{
	public:
		bool                                                       bIsCustom;                                               // 0x0000(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KWGU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BookMark1;                                               // 0x0008(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark2;                                               // 0x0018(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark3;                                               // 0x0028(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark4;                                               // 0x0038(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark5;                                               // 0x0048(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark6;                                               // 0x0058(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark7;                                               // 0x0068(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark8;                                               // 0x0078(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark9;                                               // 0x0088(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark10;                                              // 0x0098(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark11;                                              // 0x00A8(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark12;                                              // 0x00B8(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark13;                                              // 0x00C8(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark14;                                              // 0x00D8(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark15;                                              // 0x00E8(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark16;                                              // 0x00F8(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark17;                                              // 0x0108(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark18;                                              // 0x0118(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark19;                                              // 0x0128(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark20;                                              // 0x0138(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark21;                                              // 0x0148(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark22;                                              // 0x0158(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark23;                                              // 0x0168(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BookMark24;                                              // 0x0178(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBookMarkSaveData
	 * Size -> 0x0060
	 */
	struct FSBBookMarkSaveData
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ESBClassType, struct FSBBookMarkData>                 Data;                                                    // 0x0010(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWishListData
	 * Size -> 0x000C
	 */
	struct FSBWishListData
	{
	public:
		ESBWishListType                                            Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U2NG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ID;                                                      // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsChecked;                                               // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1OC[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWishListCharacterData
	 * Size -> 0x0030
	 */
	struct FSBWishListCharacterData
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBWishListData>                             Lists;                                                   // 0x0010(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
		TArray<struct FSBWishListData>                             Checked;                                                 // 0x0020(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBShopSettingData
	 * Size -> 0x0018
	 */
	struct FSBShopSettingData
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEventShopStorage                                        EventShopStorageSelect;                                  // 0x0010(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_238C[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CraftSave
	 * Size -> 0x0018
	 */
	struct FCraftSave
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CraftMachineStorage;                                     // 0x0010(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ImagineCraftStorage;                                     // 0x0011(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3C1E[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CommonCharacterSave
	 * Size -> 0x0028
	 */
	struct FCommonCharacterSave
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCraftSave                                          CraftSave;                                               // 0x0010(0x0018) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCommonSaveData
	 * Size -> 0x0068
	 */
	struct FSBCommonSaveData
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, struct FCommonCharacterSave>           CharacterSave;                                           // 0x0010(0x0050) SaveGame, NativeAccessSpecifierPublic
		bool                                                       MailAutoDeleteCheck;                                     // 0x0060(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UIFS[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWholeMapEditParam
	 * Size -> 0x0024
	 */
	struct FSBWholeMapEditParam
	{
	public:
		float                                                      Opacity;                                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IconScale;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomCity;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomField;                                               // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomDungeon;                                             // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           WindowSize;                                              // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WindowSizeScaleIndex;                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PinVisible;                                              // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ITBA[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWholeMapDatas
	 * Size -> 0x0038
	 */
	struct FSBWholeMapDatas
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBWholeMapEditParam                                EditData;                                                // 0x0010(0x0024) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N4PY[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNotificationStatusData
	 * Size -> 0x0010
	 */
	struct FSBNotificationStatusData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsChecked;                                               // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BR5I[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           DateTime;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNotificationDataParam
	 * Size -> 0x0018
	 */
	struct FSBNotificationDataParam
	{
	public:
		struct FDateTime                                           LastDateTime;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBNotificationStatusData>                   StatusData;                                              // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNotificationData
	 * Size -> 0x0028
	 */
	struct FSBNotificationData
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBNotificationDataParam                            SaveParam;                                               // 0x0010(0x0018) Edit, BlueprintVisible, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPhotoModeSaveDataMain
	 * Size -> 0x0001
	 */
	struct FSBPhotoModeSaveDataMain
	{
	public:
		bool                                                       bLookAtPlayer;                                           // 0x0000(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPhotoModeSaveData
	 * Size -> 0x0050
	 */
	struct FSBPhotoModeSaveData
	{
	public:
		TMap<class FString, struct FSBPhotoModeSaveDataMain>       Map;                                                     // 0x0000(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChatFavoriteData
	 * Size -> 0x0010
	 */
	struct FSBChatFavoriteData
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FavoriteId;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Timestamp;                                               // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterStampEmoteOrganizeData
	 * Size -> 0x0028
	 */
	struct FSBCharacterStampEmoteOrganizeData
	{
	public:
		int32_t                                                    StampSortType;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmoteSortType;                                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBChatFavoriteData>                         StampFavoriteDataList;                                   // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBChatFavoriteData>                         EmoteFavoriteDataList;                                   // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerStampEmoteOrganizeData
	 * Size -> 0x0050
	 */
	struct FSBPlayerStampEmoteOrganizeData
	{
	public:
		TMap<class FString, struct FSBCharacterStampEmoteOrganizeData> Map;                                                     // 0x0000(0x0050) SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStartSkillSetting
	 * Size -> 0x0040
	 */
	struct FSBStartSkillSetting
	{
	public:
		TArray<class FName>                                        NeedTags;                                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        ForbidTags;                                              // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      NeedStamina;                                             // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A8OH[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckFloatParam>                 StaminaModifySettingList;                                // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bUnsheathOnly;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWalkingOnly;                                            // 0x0039(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNotifyWalkingOnly;                                      // 0x003A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W0H9[0x5];                                   // 0x003B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillStatusAilmentPriorityData
	 * Size -> 0x0018
	 */
	struct FSBPlayerSkillStatusAilmentPriorityData
	{
	public:
		int8_t                                                     UseSlotIndex;                                            // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DIY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusAilmentRowHandle;                                  // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillStatusAilmentPrioritySection
	 * Size -> 0x0020
	 */
	struct FSBPlayerSkillStatusAilmentPrioritySection
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBPlayerSkillStatusAilmentPriorityData>     PriorityDataArray;                                       // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillInStatusAilmentPriorityTable
	 * Size -> 0x0010
	 */
	struct FSBPlayerSkillInStatusAilmentPriorityTable
	{
	public:
		TArray<struct FSBPlayerSkillStatusAilmentPrioritySection>  PrioritySection;                                         // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLaunchSkillPreInputTimeConditionOverrideInfo
	 * Size -> 0x0020
	 */
	struct FSBLaunchSkillPreInputTimeConditionOverrideInfo
	{
	public:
		ELaunchSkillPreInputType                                   LaunchSkillPreInputType;                                 // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LX6F[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      OverrideLaunchSkillPreInputTime;                         // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2ZHM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillRecastTimeModifyParam
	 * Size -> 0x0020
	 */
	struct FSBPlayerSkillRecastTimeModifyParam
	{
	public:
		float                                                      ModifyValue;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModifyTimeRate;                                          // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ModifyRate;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_73ID[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillAvailableCountSetting
	 * Size -> 0x0018
	 */
	struct FSBPlayerSkillAvailableCountSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    AvailableCount;                                          // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BRZB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillCastLaunchProjectile
	 * Size -> 0x0020
	 */
	struct FSBPlayerSkillCastLaunchProjectile
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         ProjectileHandleList;                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillAdditionalInputLaunchProjectile
	 * Size -> 0x0030
	 */
	struct FSBPlayerSkillAdditionalInputLaunchProjectile
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         ProjectileHandleList;                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       IsLaunchAnimNotifyStateEnd;                              // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8BFF[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NotifyStateIndex;                                        // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LaunchAdditionalInputCount;                              // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PK4T[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillStatusAilmentTimeModifyParam
	 * Size -> 0x0020
	 */
	struct FSBPlayerSkillStatusAilmentTimeModifyParam
	{
	public:
		int32_t                                                    StatusAilmentIndex;                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1KF9[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    ModifyRate;                                              // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B3L3[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillCastStatusAilment
	 * Size -> 0x0038
	 */
	struct FSBPlayerSkillCastStatusAilment
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         StatusAlimentHandleList;                                 // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckParam>                      TimeModifyConditionList;                                 // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    TimeModifyRate;                                          // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YUC1[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillInActionEffectSetting
	 * Size -> 0x0020
	 */
	struct FSBPlayerSkillInActionEffectSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBEffectAsset>                              InActionEffectList;                                      // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.VolDragon_MeteorAnchorInfo
	 * Size -> 0x0010
	 */
	struct FVolDragon_MeteorAnchorInfo
	{
	public:
		TArray<int32_t>                                            Anchors;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLaunchAndDestroyProjectileSetting
	 * Size -> 0x0020
	 */
	struct FSBLaunchAndDestroyProjectileSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         ProjectileHandleList;                                    // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugWaveEnemyParamSettingBase
	 * Size -> 0x0048
	 */
	struct FSBDebugWaveEnemyParamSettingBase
	{
	public:
		class FText                                                SettingLabel;                                            // 0x0000(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                EnemyId;                                                 // 0x0018(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    EnemyLv;                                                 // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeLimit;                                               // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntervalEnemySpawn;                                      // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxEnemyNum;                                             // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinEnemyNum;                                             // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F7RJ[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugParameterForSaveGame
	 * Size -> 0x0020
	 */
	struct FSBDebugParameterForSaveGame
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDebugMenuType                                           Type;                                                    // 0x0008(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Value[0x4];                                              // 0x0009(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U2NN[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SelectedOption;                                          // 0x0010(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugSettingByMenu
	 * Size -> 0x0018
	 */
	struct FSBDebugSettingByMenu
	{
	public:
		class FName                                                TitleName;                                               // 0x0000(0x0008) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBDebugParameterForSaveGame>                Params;                                                  // 0x0008(0x0010) ZeroConstructor, SaveGame, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBQualityLevels
	 * Size -> 0x0028
	 */
	struct FSBQualityLevels
	{
	public:
		float                                                      ResolutionQuality;                                       // 0x0000(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ViewDistanceQuality;                                     // 0x0004(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AntiAliasingQuality;                                     // 0x0008(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShadowQuality;                                           // 0x000C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PostProcessQuality;                                      // 0x0010(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextureQuality;                                          // 0x0014(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EffectsQuality;                                          // 0x0018(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FoliageQuality;                                          // 0x001C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CPUBenchmarkResults;                                     // 0x0020(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GPUBenchmarkResults;                                     // 0x0024(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScalability
	 * Size -> 0x0038
	 */
	struct FSBScalability
	{
	public:
		struct FSBQualityLevels                                    QualityLevels;                                           // 0x0000(0x0028) SaveGame, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ScreenPercentage;                                        // 0x0028(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewDistanceScale;                                       // 0x002C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PostProcessAAQuality;                                    // 0x0030(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkeletalMeshLODBias;                                     // 0x0034(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBExplosionParams
	 * Size -> 0x0038
	 */
	struct FSBExplosionParams
	{
	public:
		float                                                      ExplosionDelay;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUGJ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 ExplosionHandle;                                         // 0x0008(0x0010) Deprecated, NoDestructor, NativeAccessSpecifierPublic
		struct FSBProjectileSelectHandle                           ExplosionSelectHandle;                                   // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		ESBExplosionBarrelDamage                                   ExplosionBarrelDamage;                                   // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M2U5[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnAndDestructCounter
	 * Size -> 0x0008
	 */
	struct FSBSpawnAndDestructCounter
	{
	public:
		int32_t                                                    RespawnCounter;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DestroyCounter;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.DigitalSignageTextrueParam
	 * Size -> 0x0030
	 */
	struct FDigitalSignageTextrueParam
	{
	public:
		class FString                                              TextureName;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDigitalSignageDataType                                    DataType;                                                // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1528[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TextureCnt;                                              // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TarmId;                                                  // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1EWL[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.DungeonClearConditionProgressItemInfo
	 * Size -> 0x0008
	 */
	struct FDungeonClearConditionProgressItemInfo
	{
	public:
		int32_t                                                    KillEnemyCount;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCleared;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_044F[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.DungeonClearConditionProgressStepInfo
	 * Size -> 0x0010
	 */
	struct FDungeonClearConditionProgressStepInfo
	{
	public:
		TArray<struct FDungeonClearConditionProgressItemInfo>      ProgressItems;                                           // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.DungeonClearConditionProgressInfo
	 * Size -> 0x0010
	 */
	struct FDungeonClearConditionProgressInfo
	{
	public:
		TArray<struct FDungeonClearConditionProgressStepInfo>      Steps;                                                   // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonProcessCondition
	 * Size -> 0x0038
	 */
	struct FSBDungeonProcessCondition
	{
	public:
		ESBDungeonProcessStatus                                    ProcessStatus;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonClearCondition                                   ClearType;                                               // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPXP[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ClearParameter;                                          // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Script;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ExecScriptCode;                                          // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleGameScore
	 * Size -> 0x0014
	 */
	struct FSBDxBattleGameScore
	{
	public:
		unsigned char                                              UnknownData_4TQC[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TotalScore;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalScoreInteger;                                       // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankingRank;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AwardValue;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerScore
	 * Size -> 0x0050
	 */
	struct FPlayerScore
	{
	public:
		TMap<class ASBPlayerCharacter*, float>                     PlayerScoreMap;                                          // 0x0000(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageHitEffectSetting
	 * Size -> 0x0540
	 */
	struct FSBDamageHitEffectSetting
	{
	public:
		struct FSBEffectSetting                                    Normal;                                                  // 0x0000(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectSetting                                    Low;                                                     // 0x0150(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectSetting                                    High;                                                    // 0x02A0(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectSetting                                    StepJump;                                                // 0x03F0(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElementHitEffectSetting
	 * Size -> 0x0540
	 */
	struct FSBElementHitEffectSetting
	{
	public:
		struct FSBEffectSetting                                    Hit;                                                     // 0x0000(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectSetting                                    Melt;                                                    // 0x0150(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectSetting                                    Break;                                                   // 0x02A0(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectSetting                                    Muzzle;                                                  // 0x03F0(0x0150) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHitCameraShakeSetting
	 * Size -> 0x0018
	 */
	struct FSBHitCameraShakeSetting
	{
	public:
		ESBHitCameraShake                                          ShakeType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2C4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CameraShake;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShakeScale;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZW1I[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleScoreWeaponEffect
	 * Size -> 0x0010
	 */
	struct FSBBattleScoreWeaponEffect
	{
	public:
		class UParticleSystem*                                     SpotEffect;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     AuraEffect;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleScoreWeaponEffectSetting
	 * Size -> 0x0010
	 */
	struct FSBBattleScoreWeaponEffectSetting
	{
	public:
		TArray<struct FSBBattleScoreWeaponEffect>                  Effect;                                                  // 0x0000(0x0010) Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerWarpEffect
	 * Size -> 0x00A8
	 */
	struct FSBPlayerWarpEffect
	{
	public:
		class UParticleSystem*                                     RayEmitter;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RaySpawnDelay;                                           // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RaySpawnCount;                                           // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     SphereEmitter;                                           // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SpherePosition;                                          // 0x0018(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SphereSpawnDelay;                                        // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SphereLifeTime;                                          // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WW12[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         SphereMoveCurve;                                         // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SphereMoveScale;                                         // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O5OC[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     AdditionalEffect;                                        // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdditionalEffectSpawnDelay;                              // 0x0048(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialParamDelay;                                      // 0x004C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialParamTime;                                       // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJ51[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Sound;                                                   // 0x0058(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   SoundParam;                                              // 0x0060(0x0040) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      WarpSoundDelay;                                          // 0x00A0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectVisibleType                                       VisibleType;                                             // 0x00A4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KSRI[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNotifyEffectValue
	 * Size -> 0x0004
	 */
	struct FSBNotifyEffectValue
	{
	public:
		bool                                                       bIsNotifyUpdateAttackCollisionScale : 1;                 // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotifyPrepareDestroy : 1;                             // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotifyUpdateBeamAndEnd : 1;                           // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C62P[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantEffectMotionStoredAddress
	 * Size -> 0x0030
	 */
	struct FSBEnemyChantEffectMotionStoredAddress
	{
	public:
		unsigned char                                              MagicActionAnimationSet[0x28];                           // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                MotionKeyName;                                           // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElementResistanceCorrectionSetting
	 * Size -> 0x0008
	 */
	struct FSBElementResistanceCorrectionSetting
	{
	public:
		ESBAttribute                                               ElementType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJ8Z[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResistanceCorrection;                                    // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHitDirectionResistanceCorrection
	 * Size -> 0x0004 (FullSize[0x000C] - InheritedSize[0x0008])
	 */
	struct FSBHitDirectionResistanceCorrection : public FSBElementResistanceCorrectionSetting
	{
	public:
		ESBHitDirection                                            HitDirection;                                            // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WG9H[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCollisionGroupResistanceCorrection
	 * Size -> 0x0004 (FullSize[0x000C] - InheritedSize[0x0008])
	 */
	struct FSBCollisionGroupResistanceCorrection : public FSBElementResistanceCorrectionSetting
	{
	public:
		int32_t                                                    CollisionGroupId;                                        // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBadZoneAvoidanceAngle
	 * Size -> 0x0008
	 */
	struct FSBBadZoneAvoidanceAngle
	{
	public:
		float                                                      CenterAngle;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WidthAngle;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyBattlePart
	 * Size -> 0x0018
	 */
	struct FSBEnemyBattlePart
	{
	public:
		class UClass*                                              TransitionClass;                                         // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActivateModifierName;                                    // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextPartIndex;                                           // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IE4F[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectEffectInfo
	 * Size -> 0x0010
	 */
	struct FSBBDFObjectEffectInfo
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_47RK[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectPartsBreakEffectInfo
	 * Size -> 0x0030
	 */
	struct FSBBDFObjectPartsBreakEffectInfo
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              effectSE[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectCommonTypeInfo
	 * Size -> 0x0040
	 */
	struct FSBBDFObjectCommonTypeInfo
	{
	public:
		struct FSBBDFObjectEffectInfo                              PartsEffect;                                             // 0x0000(0x0010) Edit, DisableEditOnInstance, RepSkip, NoDestructor, NativeAccessSpecifierPublic
		struct FSBBDFObjectPartsBreakEffectInfo                    PartsBreakEffect;                                        // 0x0010(0x0030) Edit, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectMaterialInfo
	 * Size -> 0x0018
	 */
	struct FSBBDFObjectMaterialInfo
	{
	public:
		int32_t                                                    MaterialIndex;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1MNT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  Material;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9U6Q[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectTypeInfo
	 * Size -> 0x0018
	 */
	struct FSBBDFObjectTypeInfo
	{
	public:
		TArray<struct FSBBDFObjectMaterialInfo>                    MaterialInfo;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            Particle;                                                // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectParts
	 * Size -> 0x0098
	 */
	struct FSBBDFObjectParts
	{
	public:
		class FName                                                CollisionGroupName;                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBDFObjectType                                           DefaultType;                                             // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RP9O[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ESBBDFObjectType, struct FSBBDFObjectTypeInfo>        TypeInfo;                                                // 0x0010(0x0050) Edit, DisableEditOnInstance, RepSkip, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FName                                                DeploySocketName;                                        // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AnchorID;                                                // 0x0070(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExtraParts;                                             // 0x0074(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBDFObjectType                                           Type;                                                    // 0x0075(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0076(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7WIA[0x1];                                   // 0x0077(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBEnemyBDFObjectComponent*                          BDFObjectComponent;                                      // 0x0078(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              BDFObjectProjectile;                                     // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9KA7[0x10];                                  // 0x0088(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectDeployInfo
	 * Size -> 0x0030
	 */
	struct FSBBDFObjectDeployInfo
	{
	public:
		TArray<int32_t>                                            OffMaterialIndexes;                                      // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
		TArray<class FName>                                        OffTargetableNames;                                      // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
		TArray<class FName>                                        OffCollisionNames;                                       // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectExtraPartsInfo
	 * Size -> 0x0030
	 */
	struct FSBBDFObjectExtraPartsInfo
	{
	public:
		TArray<int32_t>                                            OnMaterialIndexes;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
		TArray<class FName>                                        OnTargetableNames;                                       // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
		TArray<class FName>                                        OnCollisionNames;                                        // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBDFObjectPartsHealEffectInfo
	 * Size -> 0x0050
	 */
	struct FSBBDFObjectPartsHealEffectInfo
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0014(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttached;                                               // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCastShadow;                                             // 0x0025(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEffectId                                                  EffectId;                                                // 0x0026(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U28W[0x1];                                   // 0x0027(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              effectSE[0x28];                                          // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantMarkerStruct
	 * Size -> 0x00E0
	 */
	struct FSBEnemyChantMarkerStruct
	{
	public:
		unsigned char                                              UnknownData_I5TN[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEnemyChantMarkerParams                           m_MarkerParams;                                          // 0x0008(0x0090) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TR0P[0x18];                                  // 0x0098(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             m_AimLocation;                                           // 0x00B0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1OLF[0x1];                                   // 0x00BC(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       m_bMarkerOverlapped;                                     // 0x00BD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       m_bTargetExist;                                          // 0x00BE(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       m_bShowMarker;                                           // 0x00BF(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      m_MarkerRange;                                           // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      m_MarkerLifeTime;                                        // 0x00C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTime;                                               // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7EK8[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   RelatedProjectileUniqueID;                               // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YK1H[0x2];                                   // 0x00D8(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EMarkerState                                               m_CurrentState;                                          // 0x00DA(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSettedClientMarkerStruct;                             // 0x00DB(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KKDO[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMarkerTargetInfo
	 * Size -> 0x0010
	 */
	struct FSBMarkerTargetInfo
	{
	public:
		int32_t                                                    TargetIndex;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusResistanceSetting
	 * Size -> 0x000C
	 */
	struct FSBBattleStatusResistanceSetting
	{
	public:
		ESBBattleStatusResistType                                  BattleStatusType;                                        // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOTC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResistanceValue;                                         // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V5AZ[0x4];                                   // 0x0008(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.TacticalSkillInfo
	 * Size -> 0x0018
	 */
	struct FTacticalSkillInfo
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       enable;                                                  // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NL3P[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CustomFlagInfo
	 * Size -> 0x0018
	 */
	struct FCustomFlagInfo
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S22J[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBElementDamageSetting
	 * Size -> 0x0010
	 */
	struct FSBElementDamageSetting
	{
	public:
		ESBAttribute                                               ElementType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8AKM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ElementValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStunValueCalculation                                    CalculationType;                                         // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UZNN[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWarpEffectInfo
	 * Size -> 0x0008
	 */
	struct FSBEnemyWarpEffectInfo
	{
	public:
		class UParticleSystem*                                     Particle;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBossWeakConditionCheck
	 * Size -> 0x000C
	 */
	struct FSBBossWeakConditionCheck
	{
	public:
		class FName                                                ConditionId;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BossWeakRatio;                                           // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyCommandSelector
	 * Size -> 0x0018
	 */
	struct FSBEnemyCommandSelector
	{
	public:
		class UDataTable*                                          ActionTable;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Command;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPawnControlKeyMapping
	 * Size -> 0x0018
	 */
	struct FSBPawnControlKeyMapping
	{
	public:
		TArray<struct FInputChord>                                 Keys;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class USBPawnControlKeyAction*                             Action;                                                  // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPawnControlAxisKey
	 * Size -> 0x0020
	 */
	struct FSBPawnControlAxisKey
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInverse;                                                // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VHRK[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPawnControlAxisMapping
	 * Size -> 0x0018
	 */
	struct FSBPawnControlAxisMapping
	{
	public:
		TArray<struct FSBPawnControlAxisKey>                       Keys;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class USBPawnControlAxisAction*                            Action;                                                  // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDeathEffectParams
	 * Size -> 0x0048
	 */
	struct FSBDeathEffectParams
	{
	public:
		class FName                                                EffectAttachPointName;                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EffectActorScale;                                        // 0x0008(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AXGO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystem*>                             ParticleEffects;                                         // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              EffectActors[0x10];                                      // 0x0028(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FAkEventVariables>                           DeathAkEvents;                                           // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyExpBonusScale
	 * Size -> 0x0008
	 */
	struct FSBEnemyExpBonusScale
	{
	public:
		float                                                      BaseScale;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrivateScale;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBExitEffectParams
	 * Size -> 0x0048
	 */
	struct FSBExitEffectParams
	{
	public:
		class FName                                                EffectAttachPointName;                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EffectActorScale;                                        // 0x0008(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FBKD[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystem*>                             ParticleEffects;                                         // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              EffectActors[0x10];                                      // 0x0028(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FAkEventVariables>                           ExitAkEvents;                                            // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckIntParam
	 * Size -> 0x0018
	 */
	struct FSBConditionCheckIntParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    IntValue;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KGGZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyHabitatSettings
	 * Size -> 0x0030
	 */
	struct FSBEnemyHabitatSettings
	{
	public:
		class FString                                              EnemySetId;                                              // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EnemyId;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelMin;                                                // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelMax;                                                // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M8SP[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChangeableMaterialInfo
	 * Size -> 0x0008
	 */
	struct FSBEnemyChangeableMaterialInfo
	{
	public:
		class UMaterialInterface*                                  Material;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChangedMaterialInfo
	 * Size -> 0x0008
	 */
	struct FSBEnemyChangedMaterialInfo
	{
	public:
		int32_t                                                    MaterialIndex;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChangeableMaterialInfoIndex;                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyMaterialVisibilityFlag
	 * Size -> 0x0004
	 */
	struct FSBEnemyMaterialVisibilityFlag
	{
	public:
		uint32_t                                                   Flags;                                                   // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMaterialVisibilityInfo
	 * Size -> 0x0008
	 */
	struct FSBMaterialVisibilityInfo
	{
	public:
		int32_t                                                    MaterialIndex;                                           // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBEnemyMaterialVisibilityFlag                      Flag;                                                    // 0x0004(0x0004) Transient, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMaterialParamInfo
	 * Size -> 0x000C
	 */
	struct FSBMaterialParamInfo
	{
	public:
		class FName                                                MaterialParamName;                                       // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ParamValue;                                              // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMaterialVectorParamInfo
	 * Size -> 0x0018
	 */
	struct FSBMaterialVectorParamInfo
	{
	public:
		class FName                                                MaterialParamName;                                       // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      R;                                                       // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      G;                                                       // 0x000C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      B;                                                       // 0x0010(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      A;                                                       // 0x0014(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyModifierRegisteredConfigInfo
	 * Size -> 0x0020
	 */
	struct FSBEnemyModifierRegisteredConfigInfo
	{
	public:
		unsigned char                                              UnknownData_HE3X[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                OverrideParentConfigName;                                // 0x000C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13X7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBEnemyModifierTemplate_BlueprintBase*              Modifier;                                                // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RandVal
	 * Size -> 0x0008
	 */
	struct FRandVal
	{
	public:
		float                                                      FMin;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FMax;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySpawnBrokenPartsInfo
	 * Size -> 0x0060
	 */
	struct FSBEnemySpawnBrokenPartsInfo
	{
	public:
		unsigned char                                              SpawnActor[0x28];                                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class FName                                                SocketName;                                              // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SpawnLocationOffset;                                     // 0x0030(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            SpawnRotationOffset;                                     // 0x003C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRandVal                                            Distance;                                                // 0x0048(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FRandVal                                            Time;                                                    // 0x0050(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FRandVal                                            Yaw;                                                     // 0x0058(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartsBreakEffectParams
	 * Size -> 0x0058
	 */
	struct FSBPartsBreakEffectParams
	{
	public:
		class UParticleSystem*                                     PSTemplate;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x001C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttached;                                               // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCastShadow;                                             // 0x002D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEffectId                                                  EffectId;                                                // 0x002E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q32D[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              effectSE[0x28];                                          // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPartsBreakInfoStep
	 * Size -> 0x00A0
	 */
	struct FSBEnemyPartsBreakInfoStep
	{
	public:
		float                                                      HpPer;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L9HE[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBEnemySpawnBrokenPartsInfo>                SpawnParts;                                              // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<int32_t>                                            OnMaterialIndexes;                                       // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<int32_t>                                            OffMaterialIndexes;                                      // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBPartsBreakEffectParams>                   Effects;                                                 // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        OffTargetableComponents;                                 // 0x0048(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        OffCollisionComponents;                                  // 0x0058(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      AICustoms;                                               // 0x0068(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class FName>                                        ModifierNames;                                           // 0x0078(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x0088(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6XJB[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        IgnoreBoneNames;                                         // 0x0090(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPartsBreakInfo
	 * Size -> 0x0018
	 */
	struct FSBEnemyPartsBreakInfo
	{
	public:
		class FName                                                CollisionGroupName;                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEnemyPartsBreakInfoStep>                  Steps;                                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyCompoundPartsBreakInfo
	 * Size -> 0x0030
	 */
	struct FSBEnemyCompoundPartsBreakInfo
	{
	public:
		ESBPartsConditonLogic                                      PartsConditionLogic;                                     // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_094N[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBPartsBreakState>                          PartsConditions;                                         // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        ModifierNames;                                           // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61RZ[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPartsCollisionStates
	 * Size -> 0x000C
	 */
	struct FSBEnemyPartsCollisionStates
	{
	public:
		bool                                                       bIsActive;                                               // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LZ5H[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsActivatedWithPartsBreak;                              // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActivatedWithAction;                                  // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WVG2[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPartsTargetableState
	 * Size -> 0x0004
	 */
	struct FSBEnemyPartsTargetableState
	{
	public:
		unsigned char                                              UnknownData_OBI4[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSenseDebugDrawData
	 * Size -> 0x0014
	 */
	struct FSBSenseDebugDrawData
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBox;                                                  // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RX81[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Extent;                                                  // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Sides;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSenserData
	 * Size -> 0x0010
	 */
	struct FSBSenserData
	{
	public:
		TArray<struct FAIFwParameterizedBTRequest>                 Sensers;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySetMemberData
	 * Size -> 0x0044
	 */
	struct FSBEnemySetMemberData
	{
	public:
		class FName                                                EnemyId;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLv;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLv;                                                   // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContentRatio;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyNum;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorTag;                                                // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReserveSlot;                                             // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SpawnAction;                                             // 0x0024(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TermId;                                                  // 0x002C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TermReplaceEnemy;                                        // 0x0034(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InGameTime;                                              // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContentDifficulty;                                       // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySetData
	 * Size -> 0x0028
	 */
	struct FSBEnemySetData
	{
	public:
		class FName                                                EnemySetId;                                              // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorTag;                                                // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActionLotterySpecifier;                                  // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEnemySetMemberData>                       Members;                                                 // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyStanceSetting
	 * Size -> 0x0018
	 */
	struct FSBEnemyStanceSetting
	{
	public:
		class FName                                                StanceName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ActivateModifierNames;                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySummonInfo
	 * Size -> 0x0038
	 */
	struct FSBEnemySummonInfo
	{
	public:
		class FString                                              EnemyId;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0014(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0020(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bAdjustLocation;                                         // 0x002C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJ2Q[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SpawnActionName;                                         // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyTargetInfo
	 * Size -> 0x0018
	 */
	struct FSBEnemyTargetInfo
	{
	public:
		bool                                                       bIsValidLocation;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_K1TZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             TargetLocation;                                          // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TWeakObjectPtr<class AActor>                               TargetActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyMultiTargetInfo
	 * Size -> 0x0010
	 */
	struct FSBEnemyMultiTargetInfo
	{
	public:
		TArray<struct FSBEnemyTargetInfo>                          Elements;                                                // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveStepConditionData
	 * Size -> 0x0018
	 */
	struct FSBEnemyWaveStepConditionData
	{
	public:
		ESBEnemyWaveStepConditionType                              Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHF8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Tag;                                                     // 0x0004(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ParamInt1;                                               // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextStep;                                                // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelaySec;                                                // 0x0014(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveStepData
	 * Size -> 0x0028
	 */
	struct FSBEnemyWaveStepData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemySetId;                                              // 0x0004(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemyWaveSpawnLocation                                  SpawnLocation;                                           // 0x000C(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CCO1[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                IdentificationTag;                                       // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEnemyWaveStepConditionData>               Conditions;                                              // 0x0018(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveData
	 * Size -> 0x0018
	 */
	struct FSBEnemyWaveData
	{
	public:
		class FName                                                EnemyWaveId;                                             // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEnemyWaveStepData>                        Steps;                                                   // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventExecutorItem
	 * Size -> 0x0018
	 */
	struct FSBEventExecutorItem
	{
	public:
		TWeakObjectPtr<class UObject>                              Receiver;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptDelegate                                      Delegate;                                                // 0x0008(0x0010) ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventExecutorItems
	 * Size -> 0x0010
	 */
	struct FSBEventExecutorItems
	{
	public:
		TArray<struct FSBEventExecutorItem>                        List;                                                    // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventExecutorSuspendedEventItem
	 * Size -> 0x0020
	 */
	struct FSBEventExecutorSuspendedEventItem
	{
	public:
		unsigned char                                              UnknownData_Q82C[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Sender;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             Param;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0K9M[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBScriptActorCreateDesc
	 * Size -> 0x00A0
	 */
	struct FSBScriptActorCreateDesc
	{
	public:
		int32_t                                                    Priority;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QPTX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBScriptAsset*                                      Asset;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Code;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LocalFileName;                                           // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePlayerControll;                                  // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTermByPlayerHealth;                                     // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_REDO[0x6E];                                  // 0x0032(0x006E) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventTermsChecker
	 * Size -> 0x0048
	 */
	struct FSBEventTermsChecker
	{
	public:
		unsigned char                                              UnknownData_16H2[0x48];                                  // 0x0000(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSoundEventTermData
	 * Size -> 0x0050
	 */
	struct FSBSoundEventTermData
	{
	public:
		unsigned char                                              StartEventTerm[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              EndEventTerm[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBExchangeItemLogInfo
	 * Size -> 0x0020
	 */
	struct FSBExchangeItemLogInfo
	{
	public:
		class FString                                              ShopId;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProductId;                                               // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeCount;                                           // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NGMZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcAppearanceType
	 * Size -> 0x0003
	 */
	struct FSBNpcAppearanceType
	{
	public:
		ECharaPartsBody                                            BodyType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENpcJob                                                    JobType;                                                 // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMapRegion                                               RegionType;                                              // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCombatCoordinatorGroup
	 * Size -> 0x0010
	 */
	struct FSBCombatCoordinatorGroup
	{
	public:
		TArray<class ASBCombatCoordinator*>                        CombatCoordinators;                                      // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionPointProjectileParams
	 * Size -> 0x0028
	 */
	struct FSBConditionPointProjectileParams
	{
	public:
		struct FDataTableRowHandle                                 ConditionPointHandle;                                    // 0x0000(0x0010) Deprecated, NoDestructor, NativeAccessSpecifierPublic
		struct FSBProjectileSelectHandle                           ConditionPointSelectHandle;                              // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarpPointInfo
	 * Size -> 0x0014
	 */
	struct FSBWarpPointInfo
	{
	public:
		class FName                                                DestinationName;                                         // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LevelName;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishDebugParam
	 * Size -> 0x0020
	 */
	struct FSBFishDebugParam
	{
	public:
		bool                                                       bCheatCheck;                                             // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_26VD[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FishId;                                                  // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FishRarity;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_594D[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFishGameInfoPerPlayer
	 * Size -> 0x0040
	 */
	struct FSBFishGameInfoPerPlayer
	{
	public:
		int32_t                                                    PositionId;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FishId;                                                  // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rarity;                                                  // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FishFightStartTime;                                      // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              FishingFishActor;                                        // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBFishDebugParam                                   FishDebugParam;                                          // 0x0020(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFmCellInfo
	 * Size -> 0x0020
	 */
	struct FSBFmCellInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFmCellPlantedState                                      PlantedState;                                            // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CD09[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UsedSeedId;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFmAttribute                                             Attribute;                                               // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QK1V[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           HarvestTime;                                             // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UsedItemId;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N32A[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFmSendPresentItemInfo
	 * Size -> 0x000C
	 */
	struct FSBFmSendPresentItemInfo
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFmPresentFriendInfo
	 * Size -> 0x0018
	 */
	struct FSBFmPresentFriendInfo
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JUDJ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFmSendPresentItemInfo>                    ItemInfoList;                                            // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageReactionData
	 * Size -> 0x0030
	 */
	struct FSBFoliageReactionData
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HalfHeight;                                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strength;                                                // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Center;                                                  // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Peak;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrushScale;                                              // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageSoundType
	 * Size -> 0x0020
	 */
	struct FSBFoliageSoundType
	{
	public:
		class UStaticMesh*                                         Mesh;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioStart;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0010(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageParticleType
	 * Size -> 0x0030
	 */
	struct FSBFoliageParticleType
	{
	public:
		class UStaticMesh*                                         Mesh;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  MaterialOverride;                                        // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     Particle;                                                // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRotation;                                               // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6EFO[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Distance;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageSoundInstance
	 * Size -> 0x0028
	 */
	struct FSBFoliageSoundInstance
	{
	public:
		unsigned char                                              UnknownData_QGIT[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SoundTypeId;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RK3A[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkComponent*                                        AkComponent;                                             // 0x0020(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageParticleInstance
	 * Size -> 0x0050
	 */
	struct FSBFoliageParticleInstance
	{
	public:
		class UParticleSystem*                                     ParticleSystem;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ParticleTypeId;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4W7P[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0010(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SpawnDistanceSq;                                         // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DestroyDistanceSq;                                       // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            ParticleObject;                                          // 0x0048(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGrassSoundEventList
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBGrassSoundEventList : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Threshold;                                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BH8T[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGrassSoundMeshList
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBGrassSoundMeshList : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MeshPtr[0x28];                                           // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      Priority;                                                // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JXV5[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSurfaceFootprint
	 * Size -> 0x0020
	 */
	struct FSBSurfaceFootprint
	{
	public:
		EPhysicalSurface                                           PhysicalSurface;                                         // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZOEX[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     FootprintEffect;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UNiagaraSystem*                                      NiagaraEffect;                                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                   FootprintDecal;                                          // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFootprintSoundSetting
	 * Size -> 0x0030
	 */
	struct FSBFootprintSoundSetting
	{
	public:
		unsigned char                                              Sound[0x28];                                             // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      DelayTime;                                               // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QUE9[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFootPrintDecal
	 * Size -> 0x0010
	 */
	struct FSBFootPrintDecal
	{
	public:
		TWeakObjectPtr<class UDecalComponent>                      m_DecalComponent;                                        // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IM0Z[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcCharaCreateType
	 * Size -> 0x0078
	 */
	struct FSBNpcCharaCreateType
	{
	public:
		unsigned char                                              CharaCreateData[0x28];                                   // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AnimationSet[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              CustomAnimClass[0x28];                                   // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcAnimalType
	 * Size -> 0x0050
	 */
	struct FSBNpcAnimalType
	{
	public:
		unsigned char                                              Mesh[0x28];                                              // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AnimInstanceClass[0x28];                                 // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcChangeCharaCreateInfo
	 * Size -> 0x0088
	 */
	struct FSBNpcChangeCharaCreateInfo
	{
	public:
		struct FSBNpcCharaCreateType                               CharaCreate;                                             // 0x0000(0x0078) Edit, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         EventTriggerHandles;                                     // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcSpawnPointSettings
	 * Size -> 0x0110
	 */
	struct FSBNpcSpawnPointSettings
	{
	public:
		ESBNpcSpawnPointCharacterType                              CharacterType;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBNpcAppearanceType                                Appearance;                                              // 0x0001(0x0003) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2P35[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBNpcCharaCreateType                               CharaCreate;                                             // 0x0008(0x0078) Edit, NativeAccessSpecifierPublic
		unsigned char                                              ExtraNpcClass[0x28];                                     // 0x0080(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FSBNpcAnimalType                                    animal;                                                  // 0x00A8(0x0050) Edit, NativeAccessSpecifierPublic
		TArray<struct FSBNpcChangeCharaCreateInfo>                 ChangeCharaCreateInfos;                                  // 0x00F8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2R3X[0x8];                                   // 0x0108(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFreeBuffNpcSpawnParameter
	 * Size -> 0x0140
	 */
	struct FSBFreeBuffNpcSpawnParameter
	{
	public:
		class FName                                                ProfileDataId;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBNpcSpawnPointSettings                            SpawnSettings;                                           // 0x0008(0x0110) Edit, NativeAccessSpecifierPublic
		struct FSBNpcScriptInfo                                    ScriptInfo;                                              // 0x0118(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcInteractionSettings
	 * Size -> 0x0040
	 */
	struct FSBNpcInteractionSettings
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M9Y7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SelectCursorAttachBoneName;                              // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SelectCursorLocationOffset;                              // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LookAtLocationBoneName;                                  // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LookAtLocationOffset;                                    // 0x0020(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReachableDistance;                                       // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReachableAnglePitch;                                     // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReachableAngleYaw;                                       // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionTurnAngle;                                    // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InteractionLookAt;                                       // 0x003C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_41GD[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDownloadImageCache
	 * Size -> 0x0020
	 */
	struct FSBDownloadImageCache
	{
	public:
		unsigned char                                              UnknownData_ZPIS[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2DDynamic*                                   Texture;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ROUD[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonScriptQueue
	 * Size -> 0x0010
	 */
	struct FSBDungeonScriptQueue
	{
	public:
		class FName                                                ScriptId;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequestCount;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndCount;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTextTableDatabase
	 * Size -> 0x01A0
	 */
	struct FSBTextTableDatabase
	{
	public:
		class USBTextTableAsset*                                   Common;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   QuestCommon;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   CharacterName;                                           // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   LocationName;                                            // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   PlayerClassName;                                         // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   PartySystemTextTable;                                    // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   ZoneName;                                                // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   ZoneShortName;                                           // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   BattleLogMessage;                                        // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   SystemLogMessage;                                        // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   Activity;                                                // 0x0050(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   KeyName;                                                 // 0x0058(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   KeyShortName;                                            // 0x0060(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class USBTextTableAsset*>                KeyNameSkin;                                             // 0x0068(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FName, class USBTextTableAsset*>                KeyShortNameSkin;                                        // 0x00B8(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   WarpPoint;                                               // 0x0108(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   Dungeon;                                                 // 0x0110(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   DungeonClearCondition;                                   // 0x0118(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   EventTriggerName;                                        // 0x0120(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   SendMailData;                                            // 0x0128(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   LiquidMemoryEfficacyLogMessage;                          // 0x0130(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   SBRetCode;                                               // 0x0138(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   UncheaterMessage;                                        // 0x0140(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   FixedPhrase;                                             // 0x0148(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   WeaponTypeText;                                          // 0x0150(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   GraphicsOptionText;                                      // 0x0158(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   OutGameBuffTypeText;                                     // 0x0160(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   ObjectNameText;                                          // 0x0168(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   AdventureBoardText;                                      // 0x0170(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   SystemMessageText;                                       // 0x0178(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   NotifyMessageText;                                       // 0x0180(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   MainAbilityCourseText;                                   // 0x0188(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          TextAssets;                                              // 0x0190(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          TextAssetsByFlavorText;                                  // 0x0198(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScoreAttackSettings
	 * Size -> 0x0158 (FullSize[0x0160] - InheritedSize[0x0008])
	 */
	struct FSBScoreAttackSettings : public FTableRowBase
	{
	public:
		float                                                      StartTimeLimit;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnemyDamageScore;                                        // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnemyKillBonus;                                          // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ComboLimitTime;                                          // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScoreSupplierTime;                                       // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScoreSupplierRate;                                       // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, float>                                       ComboBonus;                                              // 0x0020(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FString, int32_t>                               GimmickScore;                                            // 0x0070(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                     ResultKillBonus;                                         // 0x00C0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                     ResultMaxComboBonus;                                     // 0x0110(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMzBattleSettings
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBMzBattleSettings : public FTableRowBase
	{
	public:
		int32_t                                                    ClearTime;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DeadCount;                                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BurstCount;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChainComboCount;                                         // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RatingTotal;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GVG[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaResultItemData
	 * Size -> 0x000C
	 */
	struct FSBGashaResultItemData
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          RewardItemType;                                          // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R7XV[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRarity                                                  Rarity;                                                  // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRarity                                                  DemoRarity;                                              // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SFPE[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaResultData
	 * Size -> 0x0018
	 */
	struct FSBGashaResultData
	{
	public:
		TArray<struct FSBGashaResultItemData>                      Items;                                                   // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		ESBGashaDemoRank                                           DemoRank_GashaStart;                                     // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBGashaDemoRank                                           DemoRank_Character;                                      // 0x0011(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBGashaDemoRank                                           DemoRank_GashaMachine;                                   // 0x0012(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WO9U[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBHttpQueryPool
	 * Size -> 0x0020
	 */
	struct FSBHttpQueryPool
	{
	public:
		TArray<class USBHttpQuery*>                                InUseList;                                               // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USBHttpQuery*>                                FreeList;                                                // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CharacterCraftRecepi
	 * Size -> 0x0008
	 */
	struct FCharacterCraftRecepi
	{
	public:
		int32_t                                                    RecepiId;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsCrafted;                                               // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3XZX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillChargeSettingBase
	 * Size -> 0x0018
	 */
	struct FSBPlayerSkillChargeSettingBase
	{
	public:
		unsigned char                                              UnknownData_NVQA[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckIntParam>                   ChargeSpeedModifyList;                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChargeProjectileChangeCondition
	 * Size -> 0x0030
	 */
	struct FSBChargeProjectileChangeCondition
	{
	public:
		unsigned char                                              UnknownData_CODF[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   ChangeProjectileIndex;                                   // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPBK[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ChangeConditionList;                                     // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ChangeProjectileHandle;                                  // 0x0020(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillChargeLevelSetting
	 * Size -> 0x0050
	 */
	struct FSBPlayerSkillChargeLevelSetting
	{
	public:
		unsigned char                                              UnknownData_2358[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChargeTime;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_66JQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ChargeConditionList;                                     // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBEffectAsset>                              ChargeEffectList;                                        // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         ProjectileHandleList;                                    // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBChargeProjectileChangeCondition>          ProjectileChangeConditionList;                           // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillChargeSetting
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FSBPlayerSkillChargeSetting : public FSBPlayerSkillChargeSettingBase
	{
	public:
		TArray<struct FSBPlayerSkillChargeLevelSetting>            LevelSettingList;                                        // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillMarkerDecalOverrideSetting
	 * Size -> 0x0038
	 */
	struct FSBSkillMarkerDecalOverrideSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              DecalMaterial[0x28];                                     // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillMarkerSetting
	 * Size -> 0x0070
	 */
	struct FSBSkillMarkerSetting
	{
	public:
		unsigned char                                              MarkerActor[0x28];                                       // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FSBSkillMarkerDecalOverrideSetting>          MarkerDecalOverrideSettingList;                          // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bSetMarkerRadius : 1;                                    // 0x0038(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FU02[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MarkerRadius;                                            // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillMarkerPlace                                        MarkerPlaceType;                                         // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillMarkerAim                                          MarkerAimType;                                           // 0x0041(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillMarkerAim                                          MarkerAimTypeLockon;                                     // 0x0042(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillMarkerRayCollision                                 MarkerAimRayCollision;                                   // 0x0043(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillMarkerRange                                        MarkerRangeType;                                         // 0x0044(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VJKA[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RangeMin;                                                // 0x0048(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangeMax;                                                // 0x004C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightRange;                                             // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MarkerColRadius;                                         // 0x0054(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAdjustRangeByMoveInput;                              // 0x0058(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQ4A[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialRange;                                            // 0x005C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangeControlSpeed;                                       // 0x0060(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanTurn;                                                // 0x0064(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGameInput                                                 MarkerTurnButton;                                        // 0x0065(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowMarkerAnytime;                                      // 0x0066(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStampMarkerAtLaunchProjectile;                          // 0x0067(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StampLifeTime;                                           // 0x0068(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R8N1[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMountIKParam
	 * Size -> 0x0030
	 */
	struct FSBMountIKParam
	{
	public:
		bool                                                       bIsActiveLeftGrip;                                       // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ICJJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketNameLeftGrip;                                      // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActiveRightGrip;                                      // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4FOU[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketNameRightGrip;                                     // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActiveLeftSole;                                       // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZUS9[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketNameLeftSole;                                      // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActiveRightSole;                                      // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JY2I[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketNameRightSole;                                     // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInitialiCheatCommandData
	 * Size -> 0x0018
	 */
	struct FSBInitialiCheatCommandData
	{
	public:
		bool                                                       bIsActive;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NPWH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Command;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInstanceBattleProviderSpawnInfo
	 * Size -> 0x0018
	 */
	struct FSBInstanceBattleProviderSpawnInfo
	{
	public:
		class ATargetPoint*                                        SpawnPoint;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SpawnClass;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E867[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestProgressItem
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestProgressItem
	{
	public:
		class FString                                              Condition;                                               // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProgressNumer;                                           // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Completed;                                               // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VOOX[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestProgressInfo
	 * Size -> 0x0010
	 */
	struct FSBInterruptQuestProgressInfo
	{
	public:
		TArray<struct FSBInterruptQuestProgressItem>               Items;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTextTableHash
	 * Size -> 0x0004
	 */
	struct FSBTextTableHash
	{
	public:
		int32_t                                                    TextId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestMasterData_SubCondData
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestMasterData_SubCondData
	{
	public:
		EInterruptQuestSubConditionType                            Cond;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInterruptQuestSubConditionAreaType                        AreaType;                                                // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GG3H[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value_2;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value_3;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestMasterData_StartCondData
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestMasterData_StartCondData
	{
	public:
		EInterruptQuestMainConditionType                           Cond;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GVGL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBInterruptQuestMasterData_SubCondData>     SubCondList;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestMasterData_StartMainAction
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestMasterData_StartMainAction
	{
	public:
		EInterruptQuestStartMainActionType                         Cond;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5OD9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value_2;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value_3;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestMasterData_AchievementCond
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestMasterData_AchievementCond
	{
	public:
		EInterruptQuestAchievementType                             Cond;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZSQ8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value_2;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value_3;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestMasterData_StepupCond
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestMasterData_StepupCond
	{
	public:
		EInterruptQuestStepupType                                  Cond;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HWO8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value_2;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value_3;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestMasterData
	 * Size -> 0x00B8
	 */
	struct FSBInterruptQuestMasterData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameTextId;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    QuestAreaRadius;                                         // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GimmickAreaRadius;                                       // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimeLimit;                                               // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CoolTime;                                                // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AnyOneCheckFlag;                                         // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E3AK[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBInterruptQuestMasterData_StartCondData           QuestCound;                                              // 0x0028(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBInterruptQuestMasterData_StartMainAction> StartMainActionList;                                     // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBInterruptQuestMasterData_AchievementCond> AchievementCondList;                                     // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBInterruptQuestMasterData_StepupCond              StepupCond;                                              // 0x0070(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		EInterruptQuestRewardType                                  RewardType;                                              // 0x0098(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MVCL[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      RewardIdList;                                            // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		EInterruptQuestFailureStepType                             FailureStepBack;                                         // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Z18[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestFieldObjectVisible
	 * Size -> 0x0014
	 */
	struct FSBInterruptQuestFieldObjectVisible
	{
	public:
		unsigned char                                              UnknownData_WGXB[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.FilterGroup
	 * Size -> 0x0010
	 */
	struct FFilterGroup
	{
	public:
		TArray<EItemFilterType>                                    Filters;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerJointGestureInfo
	 * Size -> 0x0014
	 */
	struct FSBPlayerJointGestureInfo
	{
	public:
		class FName                                                EmoteName;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASBPlayerCharacter>                   TargetCharacter;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBJointGestureStatusType                                  StatusType;                                              // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSender;                                                 // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBJankenHandType                                          JankenHandType;                                          // 0x0012(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XCGW[0x1];                                   // 0x0013(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.EditorStreamingDependencies
	 * Size -> 0x0018
	 */
	struct FEditorStreamingDependencies
	{
	public:
		class FName                                                BaseLevel;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        DependentLevels;                                         // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBReadBookmarkSaveData
	 * Size -> 0x0010
	 */
	struct FSBReadBookmarkSaveData
	{
	public:
		TArray<class FName>                                        ReadBookmarkList;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBReadLibraryItemData
	 * Size -> 0x0018
	 */
	struct FSBReadLibraryItemData
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NZR[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ReadMakeList;                                            // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryItemSaveData
	 * Size -> 0x0010
	 */
	struct FSBLibraryItemSaveData
	{
	public:
		TArray<struct FSBReadLibraryItemData>                      ReadList;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTheaterModeInfo
	 * Size -> 0x0014
	 */
	struct FSBTheaterModeInfo
	{
	public:
		bool                                                       PlayedDemo;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C13R[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SelectedCategoryId;                                      // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SelectedListId;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CategoryOffset;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ListOffset;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryEnemyReadData
	 * Size -> 0x0020
	 */
	struct FSBLibraryEnemyReadData
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DetailTabCount;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExplainTabCount;                                         // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        AreaIdList;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBReadLibraryWeaponData
	 * Size -> 0x0008
	 */
	struct FSBReadLibraryWeaponData
	{
	public:
		int32_t                                                    WeaponIndex;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ReadRecipeTab;                                           // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17RQ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryWeaponSaveData
	 * Size -> 0x0010
	 */
	struct FSBLibraryWeaponSaveData
	{
	public:
		TArray<struct FSBReadLibraryWeaponData>                    ReadList;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBReadLibraryImagineData
	 * Size -> 0x0008
	 */
	struct FSBReadLibraryImagineData
	{
	public:
		int32_t                                                    ImagineIndex;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ReadRecipeTab;                                           // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9V99[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryImagineSaveData
	 * Size -> 0x0010
	 */
	struct FSBLibraryImagineSaveData
	{
	public:
		TArray<struct FSBReadLibraryImagineData>                   ReadList;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLibrarySaveData
	 * Size -> 0x0218
	 */
	struct FSBLibrarySaveData
	{
	public:
		TMap<class FString, struct FSBReadBookmarkSaveData>        ReadBookmarkSaveData;                                    // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, struct FSBLibraryItemSaveData>         ReadItemSaveData;                                        // 0x0050(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<class FName>                                        ReadMonsterIdList;                                       // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ReadWeaponIdList;                                        // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ReadAchievementIdList;                                   // 0x00C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ReadAwardIdList;                                         // 0x00D0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        ReadDemoIdList;                                          // 0x00E0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBTheaterModeInfo                                  TheaterModeInfo;                                         // 0x00F0(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VMHZ[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ReadMountImagineIdList;                                  // 0x0108(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBLibraryEnemyReadData>                     ReadMonsterList;                                         // 0x0118(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<class FString, struct FSBLibraryWeaponSaveData>       ReadWeaponSaveData;                                      // 0x0128(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, struct FSBLibraryImagineSaveData>      ReadBattleImagineSaveData;                               // 0x0178(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, struct FSBLibraryImagineSaveData>      ReadEnhanceImagineSaveData;                              // 0x01C8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLineSoundData
	 * Size -> 0x0018
	 */
	struct FSBLineSoundData
	{
	public:
		struct FVector                                             Start;                                                   // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             End;                                                     // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCacheBonePosition
	 * Size -> 0x0040
	 */
	struct FSBCacheBonePosition
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3VBA[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0010(0x0030) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBShortPinInfo
	 * Size -> 0x0048
	 */
	struct FSBShortPinInfo
	{
	public:
		class FString                                              PinId;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBShortPinType                                            ShortPinType;                                            // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EWUK[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASBCharacter*                                        OwnerCharacter;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASBCharacter*                                        TargetCharacter;                                         // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 PinLocation;                                             // 0x0028(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XAO[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           SetTime;                                                 // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AddNew;                                                  // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AGS7[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterDataStatus
	 * Size -> 0x0018
	 */
	struct FSBMasterDataStatus
	{
	public:
		ESBMasterDataStatus                                        Status;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEJ9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBHttpQuery*                                        HttpQuery;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResponseCode;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A2JO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterDataStatusList
	 * Size -> 0x0010
	 */
	struct FSBMasterDataStatusList
	{
	public:
		TArray<struct FSBMasterDataStatus>                         StatusList;                                              // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMeshClimbingHandsOffset
	 * Size -> 0x0010
	 */
	struct FSBMeshClimbingHandsOffset
	{
	public:
		float                                                      Height;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0004(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMountPlayingEffect
	 * Size -> 0x00E0
	 */
	struct FSBMountPlayingEffect
	{
	public:
		unsigned char                                              UnknownData_RP05[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x0008(0x00C8) Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_RNRI[0x10];                                  // 0x00D0(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMountEffectParams
	 * Size -> 0x0048
	 */
	struct FSBMountEffectParams
	{
	public:
		ESBMountEffectType                                         EffectType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOneShot;                                                // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JRAT[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     PSTemplate;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0024(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bAttached;                                               // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCastShadow;                                             // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09YD[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumIntervalTime;                                     // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TM5Z[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AkAudioEvent;                                            // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerInterpMoveSetting
	 * Size -> 0x0040
	 */
	struct FSBPlayerInterpMoveSetting
	{
	public:
		float                                                      NearGoalBrakeDist;                                       // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmoothingCompleteDist;                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmoothingCompleteDegree;                                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedThreshold;                                          // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedAcceleration;                                       // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedDeceleration;                                       // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlyingVelocityZ;                                         // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlyingZLimit;                                            // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotateYawScale;                                          // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotateYawScaleNearAdjustDist;                            // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotateYawScaleNearAdjustScale;                           // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SetTargetZThreshold;                                     // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceModeSpeedZeroAngle;                                 // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwimmingZSpeed;                                          // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFloorDist;                                            // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FallMaxTime;                                             // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChoiceDialogParameter
	 * Size -> 0x0010
	 */
	struct FSBChoiceDialogParameter
	{
	public:
		class FName                                                TextId;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      LevelSequence;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChoiceDialogPayload
	 * Size -> 0x0018
	 */
	struct FSBChoiceDialogPayload
	{
	public:
		class FName                                                QuestionTextId;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBChoiceDialogParameter>                    SelectItems;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MovieSceneChoiceDialogSectionData
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FMovieSceneChoiceDialogSectionData : public FMovieSceneChannel
	{
	public:
		TArray<struct FFrameNumber>                                Times;                                                   // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FSBChoiceDialogPayload>                      KeyValues;                                               // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OFCP[0x60];                                  // 0x0028(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNaEventInfo
	 * Size -> 0x0058
	 */
	struct FSBNaEventInfo
	{
	public:
		int32_t                                                    EventId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerAcquiredPoint;                                     // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OnTeamAcquiredPoint;                                     // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TeamAcquiredPoint;                                       // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ReceivedPersonRewardIdList;                              // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ReceivedTeamRewardIdList;                                // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bValidEndDate;                                           // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2H4Y[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           EndDate;                                                 // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidQuestEndDate;                                      // 0x0040(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVSB[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           QuestEndDate;                                            // 0x0048(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasNewTeamAsset;                                        // 0x0050(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MY4U[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlatformInfo
	 * Size -> 0x0020
	 */
	struct FSBPlatformInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlatformType                                            Type;                                                    // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9GG[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UserId;                                                  // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPSOnly;                                                 // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           PrivilegeType;                                           // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MIJP[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNaEventTeamMemberInfo
	 * Size -> 0x00C0
	 */
	struct FSBNaEventTeamMemberInfo
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UserId;                                                  // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              shortId;                                                 // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildId;                                                 // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterName;                                           // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x005C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGuildMemberRole                                           GuildMemberRole;                                         // 0x005D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NFJ[0x2];                                   // 0x005E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          TensionTag;                                              // 0x0070(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RF4[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OnlineStatus;                                            // 0x0074(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSendLike;                                               // 0x0078(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DPA2[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FaceImagePath;                                           // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0090(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    OnTeamAcquiredPoint;                                     // 0x00B0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I767[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           UpdateAt;                                                // 0x00B8(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNetworkCafeInfo
	 * Size -> 0x0010
	 */
	struct FSBNetworkCafeInfo
	{
	public:
		bool                                                       bIsNetworkCafe;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZEGS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   NetworkCafePollingTime;                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NetworkCafeNotificationTime;                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   NetworkCafeTotalTimePlayedToday;                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRecastTimeInfo
	 * Size -> 0x0010
	 */
	struct FSBRecastTimeInfo
	{
	public:
		struct FDateTime                                           Finish;                                                  // 0x0000(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      Max;                                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    ItemIndex;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.UnlockedQuestInfo
	 * Size -> 0x0008
	 */
	struct FUnlockedQuestInfo
	{
	public:
		int32_t                                                    QuestIndex;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAcceptable;                                             // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LAYJ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.QuestProgressItem
	 * Size -> 0x0048
	 */
	struct FQuestProgressItem
	{
	public:
		int32_t                                                    ConditionDataId;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MY43[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StepNo;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTalkNpc;                                                // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XT2[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KillEnemyNum;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CollectItemNum;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClearIDNum;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bArrived;                                                // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPayedMoney;                                             // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayedEmote;                                            // 0x001E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActivatedWarpPortal;                                    // 0x001F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InteractedNum;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CraftItemNum;                                            // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdventurerRankUp;                                       // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChallengeQuestStart;                                    // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9PNE[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FangExpeditionNum;                                       // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackBNum;                                               // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T4EB[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      AchieveConditions;                                       // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.QuestProgressInfo
	 * Size -> 0x0010
	 */
	struct FQuestProgressInfo
	{
	public:
		TArray<struct FQuestProgressItem>                          Items;                                                   // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.AcceptedQuestInfo
	 * Size -> 0x0060
	 */
	struct FAcceptedQuestInfo
	{
	public:
		int32_t                                                    QuestIndex;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestStatus                                               Status;                                                  // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ILM7[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurStep;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1L2I[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Progress;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FQuestProgressInfo                                  ProgressInfo;                                            // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    ClearCount;                                              // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SelfContributionPoint;                                   // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TeamContributionPoint;                                   // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DamageRate;                                              // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankingRank;                                             // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7D61[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    UpdatedAt;                                               // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    RevivalAt;                                               // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResponseCode;                                            // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WULG[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGatherPointRespawnInfo
	 * Size -> 0x0058
	 */
	struct FSBGatherPointRespawnInfo
	{
	public:
		class FString                                              WorldName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GatherPointId;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6O3Z[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           RespawnTime;                                             // 0x0018(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PickupAtOnce;                                            // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BCE4[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EntriedObjectId;                                         // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EntriedTag;                                              // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFiexedRespawn;                                         // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsReturnCity;                                            // 0x0049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsGathered;                                              // 0x004A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_THHY[0x5];                                   // 0x004B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       RespawnInterval;                                         // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I696[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTreasureBoxRespawnInfo
	 * Size -> 0x0050
	 */
	struct FSBTreasureBoxRespawnInfo
	{
	public:
		class FString                                              WorldName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TreasureId;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_00WB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           RespawnTime;                                             // 0x0018(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PickupAtOnce;                                            // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YS7B[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EntriedObjectId;                                         // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EntriedTag;                                              // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RespawnInterval;                                         // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V71H[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFreeBuffPointRespawnInfo
	 * Size -> 0x0058
	 */
	struct FSBFreeBuffPointRespawnInfo
	{
	public:
		class FString                                              WorldName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FreeBuffPointId;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RBRQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           EndBuffTime;                                             // 0x0018(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PickupAtOnce;                                            // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6JC9[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EntriedObjectId;                                         // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EntriedTag;                                              // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsReturnCity;                                            // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInteracted;                                            // 0x0049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HQL[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       RespawnInterval;                                         // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JUI3[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFreeBuffPlayerBuffTimeInfo
	 * Size -> 0x0018
	 */
	struct FSBFreeBuffPlayerBuffTimeInfo
	{
	public:
		ESBFreeBuffPointType                                       BuffType;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X8PP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           EndBuffTime;                                             // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActivate;                                              // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PN7M[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTreasureBoxOpeningLotResult
	 * Size -> 0x0068
	 */
	struct FSBTreasureBoxOpeningLotResult
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRewardType                                   Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HJV[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ObjectId;                                                // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EntriedTag;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ContentIdName;                                           // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           GatheredAt;                                              // 0x0050(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           RespawnAt;                                               // 0x0058(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DrawType;                                                // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PFCD[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGatherPointGimmicInfo
	 * Size -> 0x0028
	 */
	struct FSBGatherPointGimmicInfo
	{
	public:
		class FString                                              map_id;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              gimmick_point;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    action_date;                                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YU4B[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAchievementInfo
	 * Size -> 0x0004
	 */
	struct FSBAchievementInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.DecorationData
	 * Size -> 0x0010
	 */
	struct FDecorationData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UO7P[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           CreateAt;                                                // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryInfo
	 * Size -> 0x0028
	 */
	struct FSBLiquidMemoryInfo
	{
	public:
		int32_t                                                    LiquidMemoryIndex;                                       // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentLevel;                                            // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccumulatedAmount;                                       // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RemainingUseCount;                                       // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           RemainingUseTime;                                        // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ActivateFlag;                                            // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DBB[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ActivateLevel;                                           // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           LastUpdatedTime;                                         // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PhotoModeUploadedImageInfo
	 * Size -> 0x0028
	 */
	struct FPhotoModeUploadedImageInfo
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagePath;                                               // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLocked;                                               // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EUNV[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLoginBonusRewardData
	 * Size -> 0x0030
	 */
	struct FSBLoginBonusRewardData
	{
	public:
		int32_t                                                    Type;                                                    // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NISZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ID;                                                      // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TOW8[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ExtraData;                                               // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLoginBonusReward
	 * Size -> 0x0018
	 */
	struct FSBLoginBonusReward
	{
	public:
		int32_t                                                    Day;                                                     // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Pickup;                                                  // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZHW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBLoginBonusRewardData>                     RewardData;                                              // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLoginBonus
	 * Size -> 0x0080
	 */
	struct FSBLoginBonus
	{
	public:
		class FString                                              LoginBonusId;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Type;                                                    // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Target;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalDay;                                                // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BannerImageId;                                           // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LoginBonusName;                                          // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartTime;                                               // 0x0040(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndTime;                                                 // 0x0048(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PublicType;                                              // 0x0050(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PurchaseLimitId;                                         // 0x0054(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLoginBonusReward>                         Reward;                                                  // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    TablePosition;                                           // 0x0068(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XC5[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BackImgId;                                               // 0x0070(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterReward
	 * Size -> 0x0014
	 */
	struct FSBMasterReward
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          RewardType;                                              // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3BS5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionRandomRewardData
	 * Size -> 0x0020
	 */
	struct FSBFang_expeditionRandomRewardData
	{
	public:
		struct FSBMasterReward                                     Reward;                                                  // 0x0000(0x0014) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TypeCount;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Lottery;                                                 // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionRandomRewardListData
	 * Size -> 0x0018
	 */
	struct FSBFang_expeditionRandomRewardListData
	{
	public:
		int32_t                                                    TypeCount;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RMZ4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFang_expeditionRandomRewardData>          List;                                                    // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionRewardData
	 * Size -> 0x0020
	 */
	struct FSBFang_expeditionRewardData
	{
	public:
		TArray<struct FSBMasterReward>                             CertaintyReward;                                         // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBFang_expeditionRandomRewardListData>      RandomReward;                                            // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionTimeData
	 * Size -> 0x0040
	 */
	struct FSBFang_expeditionTimeData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BaseTime;                                                // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxAddNum;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U0C8[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBFang_expeditionRewardData                        Reward;                                                  // 0x0020(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionLimitData
	 * Size -> 0x0020
	 */
	struct FSBFang_expeditionLimitData
	{
	public:
		ESBFang_expeditionLimitType                                Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HKUJ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Condition;                                               // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ClearFlag;                                               // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJAT[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionAreaData
	 * Size -> 0x00A8
	 */
	struct FSBFang_expeditionAreaData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AreaName;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Category;                                                // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQC3[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Category2;                                               // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxMountNum;                                             // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Rare;                                                    // 0x0040(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QPYN[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TermId;                                                  // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NowExp;                                                  // 0x004C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextExp;                                                 // 0x0050(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShorteningEffect;                                        // 0x0054(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpeditionCount;                                         // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           IconPosition;                                            // 0x005C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MFVH[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RequesterName;                                           // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RequestDetailText;                                       // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBFang_expeditionTimeData>                  TimeData;                                                // 0x0088(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBFang_expeditionLimitData>                 LimitData;                                               // 0x0098(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionPlayData
	 * Size -> 0x0120
	 */
	struct FSBFang_expeditionPlayData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MasterId;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFang_expeditionStatus                                   Status;                                                  // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6FSA[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           EndTime;                                                 // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Exp;                                                     // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            UseTokenIds;                                             // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      MountUniqueIds;                                          // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      RewardIds;                                               // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       CanImmediate;                                            // 0x0070(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPO4[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBFang_expeditionAreaData                          AreaData;                                                // 0x0078(0x00A8) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionData
	 * Size -> 0x0038
	 */
	struct FSBFang_expeditionData
	{
	public:
		TArray<struct FSBFang_expeditionAreaData>                  AreaData;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBFang_expeditionPlayData>                  PlayData;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    ExpeditionSlotMax;                                       // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRareOpen;                                              // 0x0024(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KKB3[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RareTimeStack;                                           // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RemainingCancel;                                         // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpeditionSlotOpenCount;                                 // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z539[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponAbilities
	 * Size -> 0x0020
	 */
	struct FSBWeaponAbilities
	{
	public:
		class FName                                                MainPerkPickId;                                          // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MainPerkId;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWeaponPerkRarity                                        MainPerkRarity;                                          // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIA2[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MainPerkMainEffectLevel;                                 // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MainPerkSubEffectLevel;                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerkId;                                               // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerkLevel;                                            // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterWeaponPerkValues
	 * Size -> 0x0010
	 */
	struct FSBCharacterWeaponPerkValues
	{
	public:
		int32_t                                                    AbilityParts1Value1;                                     // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbilityParts1Value2;                                     // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbilityParts2Value1;                                     // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbilityParts2Value2;                                     // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterWeaponPerkData
	 * Size -> 0x001C
	 */
	struct FSBCharacterWeaponPerkData
	{
	public:
		int32_t                                                    PerkId;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharacterWeaponPerkValues                        Values;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Rarity;                                                  // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponItemData
	 * Size -> 0x0078
	 */
	struct FSBWeaponItemData
	{
	public:
		int32_t                                                    WeaponID;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpecialPerkID;                                           // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpecialPerkValue;                                        // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNewFormat;                                            // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UMZC[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBWeaponAbilities                                  Abilities;                                               // 0x0010(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    PerkUnlockNum;                                           // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJ4S[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterWeaponPerkData>                  PerkList;                                                // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    UsedPerkSlot;                                            // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AppearanceWeaponId;                                      // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AppearanceWeaponStickerId;                               // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XFLH[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           AppearanceWeaponStickerReleaseTime;                      // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAppearanceWeaponStickerAttached;                      // 0x0060(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTermLimited;                                           // 0x0061(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KC45[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0068(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDecayed;                                               // 0x0070(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HRYE[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StackBNum;                                               // 0x0074(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CostumeData
	 * Size -> 0x0020
	 */
	struct FCostumeData
	{
	public:
		int32_t                                                    ColorIndex;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTermLimited;                                           // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O8EM[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterImagineData
	 * Size -> 0x0028
	 */
	struct FSBCharacterImagineData
	{
	public:
		int32_t                                                    PerkId;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTermLimited;                                           // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IGZQ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackBNum;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNewFormat;                                             // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RAVB[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PerkPickId;                                              // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PerkMainEffectRank;                                      // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PerkSubEffectRank;                                       // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSK9[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterMountImagineData
	 * Size -> 0x0028
	 */
	struct FSBCharacterMountImagineData
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImagineId;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTermLimited;                                           // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SRDL[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackBNum;                                               // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseFang_expedition;                                      // 0x0024(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W4TB[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentData
	 * Size -> 0x0020
	 */
	struct FSBOrnamentData
	{
	public:
		int32_t                                                    ColorIndex;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTermLimited;                                           // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DYHL[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTokenOverLimit
	 * Size -> 0x0008
	 */
	struct FSBTokenOverLimit
	{
	public:
		int32_t                                                    TokenID;                                                 // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OverLimit;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.OwnItemInfo
	 * Size -> 0x0150
	 */
	struct FOwnItemInfo
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemIndex;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmountBonus;                                             // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddedAmount;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0024(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2TYO[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     DefaultOrder;                                            // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBWeaponItemData                                   WeaponData;                                              // 0x0030(0x0078) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FCostumeData                                        CostumeData;                                             // 0x00A8(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharacterImagineData                             ImagineData;                                             // 0x00C8(0x0028) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharacterMountImagineData                        MountImagineData;                                        // 0x00F0(0x0028) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBOrnamentData                                     OrnamentData;                                            // 0x0118(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSBTokenOverLimit>                           TokenData;                                               // 0x0138(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bItemLock;                                               // 0x0148(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsIdentified;                                           // 0x0149(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_576T[0x1];                                   // 0x014A(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bUsed;                                                   // 0x014B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBilling;                                                // 0x014C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x014D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBppIrredeemable;                                      // 0x014E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8AI[0x1];                                   // 0x014F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBOwnEmoteData
	 * Size -> 0x0028
	 */
	struct FSBOwnEmoteData
	{
	public:
		class FString                                              EmoteId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PJG7[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    Timestamp;                                               // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FavoriteId;                                              // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMailStampData
	 * Size -> 0x0008
	 */
	struct FSBMailStampData
	{
	public:
		int32_t                                                    StampId;                                                 // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNew;                                                   // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ALFQ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMailStampCategories
	 * Size -> 0x0018
	 */
	struct FSBMailStampCategories
	{
	public:
		int32_t                                                    CategoryId;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsComplete;                                              // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UW04[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBMailStampData>                            Stamps;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBExtraExpParse
	 * Size -> 0x0018
	 */
	struct FSBExtraExpParse
	{
	public:
		int32_t                                                    Before;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Added;                                                   // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    After;                                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharacterToken                                   Token;                                                   // 0x000C(0x000C) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMailRewardData
	 * Size -> 0x0180
	 */
	struct FSBMailRewardData
	{
	public:
		TArray<struct FOwnItemInfo>                                OwnItems;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                SoldItems;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnEmoteData>                             EmoteData;                                               // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterCraftRecepi>                       ImagineRecepis;                                          // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<bool>                                               ImagineRecepiNews;                                       // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMailStampCategories>                      Stamps;                                                  // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMailStampCategories>                      StampCategories;                                         // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<bool>                                               CraftRecepiNews;                                         // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterCraftRecepi>                       CraftRecepis;                                            // 0x0080(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            RecipeSet;                                               // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Achievements;                                            // 0x00A0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBLiquidMemoryInfo>                         LiquidMemory;                                            // 0x00B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterToken>                           Tokens;                                                  // 0x00C0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AdventureBoards;                                         // 0x00D0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WarehouseAbilities;                                      // 0x00E0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Money;                                                   // 0x00F0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SoldProfit;                                              // 0x00F4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x00F8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Coins;                                                   // 0x00FC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBExtraExpParse                                    ClassExtraExp;                                           // 0x0100(0x0018) NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    FreeCurrencies;                                          // 0x0118(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedMoney;                                           // 0x011C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedExp;                                             // 0x0120(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedCoins;                                           // 0x0124(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedCurrencies;                                      // 0x0128(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedGc;                                              // 0x012C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeasonRankPoint;                                         // 0x0130(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextSeasonRankPoint;                                     // 0x0134(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextSeasonDiscountValue;                                 // 0x0138(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ESUA[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            VanishedAchievements;                                    // 0x0140(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterToken>                           VanishedTokens;                                          // 0x0150(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Awards;                                                  // 0x0160(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDecorationData>                             AdventurerCardDecorations;                               // 0x0170(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNotificationShortCutData
	 * Size -> 0x0028
	 */
	struct FSBNotificationShortCutData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RB3C[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StartTagName;                                            // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Pos;                                                     // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VIVC[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNotificationMenuData
	 * Size -> 0x0080
	 */
	struct FSBNotificationMenuData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2K4N[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LinkURL;                                                 // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagePath;                                               // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDisplay;                                              // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SGY0[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ShortCutType;                                            // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBNotificationShortCutData                         ShortCutData;                                            // 0x0030(0x0028) BlueprintVisible, NativeAccessSpecifierPublic
		struct FDateTime                                           StartTime;                                               // 0x0058(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndTime;                                                 // 0x0060(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           DisplayStartTime;                                        // 0x0068(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           DisplayEndTime;                                          // 0x0070(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0078(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAlreadyDisplay;                                       // 0x007C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_98OE[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGameTime
	 * Size -> 0x000C
	 */
	struct FSBGameTime
	{
	public:
		unsigned char                                              UnknownData_8N3F[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Hour;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Minute;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTimeNotifyEvent
	 * Size -> 0x0088
	 */
	struct FSBTimeNotifyEvent
	{
	public:
		bool                                                       bIsNotify;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRRY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBGameTime                                         BeginTime;                                               // 0x0004(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FSBGameTime                                         EndTime;                                                 // 0x0010(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K17O[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBTimeNotify*                                       TimeNotify;                                              // 0x0020(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTimeNotifyState*                                  TimeNotifyState;                                         // 0x0028(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanUseRandomTimeSetting;                                // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanUseNotifyStateRandomTimeSetting;                     // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I463[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBGameTime                                         RandomDelayOfBeginTime;                                  // 0x0034(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDelayEndTimeAsBeginTime;                                // 0x0040(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I3A2[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBGameTime                                         RandomDelayOfEndTime;                                    // 0x0044(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bChangeDelayValueEveryday;                               // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W2G7[0x37];                                  // 0x0051(0x0037) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcLaneSpawnSettings
	 * Size -> 0x0008
	 */
	struct FSBNpcLaneSpawnSettings
	{
	public:
		struct FSBNpcAppearanceType                                Appearance;                                              // 0x0000(0x0003) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AAZH[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcLanePoint
	 * Size -> 0x0020
	 */
	struct FSBNpcLanePoint
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rotation;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Width;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBothWays;                                               // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R8PN[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASBNpcLaneBase*                                      OwningLane;                                              // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcLaneNode
	 * Size -> 0x0038
	 */
	struct FSBNpcLaneNode
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1YMS[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Neighbors;                                               // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<int32_t>                                            NeighborsTo;                                             // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2FS[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcLaneLink
	 * Size -> 0x0050
	 */
	struct FSBNpcLaneLink
	{
	public:
		class ASBNpcLaneBase*                                      Lane;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FromNodeIndex;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ToNodeIndex;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SideVector;                                              // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasCurveStartPoint;                                      // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9SPT[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CurveStartPoint;                                         // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasCurveEndPoint;                                        // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_219L[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CurveEndPoint;                                           // 0x003C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLeftToRight;                                            // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8K3N[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.NpcNavPathData
	 * Size -> 0x0018
	 */
	struct FNpcNavPathData
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SnapRadius;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SnapHeight;                                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSnapHeight : 1;                                      // 0x0014(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMZZ[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PathConfig
	 * Size -> 0x000C
	 */
	struct FPathConfig
	{
	public:
		EPathDirection                                             PathDirection;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPathTarget                                                PathTarget;                                              // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4KGN[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Width;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LinkBeginEnd : 1;                                        // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JM9Z[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcSpawnAreaSettings
	 * Size -> 0x0008
	 */
	struct FSBNpcSpawnAreaSettings
	{
	public:
		struct FSBNpcAppearanceType                                Appearance;                                              // 0x0000(0x0003) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O433[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcDisableOutRangeInfo
	 * Size -> 0x0008
	 */
	struct FSBNpcDisableOutRangeInfo
	{
	public:
		bool                                                       bDisableOutRange;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5K9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LODMaxDistance;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPreJoinSessionFirstData
	 * Size -> 0x0030
	 */
	struct FSBPreJoinSessionFirstData
	{
	public:
		unsigned char                                              UnknownData_WIYQ[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPreJoinSessionDummyClientData
	 * Size -> 0x00B0
	 */
	struct FSBPreJoinSessionDummyClientData
	{
	public:
		unsigned char                                              UnknownData_RILZ[0xB0];                                  // 0x0000(0x00B0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerRoomPutData
	 * Size -> 0x0058
	 */
	struct FSBPlayerRoomPutData
	{
	public:
		int32_t                                                    RoomId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoomPutId;                                               // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PutLocationId;                                           // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UniqueItemId;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Position;                                                // 0x0028(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Rotation;                                                // 0x0034(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorId;                                                 // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentColorData
	 * Size -> 0x0060
	 */
	struct FSBOrnamentColorData
	{
	public:
		unsigned char                                              UnknownData_O5QJ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       IsValid;                                                 // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DFIQ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BaseColor1;                                              // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BaseColor2;                                              // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BaseColor3;                                              // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BaseColor4;                                              // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentEmissiveData
	 * Size -> 0x0020 (FullSize[0x0080] - InheritedSize[0x0060])
	 */
	struct FSBOrnamentEmissiveData : public FSBOrnamentColorData
	{
	public:
		struct FLinearColor                                        EmissiveColor1;                                          // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        EmissiveColor2;                                          // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentEffectPlayData
	 * Size -> 0x00C0
	 */
	struct FSBOrnamentEffectPlayData
	{
	public:
		unsigned char                                              UnknownData_CFL2[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EOrnamentEffectType                                        EffectType;                                              // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2H3E[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EmitterTemplate[0x28];                                   // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bOneShot;                                                // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NAQA[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinIntervalTime;                                         // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttached;                                               // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L1IP[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachName;                                              // 0x004C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HOO[0xC];                                   // 0x0054(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          OffsetTransform;                                         // 0x0060(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bCastShadow;                                             // 0x0090(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CEVZ[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              AkAudioEvent[0x28];                                      // 0x0098(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentCreateData
	 * Size -> 0x0118 (FullSize[0x0120] - InheritedSize[0x0008])
	 */
	struct FSBOrnamentCreateData : public FTableRowBase
	{
	public:
		int32_t                                                    DefaultMeshID;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A3NT[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              MeshList[0x10];                                          // 0x0010(0x0010) UNKNOWN PROPERTY: ArrayProperty
		struct FTransform                                          OffsetTransform;                                         // 0x0020(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              ColorListAsset[0x28];                                    // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FSBOrnamentColorData>                        ColorDataList;                                           // 0x0078(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              MaterialSetList[0x10];                                   // 0x0088(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              MaterialColorList[0x10];                                 // 0x0098(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              AnimClass[0x28];                                         // 0x00A8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              AnimWait[0x28];                                          // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FSBOrnamentEffectPlayData>                   EffectPlayList;                                          // 0x00F8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              PlayerEmote;                                             // 0x0108(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NFH1[0x8];                                   // 0x0118(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentEffectManageData
	 * Size -> 0x00E0
	 */
	struct FSBOrnamentEffectManageData
	{
	public:
		unsigned char                                              UnknownData_12Q2[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x0018(0x00C8) Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentManagePlayerInfo
	 * Size -> 0x0001
	 */
	struct FSBOrnamentManagePlayerInfo
	{
	public:
		ESBOrnamentPlayerState                                     PlayerState;                                             // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.OtherMessageRenderTarget
	 * Size -> 0x0010
	 */
	struct FOtherMessageRenderTarget
	{
	public:
		class UTextureRenderTarget2D*                              RenderTarget;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4M4D[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBActiveOutGameBuffDataList
	 * Size -> 0x0030
	 */
	struct FSBActiveOutGameBuffDataList
	{
	public:
		EOutGameBuffType                                           BuffType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UGCB[0x17];                                  // 0x0001(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USBActiveOutGameBuffData*>                    BuffDataList;                                            // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22ID[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SSBActiveOutGameBuffData
	 * Size -> 0x0028
	 */
	struct FSSBActiveOutGameBuffData
	{
	public:
		EOutGameBuffType                                           BuffType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6XME[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BuffValue;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOutGameBuffSourceType                                     SourceType;                                              // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LGL4[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SourceId;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SourceUniqueId;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           LimitTime;                                               // 0x0020(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChangeLandingSecond
	 * Size -> 0x0010
	 */
	struct FSBChangeLandingSecond
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Second;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSecond;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSecond;                                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileBoundParameter
	 * Size -> 0x0010
	 */
	struct FSBProjectileBoundParameter
	{
	public:
		bool                                                       bShouldBounce : 1;                                       // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBounceAngleAffectsFriction : 1;                         // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DB9X[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Bounciness;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Friction;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceVelocityStopSimulatingThreshold;                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBParabolaMoveParameter
	 * Size -> 0x0034
	 */
	struct FSBParabolaMoveParameter
	{
	public:
		ESBParabolaMoveType                                        MoveType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N7IO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShotDegree;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReachHeight;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReachTime;                                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableChangeLandingSecond : 1;                        // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R196[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBChangeLandingSecond                              ChangeLandingSecond;                                     // 0x0014(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSBProjectileBoundParameter                         BoundParameter;                                          // 0x0024(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAilmentIconConfig
	 * Size -> 0x0014
	 */
	struct FSBStatusAilmentIconConfig
	{
	public:
		ESBStatusAilmentIconType                                   StatusAilmentIcon;                                       // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStatusAilmentIconCombineCategory                        StatusAilmentIconCombineCategory;                        // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DOI5[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RemainTime;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRemainTime;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UniqueHandle;                                            // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsImmune;                                               // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRegist;                                               // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AGKN[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGameModeInfo
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBGameModeInfo : public FTableRowBase
	{
	public:
		class FName                                                UiType;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayGameMode                                            PlayGameMode;                                            // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDungeon;                                                // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPvpMode;                                                // 0x0012(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInstanceArea;                                           // 0x0013(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTimeProgression;                                        // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFieldBagAccessible;                                     // 0x0015(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBInventoryAccessType                                     InventoryAccessType;                                     // 0x0016(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTalkModeFull;                                           // 0x0017(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMovableAfterResult;                                     // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonMatchMenuRegisterType                            MatchMenuRegisterType;                                   // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBContentExitTravelTarget                                 DefaultExitTravel;                                       // 0x001A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UW0L[0x1];                                   // 0x001B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                DeathPenaltyStatusAilmentName;                           // 0x001C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeathPenaltyStatusAilmentTime;                           // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBackfillAllowed;                                       // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsJoinMiddle;                                            // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBGameModeStartMode                                       StartMode;                                               // 0x002A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTreasureBoxDrawItem;                                  // 0x002B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RUDY[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerAttackHitLaunchProjectile
	 * Size -> 0x0018
	 */
	struct FSBPlayerAttackHitLaunchProjectile
	{
	public:
		struct FSBAttackID                                         AttackID;                                                // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RT0E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerComboGaugeHitSettings
	 * Size -> 0x0020
	 */
	struct FSBBerserkerComboGaugeHitSettings
	{
	public:
		struct FSBAttackID                                         AttackID;                                                // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5KOP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      GaugeAmount;                                             // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FXRR[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerSkillComboEffectSettings
	 * Size -> 0x0028
	 */
	struct FSBBerserkerSkillComboEffectSettings
	{
	public:
		int32_t                                                    ComboCount;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XUL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBEffectAsset>                              ComboCountUpEffectList;                                  // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBEffectAsset>                              ComboKeepEffectList;                                     // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerComboSettings
	 * Size -> 0x0060
	 */
	struct FSBBerserkerComboSettings
	{
	public:
		float                                                      GaugeAmountMax;                                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GaugeAmountByHit;                                        // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GaugeAmountResetTime;                                    // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4R0T[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckFloatParam>                 ComboGaugeModifySettingList;                             // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBBerserkerComboGaugeHitSettings>           ComboGaugeHitSettingsList;                               // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DamageUpScaleCurve;                                      // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckFloatParam>                 ComboGaugeMaxBonusModifySettingList;                     // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UCurveFloat*                                         SkillComboAddGauge;                                      // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBBerserkerSkillComboEffectSettings>        SkillComboEffectSettingList;                             // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerComboGaugeCastSetting
	 * Size -> 0x0018
	 */
	struct FSBBerserkerComboGaugeCastSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditinoList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    ChangeRate;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2RST[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerConsumeComboAttackSetting
	 * Size -> 0x0018
	 */
	struct FSBBerserkerConsumeComboAttackSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      UseComboGaugeAmount;                                     // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageModifyRate;                                        // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerBloodAxeTotalDrainSetting
	 * Size -> 0x000C
	 */
	struct FSBBerserkerBloodAxeTotalDrainSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalDrain;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtendTime;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerBerserkModeComboGaugeModifyDamageUpSetting
	 * Size -> 0x0028
	 */
	struct FSBBerserkerBerserkModeComboGaugeModifyDamageUpSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       ConsumeComboGaugeAllAndModeEnd;                          // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R692[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         DamageUpScaleCurve;                                      // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConsumeComboGaugeRate;                                   // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageUpRate;                                            // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerPartyChainDrainSetting
	 * Size -> 0x0028
	 */
	struct FSBBerserkerPartyChainDrainSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    PartyChainNum;                                           // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWAV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusAlimentHandle;                                     // 0x0018(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBerserkerInTheZonePassiveSkillSetting
	 * Size -> 0x000C
	 */
	struct FSBBerserkerInTheZonePassiveSkillSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AddComboGaugeAmountRate;                                 // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AddMaxGaugeAmount;                                       // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterHitDistanceDamageModifySetting
	 * Size -> 0x0038
	 */
	struct FSBBlasterHitDistanceDamageModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      DamageModifyRate;                                        // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MX7Y[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAttackID>                                 AttackIDList;                                            // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      MinDistance;                                             // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIncreaseDamageAtClose;                                  // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6ZA[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponAnimationPlayParam
	 * Size -> 0x0010
	 */
	struct FSBWeaponAnimationPlayParam
	{
	public:
		class FName                                                AnimationName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLooping;                                                // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DVP2[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayRate;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectShaderParameter
	 * Size -> 0x0038
	 */
	struct FSBEffectShaderParameter
	{
	public:
		unsigned char                                              UnknownData_SHF1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBEffectShaderParamTarget                                 Target;                                                  // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BUXH[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ScalarParameterName;                                     // 0x000C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScalarValue;                                             // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                VectorParameterName;                                     // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        VectorValue;                                             // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ApplyImmediately;                                        // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TO9V[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponAnimationTagPlayParam
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSBWeaponAnimationTagPlayParam : public FSBWeaponAnimationPlayParam
	{
	public:
		class FName                                                AnimTag;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAnimTagEffectSetting
	 * Size -> 0x01B8
	 */
	struct FSBAnimTagEffectSetting
	{
	public:
		unsigned char                                              UnknownData_279N[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AnimTag;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      Effect;                                                  // 0x0010(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterHoldingArrowEffectSetting
	 * Size -> 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
	 */
	struct FSBBlasterHoldingArrowEffectSetting : public FSBAnimTagEffectSetting
	{	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSkillChargeLevelSetting
	 * Size -> 0x01B8 (FullSize[0x0208] - InheritedSize[0x0050])
	 */
	struct FSBBlasterSkillChargeLevelSetting : public FSBPlayerSkillChargeLevelSetting
	{
	public:
		struct FSBBlasterHoldingArrowEffectSetting                 HoldArrowSetting;                                        // 0x0050(0x01B8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSkillChargeSetting
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FSBBlasterSkillChargeSetting : public FSBPlayerSkillChargeSettingBase
	{
	public:
		TArray<struct FSBBlasterSkillChargeLevelSetting>           LevelSettingList;                                        // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterWeakPointHitDamageUpSetting
	 * Size -> 0x0018
	 */
	struct FSBBlasterWeakPointHitDamageUpSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      DamageUpRate;                                            // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JP2D[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCurveMoveSetting
	 * Size -> 0x0058
	 */
	struct FSBCurveMoveSetting
	{
	public:
		class FName                                                CurveMoveName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CurveData[0x28];                                         // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<class FName>                                        NeedTags;                                                // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        ForbidTags;                                              // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bMoveBackward : 1;                                       // 0x0050(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGoAroundLockonTarget : 1;                               // 0x0050(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyXY : 1;                                            // 0x0050(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyZ : 1;                                             // 0x0050(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UQTD[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterGaugeAmountAddSetting
	 * Size -> 0x0018
	 */
	struct FSBBlasterGaugeAmountAddSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AddValue;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CIID[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterGaugeAmountWeakPointHitMultiplierSetting
	 * Size -> 0x0018
	 */
	struct FSBBlasterGaugeAmountWeakPointHitMultiplierSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      MultiplierValue;                                         // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W6UB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRegularBuffArrowLevelSetting
	 * Size -> 0x01F8
	 */
	struct FSBRegularBuffArrowLevelSetting
	{
	public:
		unsigned char                                              UnknownData_51V1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NeedAmount;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UG74[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBBlasterHoldingArrowEffectSetting                 HoldArrowSetting;                                        // 0x0010(0x01B8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBEffectAsset>                              ChargeEffectList;                                        // 0x01C8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         ProjectileHandleList;                                    // 0x01D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBChargeProjectileChangeCondition>          ProjectileChangeConditionList;                           // 0x01E8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterElementSpreadProjectileSetting
	 * Size -> 0x0020
	 */
	struct FSBBlasterElementSpreadProjectileSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ElementSpreadProjectileHandle;                           // 0x0010(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterElementSpreadAccumulationSetting
	 * Size -> 0x0018
	 */
	struct FSBBlasterElementSpreadAccumulationSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AccumulationRate;                                        // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccumulationMax;                                         // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterBattleStatusSpreadSetting
	 * Size -> 0x0028
	 */
	struct FSBBlasterBattleStatusSpreadSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBBattleEffective                                         Effective;                                               // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleEffectiveGroup                                    EffectiveGroup;                                          // 0x0011(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LH75[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0018(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterHatTrickSetting
	 * Size -> 0x0030
	 */
	struct FSBBlasterHatTrickSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ComboShotProjectileHandle;                               // 0x0010(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 LaunchMultiHitProjectileHandle;                          // 0x0020(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterHatTrickWeakPointHitDamageModifySetting
	 * Size -> 0x0018
	 */
	struct FSBBlasterHatTrickWeakPointHitDamageModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      DamageModifyRate;                                        // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNotWeakPointHit;                                        // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHT3[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_PassiveSkillData
	 * Size -> 0x0010
	 */
	struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_PassiveSkillData
	{
	public:
		TArray<int32_t>                                            PassiveSkillList;                                        // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_Projectile
	 * Size -> 0x0058
	 */
	struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_Projectile
	{
	public:
		TMap<int32_t, struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_PassiveSkillData> SkillIDMap;                                              // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AddGaugeAmount;                                          // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxHitCount;                                             // 0x0054(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_CastSkill
	 * Size -> 0x0058
	 */
	struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_CastSkill
	{
	public:
		TMap<int32_t, struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_PassiveSkillData> SkillIDMap;                                              // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AddGaugeAmount;                                          // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NPGT[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge
	 * Size -> 0x00B0
	 */
	struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge
	{
	public:
		struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_Projectile ProjectileSetting;                                       // 0x0000(0x0058) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBBlasterSatisfyPassiveSkillSetting_RegularBuffGauge_CastSkill CastSkillSetting;                                        // 0x0058(0x0058) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSatisfyPassiveSkillLevelSetting_AddHeal
	 * Size -> 0x0010
	 */
	struct FSBBlasterSatisfyPassiveSkillLevelSetting_AddHeal
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetHitPointPercent;                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AddPercent;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanHealCritical;                                         // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWEU[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSatisfyPassiveSkillSetting_AddHeal
	 * Size -> 0x0020
	 */
	struct FSBBlasterSatisfyPassiveSkillSetting_AddHeal
	{
	public:
		TArray<int32_t>                                            SkillIDList;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBBlasterSatisfyPassiveSkillLevelSetting_AddHeal> SkillLevelSettingList;                                   // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLancerPrepareStyleMarkCountSetting
	 * Size -> 0x0038
	 */
	struct FSBLancerPrepareStyleMarkCountSetting
	{
	public:
		struct FSBStatusAilmentHandle                              MarkCountStatusAilment;                                  // 0x0000(0x0020) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      AttackUpRate;                                            // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0AI6[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckFloatParam>                 ConditionAddList;                                        // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLancerResonanceSpearLancerMarkSpreadSetting
	 * Size -> 0x01B8
	 */
	struct FSBLancerResonanceSpearLancerMarkSpreadSetting
	{
	public:
		struct FDataTableRowHandle                                 LancerMarkRowHandle;                                     // 0x0000(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      SpreadEffect;                                            // 0x0010(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLancerResonanceSpearMaxNumSpreadCharacterSetting
	 * Size -> 0x0018
	 */
	struct FSBLancerResonanceSpearMaxNumSpreadCharacterSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumSpreadCharacter;                                   // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WGCK[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLancerErasedLancerMarkDesirePassiveSkillSetting
	 * Size -> 0x0018
	 */
	struct FSBLancerErasedLancerMarkDesirePassiveSkillSetting
	{
	public:
		int32_t                                                    ErasedLancerMarkCount;                                   // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M5ED[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusAilmentHandle;                                     // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLancerDesirePassiveSkillSetting
	 * Size -> 0x0018
	 */
	struct FSBLancerDesirePassiveSkillSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Interval;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLancerErasedLancerMarkDesirePassiveSkillSetting> ErasedLancerMarkSettingList;                             // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMagicianMagicStackBattleStatusSetting
	 * Size -> 0x0018
	 */
	struct FSBMagicianMagicStackBattleStatusSetting
	{
	public:
		int32_t                                                    MagicStack;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X4YK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 BattleStatusHandle;                                      // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMagicianShotProjectileOffsetSetting
	 * Size -> 0x0010
	 */
	struct FSBMagicianShotProjectileOffsetSetting
	{
	public:
		struct FVector                                             LocationOffset;                                          // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayTime;                                               // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMagicianShotProjectileSetting
	 * Size -> 0x0020
	 */
	struct FSBMagicianShotProjectileSetting
	{
	public:
		struct FDataTableRowHandle                                 ProjectileHandle;                                        // 0x0000(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSBMagicianShotProjectileOffsetSetting>      OffsetSettingList;                                       // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMagicianShotProjectileLevelSetting
	 * Size -> 0x00A8
	 */
	struct FSBMagicianShotProjectileLevelSetting
	{
	public:
		struct FSBMagicianShotProjectileSetting                    ProjectileSetting;                                       // 0x0000(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMagicianShotProjectileSetting                    AlternativeProjectileSetting;                            // 0x0020(0x0020) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBConditionCheckParam                              ChangeCondition;                                         // 0x0040(0x0068) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckRowHandleParam
	 * Size -> 0x0020
	 */
	struct FSBConditionCheckRowHandleParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0010(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElementAmpOptionLocationSetting
	 * Size -> 0x01B8
	 */
	struct FSBElementAmpOptionLocationSetting
	{
	public:
		struct FVector                                             LocationOffset;                                          // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBNE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEffectAsset                                      IdlingEffect;                                            // 0x0010(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElementAmpOptionElementSetting
	 * Size -> 0x01C0
	 */
	struct FSBElementAmpOptionElementSetting
	{
	public:
		ESBAttribute                                               ElementType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4SFS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEffectAsset                                      InActionEffect;                                          // 0x0008(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ProjectileHandle;                                        // 0x01B0(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MagicianModifyMaxHPMP
	 * Size -> 0x000C
	 */
	struct FMagicianModifyMaxHPMP
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModifyPercentMaxHP;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModifyAddMaxMP;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMagicianInspirationSkillLevelSetting
	 * Size -> 0x000C
	 */
	struct FSBMagicianInspirationSkillLevelSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntervalTime;                                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRecovery;                                         // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerVoltageGaugeSettings
	 * Size -> 0x000C
	 */
	struct FSBPerformerVoltageGaugeSettings
	{
	public:
		float                                                      VoltageGaugeAmountMax;                                   // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VoltageGaugeAmountResetTime;                             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VoltageGaugeFeverTimeDecreaseAmount;                     // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerVoltageGaugeAddModifySetting
	 * Size -> 0x0018
	 */
	struct FSBPerformerVoltageGaugeAddModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ModifyRate;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QUNY[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerVoltageGaugeFeverTimeDecreaseAmountModifySetting
	 * Size -> 0x0018
	 */
	struct FSBPerformerVoltageGaugeFeverTimeDecreaseAmountModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ModifyRate;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRTC[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerVoltageGaugeAddSetting
	 * Size -> 0x0018
	 */
	struct FSBPerformerVoltageGaugeAddSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AddAmount;                                               // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAddDuringFeverTime;                                    // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NIH4[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerCastVoltageGaugeAddSetting
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FSBPerformerCastVoltageGaugeAddSetting : public FSBPerformerVoltageGaugeAddSetting
	{	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerAmpExplodeVoltageGaugeAddSetting
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FSBPerformerAmpExplodeVoltageGaugeAddSetting : public FSBPerformerVoltageGaugeAddSetting
	{
	public:
		TArray<struct FDataTableRowHandle>                         AmpExplodeProjectileHandleList;                          // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerAttackHitVoltageGaugeAddSetting
	 * Size -> 0x0018 (FullSize[0x0030] - InheritedSize[0x0018])
	 */
	struct FSBPerformerAttackHitVoltageGaugeAddSetting : public FSBPerformerVoltageGaugeAddSetting
	{
	public:
		TArray<struct FSBAttackID>                                 AttackIDList;                                            // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       IsIncludeSelfHit;                                        // 0x0028(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIncludeNonCharacterHit;                                // 0x0029(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAddEverySameHandleAttackHit;                           // 0x002A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KW4E[0x5];                                   // 0x002B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBConsumeStaminaAmountSetting
	 * Size -> 0x0018
	 */
	struct FSBConsumeStaminaAmountSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ConsumeStaminaAmount;                                    // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXSO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerMoveSpeedSetting
	 * Size -> 0x0018
	 */
	struct FSBPerformerMoveSpeedSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      MoveSpeedRate;                                           // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOBN[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerMarkerRangeOverrideSetting
	 * Size -> 0x0018
	 */
	struct FSBPerformerMarkerRangeOverrideSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      RangeMin;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangeMax;                                                // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformerGroovyPassiveSkillSetting
	 * Size -> 0x0010
	 */
	struct FSBPerformerGroovyPassiveSkillSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitCount;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReduceRecastTimeOfTSkill;                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReduceRecastTimeOfULT;                                   // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerGiveStatusAlimentPerkInterlockPassiveSkillSetting
	 * Size -> 0x0018
	 */
	struct FSBPlayerGiveStatusAlimentPerkInterlockPassiveSkillSetting
	{
	public:
		struct FDataTableRowHandle                                 StatusHandle;                                            // 0x0000(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDeactiveOnDynamicConditionDissatisfied;                 // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PID6[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGreatGuardCostSetting
	 * Size -> 0x0018
	 */
	struct FSBGreatGuardCostSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      BaseCost;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BattleEffectiveCostMultiplier;                           // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionLargeShieldAdjustTimeSetting
	 * Size -> 0x0018
	 */
	struct FSBRebellionLargeShieldAdjustTimeSetting
	{
	public:
		float                                                      AddTimeSec;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5SA3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionLargeShieldChargeLevelSetting
	 * Size -> 0x0380
	 */
	struct FSBRebellionLargeShieldChargeLevelSetting
	{
	public:
		unsigned char                                              UnknownData_FTFY[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NeedEnergy;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3AKY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEffectAsset                                      ShieldEffect;                                            // 0x0010(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      ShieldEffectEnd;                                         // 0x01B8(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         ProjectileHandleList;                                    // 0x0360(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBGuardEffectSetting>                       GuardEffectSettingList;                                  // 0x0370(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionLargeShieldGuardSucceededSelfStatusAilment
	 * Size -> 0x0020
	 */
	struct FSBRebellionLargeShieldGuardSucceededSelfStatusAilment
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         RowHandleList;                                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionShieldDashDamageUpStepConfig
	 * Size -> 0x01C8
	 */
	struct FSBRebellionShieldDashDamageUpStepConfig
	{
	public:
		unsigned char                                              UnknownData_CFS5[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      DamageUpRate;                                            // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0254[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEffectAsset                                      DamageUpEffect;                                          // 0x0020(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionShieldDashDamageUpConfig
	 * Size -> 0x0028
	 */
	struct FSBRebellionShieldDashDamageUpConfig
	{
	public:
		unsigned char                                              UnknownData_0HMN[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBRebellionShieldDashDamageUpStepConfig>    DamageUpStepSettingList;                                 // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionSpecialSkillHandle
	 * Size -> 0x0010
	 */
	struct FSBRebellionSpecialSkillHandle
	{
	public:
		TArray<struct FDataTableRowHandle>                         BurstHandle;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionHateCollectHitStatusAilmentConfig
	 * Size -> 0x0030
	 */
	struct FSBRebellionHateCollectHitStatusAilmentConfig
	{
	public:
		unsigned char                                              UnknownData_BCRU[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    HitCount;                                                // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMagnitudeRelation                                       HitCountRelation;                                        // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G1AD[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDataTableRowHandle>                         SelfStatusAilmentHandleList;                             // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionGlitterModeStatusAlimentModifySetting
	 * Size -> 0x0020
	 */
	struct FSBRebellionGlitterModeStatusAlimentModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 GlitterModeStatusModify;                                 // 0x0010(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckFloatCurveParam
	 * Size -> 0x0018
	 */
	struct FSBConditionCheckFloatCurveParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UCurveFloat*                                         FloatCurve;                                              // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionDependentPassiveSkillSetting
	 * Size -> 0x0018
	 */
	struct FSBRebellionDependentPassiveSkillSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RIK7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 ProjectileHandle;                                        // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRebellionAttractSkillProjectileHitConfig
	 * Size -> 0x000C
	 */
	struct FSBRebellionAttractSkillProjectileHitConfig
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitCount;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReduceRecastTime;                                        // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherReloadAmountSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherReloadAmountSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ReloadAddAmount;                                         // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y4HR[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherReloadSettingGroup
	 * Size -> 0x0020
	 */
	struct FSBSmasherReloadSettingGroup
	{
	public:
		TArray<struct FSBSmasherReloadAmountSetting>               NormalReloadSettingList;                                 // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBSmasherReloadAmountSetting>               QuickReloadSettingList;                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherModifyCartridgeAmountRequiredForCastSkillSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherModifyCartridgeAmountRequiredForCastSkillSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      RequiredAmount;                                          // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PETB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherBoostCartridgeAmountRequiredForCastSkillSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherBoostCartridgeAmountRequiredForCastSkillSetting
	{
	public:
		float                                                      RequiredAmount;                                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IEGN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBSmasherModifyCartridgeAmountRequiredForCastSkillSetting> ModifySettingList;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherSkillConsumeBoostCartridgeModifySetting
	 * Size -> 0x0020
	 */
	struct FSBSmasherSkillConsumeBoostCartridgeModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bAmountSetting;                                          // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRateSetting;                                            // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CNHI[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ConsumptionAmount;                                       // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConsumptionRate;                                         // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PFX0[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherSkillConsumeBoostCartridgeSetting
	 * Size -> 0x0020
	 */
	struct FSBSmasherSkillConsumeBoostCartridgeSetting
	{
	public:
		bool                                                       bAmountSetting;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRateSetting;                                            // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z15V[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ConsumptionAmount;                                       // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConsumptionRate;                                         // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQ26[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBSmasherSkillConsumeBoostCartridgeModifySetting> ModifySettingList;                                       // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherSubActionChargeShotApplyStatusAlimentSetting
	 * Size -> 0x0028
	 */
	struct FSBSmasherSubActionChargeShotApplyStatusAlimentSetting
	{
	public:
		int32_t                                                    ChargeLevel;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConsumeAmountCondition1;                                 // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMagnitudeRelation                                       ConsumeAmountCondition1Relation;                         // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSecondConsumeAmountConditionCheck;                   // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H2T2[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ConsumeAmountCondition2;                                 // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMagnitudeRelation                                       ConsumeAmountCondition2Relation;                         // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9GW8[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusAlimentHandle;                                     // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherSubActionChargeShotFinalHitSpawnProjectileSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherSubActionChargeShotFinalHitSpawnProjectileSetting
	{
	public:
		int32_t                                                    ChargeLevel;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ETOH[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 SpawnProjectileHandle;                                   // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherAttackLevelSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherAttackLevelSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackLevelLimit;                                        // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              NextAttackLevelSecondList;                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherMoveSpeedSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherMoveSpeedSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      MoveSpeedRate;                                           // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLOT[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherDamageUpRateModifyConditionSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherDamageUpRateModifyConditionSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    DamageUpRate;                                            // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7TA4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSmasherBoostCartridgeDecreaseConsumptionSetting
	 * Size -> 0x0018
	 */
	struct FSBSmasherBoostCartridgeDecreaseConsumptionSetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      DecreaseConsumption;                                     // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JHIQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBQuickShotChargeSendStatusAilmentSetting
	 * Size -> 0x0038
	 */
	struct FSBQuickShotChargeSendStatusAilmentSetting
	{
	public:
		int32_t                                                    ChargeLevel;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TLWR[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusAilmentHandle;                                     // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckParam>                      ChangeStatusAilmentConditionList;                        // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ChangedStatusAilmentHandle;                              // 0x0028(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveBallShootReduceConsumeSetting
	 * Size -> 0x0010
	 */
	struct FSBPassiveBallShootReduceConsumeSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActivateRate;                                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReduceAmount;                                            // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyAllBallShootTypeSkill;                             // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1INE[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveSuperArmorReceiveDamageDownSetting
	 * Size -> 0x0008
	 */
	struct FSBPassiveSuperArmorReceiveDamageDownSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReceiveDamageDownRate;                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SmasherModifyMaxHPBoostCartridge
	 * Size -> 0x000C
	 */
	struct FSmasherModifyMaxHPBoostCartridge
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModifyPercentMaxHP;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModifyAddMaxBoostCartridge;                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SmasherStatusAlimentSkillSetting
	 * Size -> 0x0018
	 */
	struct FSmasherStatusAlimentSkillSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F807[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusAliment;                                           // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SmasherShockWaveProjectileHandleSetting
	 * Size -> 0x0018
	 */
	struct FSmasherShockWaveProjectileHandleSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NLKN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 ShockWaveProjectileHandle;                               // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SmasherRevolutionPassiveSkillSetting
	 * Size -> 0x0058
	 */
	struct FSmasherRevolutionPassiveSkillSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADCD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ESkillActionPosition, float>                          ReduceRecastTimeMap;                                     // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAchievementDataInfo
	 * Size -> 0x0018
	 */
	struct FSBCharacterAchievementDataInfo
	{
	public:
		int32_t                                                    AchievementId;                                           // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0PNV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           Date;                                                    // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Progress;                                                // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRecievedReward;                                        // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NA8J[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAchievementSelectCategory
	 * Size -> 0x000C
	 */
	struct FSBAchievementSelectCategory
	{
	public:
		int32_t                                                    LargeCategory;                                           // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MidiumCategory;                                          // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSelect;                                                // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LAF2[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBActivityDataParam
	 * Size -> 0x0020
	 */
	struct FSBActivityDataParam
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBActivityData
	 * Size -> 0x0020
	 */
	struct FSBActivityData
	{
	public:
		ESBActivityType                                            Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_28H9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           AchieveTime;                                             // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBActivityDataParam>                        Params;                                                  // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardPanelParam
	 * Size -> 0x000C
	 */
	struct FSBAdventureBoardPanelParam
	{
	public:
		int32_t                                                    PanelId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProgressCnt;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdventureBoardPanelStatus                               Status;                                                  // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHudDraw;                                               // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNewOpen;                                               // 0x000A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JYCE[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardParam
	 * Size -> 0x0018
	 */
	struct FSBAdventureBoardParam
	{
	public:
		int32_t                                                    BoardId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdventureBoardStatus                                    Status;                                                  // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActive;                                                // 0x0005(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFavorite;                                              // 0x0006(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHudDraw;                                               // 0x0007(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBAdventureBoardPanelParam>                 PanelParamList;                                          // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassQuestInfo
	 * Size -> 0x0008
	 */
	struct FSBSeasonPassQuestInfo
	{
	public:
		int32_t                                                    DailyQuestReloadCount;                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DailyQuestReloadCountMax;                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassQuestConditionData
	 * Size -> 0x0048
	 */
	struct FSBSeasonPassQuestConditionData
	{
	public:
		ESBMissionQuestType                                        Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestItemType                                    ItemType;                                                // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADS0[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemIdString;                                            // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestPlaceType                                   PlaceType;                                               // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8B5L[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapId;                                                   // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CondtionId;                                              // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXNL[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassQuestItemData
	 * Size -> 0x00D0
	 */
	struct FSBSeasonPassQuestItemData
	{
	public:
		class FString                                              QuestID;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GroupId;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventId;                                                 // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSeasonPassQuestType                                     Type;                                                    // 0x0024(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ACB[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBSeasonPassQuestConditionData                     ConditionData;                                           // 0x0028(0x0048) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0074(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    QuestNameId;                                             // 0x0078(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Progress;                                                // 0x007C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAchieve;                                               // 0x0080(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRewarded;                                              // 0x0081(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UR0F[0x2];                                   // 0x0082(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RankPoint;                                               // 0x0084(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ForceAchievementPriceType;                               // 0x0088(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ForceAchievementPriceCount;                              // 0x008C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartDate;                                               // 0x0090(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           Period;                                                  // 0x0098(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x00A0(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UsePeriod;                                               // 0x00B0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PH21[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        RewardIdList;                                            // 0x00B8(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       ProgressAchievemented;                                   // 0x00C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HRPS[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassQuestListData
	 * Size -> 0x0018
	 */
	struct FSBSeasonPassQuestListData
	{
	public:
		ESBSeasonPassQuestCycleType                                Cycle;                                                   // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EY5U[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBSeasonPassQuestItemData>                  ItemList;                                                // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassQuestListManager
	 * Size -> 0x0010
	 */
	struct FSBSeasonPassQuestListManager
	{
	public:
		TArray<struct FSBSeasonPassQuestListData>                  QuestDataList;                                           // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterStatus
	 * Size -> 0x0040
	 */
	struct FSBCharacterStatus
	{
	public:
		int32_t                                                    STR;                                                     // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VIT;                                                     // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DEX;                                                     // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    INT;                                                     // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MND;                                                     // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackPower;                                             // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefensePower;                                            // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoveryPower;                                           // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalRate;                                            // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalPower;                                           // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitPoint;                                                // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxHitPoint;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxStamina;                                              // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PassiveSkillCost;                                        // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImagineSkillCost;                                        // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.Vector_NetRoughDirection
	 * Size -> 0x0000 (FullSize[0x000C] - InheritedSize[0x000C])
	 */
	struct FVector_NetRoughDirection : public FVector
	{	};

	/**
	 * ScriptStruct SkyBlue.SBStaminaSettings
	 * Size -> 0x0010
	 */
	struct FSBStaminaSettings
	{
	public:
		float                                                      Dash;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Jump;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RenewStamina;                                            // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaDelay;                                            // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerActionInfo
	 * Size -> 0x0028
	 */
	struct FSBPlayerActionInfo
	{
	public:
		unsigned char                                              UnknownData_VQ6Y[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USBPlayerSkillController*>                    SkillControllerList;                                     // 0x0008(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
		class USBSkillInfoClass*                                   SkillInfoCache;                                          // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_X580[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerActiveSkillAction
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FSBPlayerActiveSkillAction : public FSBPlayerActionInfo
	{
	public:
		unsigned char                                              UnknownData_NT6H[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBSkillInfoClass*                                   SkillInfo;                                               // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerImagineSkillAction
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	struct FSBPlayerImagineSkillAction : public FSBPlayerActionInfo
	{
	public:
		unsigned char                                              UnknownData_QQTA[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillAction
	 * Size -> 0x0510
	 */
	struct FSBSkillAction
	{
	public:
		unsigned char                                              UnknownData_OFUH[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlayerActiveSkillAction                          MainActionInfo;                                          // 0x0050(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          SubActionInfo;                                           // 0x0088(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          AerialActionInfo;                                        // 0x00C0(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill1ActionInfo;                                        // 0x00F8(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill2ActionInfo;                                        // 0x0130(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill3ActionInfo;                                        // 0x0168(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill4ActionInfo;                                        // 0x01A0(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          SpecialActionInfo;                                       // 0x01D8(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          DodgeActionInfo;                                         // 0x0210(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerImagineSkillAction                         ImagineArts1ActionInfo;                                  // 0x0248(0x0040) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerImagineSkillAction                         ImagineArts2ActionInfo;                                  // 0x0288(0x0040) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerImagineSkillAction                         ImagineMountActionInfo;                                  // 0x02C8(0x0040) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          EnemyStepJumpActionInfo;                                 // 0x0308(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          UkemiActionInfo;                                         // 0x0340(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          SkillCancelStepActionInfo;                               // 0x0378(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          ContentAction1ActionInfo;                                // 0x03B0(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          ContentAction2ActionInfo;                                // 0x03E8(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill5ActionInfo;                                        // 0x0420(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill6ActionInfo;                                        // 0x0458(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill7ActionInfo;                                        // 0x0490(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		struct FSBPlayerActiveSkillAction                          Skill8ActionInfo;                                        // 0x04C8(0x0038) Transient, NativeAccessSpecifierPrivate, CPF_SkipSerialization
		unsigned char                                              UnknownData_SVBF[0x10];                                  // 0x0500(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillIDForReplicate
	 * Size -> 0x0070
	 */
	struct FSBPlayerSkillIDForReplicate
	{
	public:
		int32_t                                                    Skill1ID;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill2ID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill3ID;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill4ID;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill5ID;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill6ID;                                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill7ID;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill8ID;                                                // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagineArts1UniqueID;                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagineArts2UniqueID;                                    // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagineMountUniqueID;                                    // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ImagineArts1Name;                                        // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ImagineArts2Name;                                        // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ImagineMountName;                                        // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContentAction1ID;                                        // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContentAction2ID;                                        // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerAttackHitRecastSetting
	 * Size -> 0x0038
	 */
	struct FSBPlayerAttackHitRecastSetting
	{
	public:
		TArray<struct FSBAttackID>                                 AttackIDList;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBActiveArtsID>                             TargetSkillList;                                         // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      RecastChangeTime;                                        // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRecastChangeTimeUnitPercent;                            // 0x0034(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HWWE[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackSettings
	 * Size -> 0x000C
	 */
	struct FSBAttackSettings
	{
	public:
		float                                                      HomingDashTime;                                          // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingDashRange;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackRange;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerEquipWeaponParameterCache
	 * Size -> 0x0018
	 */
	struct FSBPlayerEquipWeaponParameterCache
	{
	public:
		unsigned char                                              UnknownData_JY6M[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBAttribute                                               ElementType;                                             // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBW6[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAimBodyBlendRateSetting
	 * Size -> 0x000C
	 */
	struct FSBAimBodyBlendRateSetting
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendRate;                                               // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerLoadCompleteParam
	 * Size -> 0x0001
	 */
	struct FSBPlayerLoadCompleteParam
	{
	public:
		ESBAppearEffectType                                        AppearEffectType;                                        // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerEquipPassiveImagine
	 * Size -> 0x0018
	 */
	struct FSBPlayerEquipPassiveImagine
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerPassiveImagineSlotType                            Slot;                                                    // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QB78[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerPassiveArtsReplication
	 * Size -> 0x0010
	 */
	struct FSBPlayerPassiveArtsReplication
	{
	public:
		TArray<int32_t>                                            PassiveArtsIDList;                                       // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerMiniMapInfo
	 * Size -> 0x000C
	 */
	struct FSBPlayerMiniMapInfo
	{
	public:
		class FName                                                MiniMapId;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RouteVisibility;                                         // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1S3[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerAttackInfoForEnemy
	 * Size -> 0x0018
	 */
	struct FSBPlayerAttackInfoForEnemy
	{
	public:
		float                                                      MinRange;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRange;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingRange;                                             // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftAngle;                                               // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightAngle;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMapParameterSync
	 * Size -> 0x0018
	 */
	struct FSBMapParameterSync
	{
	public:
		int32_t                                                    AttackPoint;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalRate;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalPower;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefensePower;                                            // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecuperativePower;                                       // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HP;                                                      // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerNamedEnemyParam
	 * Size -> 0x0028
	 */
	struct FSBPlayerNamedEnemyParam
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YPHD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ID;                                                      // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CY6F[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfileSummaryData
	 * Size -> 0x0118
	 */
	struct FPlayerProfileSummaryData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LocationName;                                            // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          TensionTag;                                              // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N9AI[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x003C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8QMQ[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlayerId;                                                // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ZoneId;                                                  // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Active;                                                  // 0x0070(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YEW8[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ContentId;                                               // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FYYA[0x10];                                  // 0x0088(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       Friend;                                                  // 0x0098(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DoneSend;                                                // 0x0099(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeSend;                                               // 0x009A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Blocked;                                                 // 0x009B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TZIX[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FaceIconUrl;                                             // 0x00A0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LeftDay;                                                 // 0x00B0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0SZP[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TimesLeft;                                               // 0x00B8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSendLike;                                               // 0x00C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RX1H[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OnlineStatus;                                            // 0x00CC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x00D0(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bPartyMember;                                            // 0x00F0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPartyLeader;                                            // 0x00F1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WFEM[0x6];                                   // 0x00F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastLogin;                                               // 0x00F8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FriendRegistratedDate;                                   // 0x0108(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       to_blocked;                                              // 0x0110(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PJRT[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SendableLikePlayer
	 * Size -> 0x0028
	 */
	struct FSendableLikePlayer
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UserId;                                                  // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSendable;                                              // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MDIX[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SendPhotoLike
	 * Size -> 0x0030
	 */
	struct FSendPhotoLike
	{
	public:
		class FString                                              ToUserId;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ToCharacterId;                                           // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PhotoModeImageId;                                        // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAilmentWhenRespawnIfAbilityFlagWhenDead
	 * Size -> 0x0018
	 */
	struct FSBStatusAilmentWhenRespawnIfAbilityFlagWhenDead
	{
	public:
		ESBAbilityFlags                                            AbilityFlagWhenDead;                                     // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M321[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 StatusAilmentHandle;                                     // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTravelOption
	 * Size -> 0x0098
	 */
	struct FSBTravelOption
	{
	public:
		class FString                                              SpawnPortalName;                                         // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PassageCost;                                             // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_96W3[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SessionId;                                               // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GameContentId;                                           // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameMode;                                                // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReturnToPreviousMap;                                    // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepLocation;                                           // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1R6D[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FriendId;                                                // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeaderId;                                                // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ExtraOption;                                             // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGMJumper;                                               // 0x0088(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPreJoinMode                                             JoinMode;                                                // 0x0089(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1GM[0x2];                                   // 0x008A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RetryMaxCnt;                                             // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HelpMatchingModeId;                                      // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YC1N[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonSupply
	 * Size -> 0x0008
	 */
	struct FSBDungeonSupply
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElQuestReward
	 * Size -> 0x0010
	 */
	struct FSBElQuestReward
	{
	public:
		TArray<class FName>                                        RewardIdList;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElQuestConditionData
	 * Size -> 0x0048
	 */
	struct FSBElQuestConditionData
	{
	public:
		ESBMissionQuestType                                        Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestItemType                                    ItemType;                                                // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PKKQ[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemIdString;                                            // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestPlaceType                                   PlaceType;                                               // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_66GF[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapId;                                                   // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CondtionId;                                              // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4B1U[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBElQuestItemData
	 * Size -> 0x0098
	 */
	struct FSBElQuestItemData
	{
	public:
		class FString                                              QuestID;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GroupId;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBElQuestConditionData                             ConditionData;                                           // 0x0020(0x0048) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0068(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    QuestNameId;                                             // 0x006C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Progress;                                                // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAchieve;                                               // 0x0074(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRewarded;                                              // 0x0075(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNFI[0x2];                                   // 0x0076(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ForceAchievementPriceType;                               // 0x0078(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ForceAchievementPriceCount;                              // 0x007C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        RewardIdList;                                            // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       ProgressAchievemented;                                   // 0x0090(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VZVV[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBElQuestManager
	 * Size -> 0x0040
	 */
	struct FSBElQuestManager
	{
	public:
		int32_t                                                    SeasonId;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EvaluationPoint;                                         // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           Period;                                                  // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBElQuestReward>                            RewardList;                                              // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBElQuestItemData>                          QuestItemList;                                           // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionSplitData
	 * Size -> 0x0018
	 */
	struct FSBFang_expeditionSplitData
	{
	public:
		TArray<struct FSBFang_expeditionAreaData>                  AreaData;                                                // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Number;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AG87[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFmHarvestItemInfo
	 * Size -> 0x000C
	 */
	struct FSBFmHarvestItemInfo
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBonus;                                                // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CBPN[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFmPresentItemInfo
	 * Size -> 0x0010
	 */
	struct FSBFmPresentItemInfo
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerId;                                                // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ReceivedTime;                                            // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFmFriendInfo
	 * Size -> 0x0028
	 */
	struct FSBFmFriendInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25Q2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RemainingPresentCount;                                   // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           LastLogin;                                               // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerEndGuardBreakStatusAilment
	 * Size -> 0x0020
	 */
	struct FSBPlayerEndGuardBreakStatusAilment
	{
	public:
		struct FDataTableRowHandle                                 StatusAilmentHandle;                                     // 0x0000(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GuildData
	 * Size -> 0x00B8
	 */
	struct FGuildData
	{
	public:
		class FString                                              GuildId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildShortId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildName;                                               // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildShortName;                                          // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEntry;                                                 // 0x0050(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KRPU[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LeaderName;                                              // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ESBGuildActivityTime>                               ActivityTime;                                            // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		EGuildAcceptType                                           AcceptType;                                              // 0x0078(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UC2M[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EGuildAttribute>                                    Attributes;                                              // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    MemberNow;                                               // 0x0090(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MemberMax;                                               // 0x0094(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Experience;                                              // 0x0098(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_63WG[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           CreatedAt;                                               // 0x00A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RenameTokenNum;                                          // 0x00A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    leader_ps_only;                                          // 0x00AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ps_only;                                                 // 0x00B0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WEKB[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.GuildEntryData
	 * Size -> 0x00E0
	 */
	struct FGuildEntryData
	{
	public:
		class FString                                              EntryId;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildId;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildName;                                               // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildTag;                                                // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UserId;                                                  // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterName;                                           // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x0070(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0074(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J6EY[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0078(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInvite;                                                // 0x0088(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JLZ2[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DaysLeft;                                                // 0x008C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TimesLeft;                                               // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlatformType                                            PlatformType;                                            // 0x00A0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ZE4[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlatformOnlineID;                                        // 0x00A8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x00B8(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       IsPSOnly_Target;                                         // 0x00D8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FZ06[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.GuildMemberData
	 * Size -> 0x00D8
	 */
	struct FGuildMemberData
	{
	public:
		class FString                                              GuildId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MemberUserId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MemberCharacterId;                                       // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterName;                                           // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0044(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_876S[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FaceIcon;                                                // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGuildMemberRole                                           GuildMemberRole;                                         // 0x0068(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TXZ5[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastLogin;                                               // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNowOnline;                                              // 0x0080(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_86LS[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OnlineStatus;                                            // 0x0084(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EntryId;                                                 // 0x0088(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSendLike;                                               // 0x0098(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F822[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x00A0(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bPartyMember;                                            // 0x00C0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPartyLeader;                                            // 0x00C1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFriend;                                                 // 0x00C2(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          TensionTag;                                              // 0x00C3(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isAdventureCardSend;                                     // 0x00C4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isAdventureCardDoneSend;                                 // 0x00C5(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5LHK[0x2];                                   // 0x00C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           LastLogInDataTime;                                       // 0x00C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FriendRegistratedDate;                                   // 0x00D0(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GuildMemberData_CS
	 * Size -> 0x0001
	 */
	struct FGuildMemberData_CS
	{
	public:
		bool                                                       to_blocked;                                              // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GuildActivity
	 * Size -> 0x00E0
	 */
	struct FGuildActivity
	{
	public:
		EGuildActivityType                                         Kind;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IIOG[0xD7];                                  // 0x0001(0x00D7) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           CreatedAt;                                               // 0x00D8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GuildEntryData_CS
	 * Size -> 0x0030
	 */
	struct FGuildEntryData_CS
	{
	public:
		class FString                                              LeaderCharacterID;                                       // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           LeaderPrivacySetting;                                    // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QEL6[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastGuildNameEditorCharacterId;                          // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           LastGuildNameEditorPrivacySetting;                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZRH[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.GuildData_CS
	 * Size -> 0x00A0
	 */
	struct FGuildData_CS
	{
	public:
		ESBPlatformType                                            LastGuildNameEditorPlatformType;                         // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PEHC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastGuildNameEditorPlatformOnlineID;                     // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastGuildNameEditorUserId;                               // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastGuildNameEditorCharacterId;                          // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           LastGuildNameEditorPrivacySetting;                       // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlatformType                                            LeaderPlatformType;                                      // 0x0039(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RSP[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LeaderPlatformOnlineID;                                  // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeaderCharacterID;                                       // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           LeaderPrivacySetting;                                    // 0x0060(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlatformType                                            LastCommentEditorPlatformType;                           // 0x0061(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QBFJ[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastCommentEditorPlatformOnlineID;                       // 0x0068(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastCommentEditorUserId;                                 // 0x0078(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastCommentEditorCharacterId;                            // 0x0088(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           LastCommentEditorPrivacySetting;                         // 0x0098(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZA0[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.GuildRepData
	 * Size -> 0x0080
	 */
	struct FGuildRepData
	{
	public:
		class FString                                              GuildId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildName;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildShortName;                                          // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastGuildNameEditorCharacterId;                          // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastGuildNameEditorPlatformId;                           // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           LastGuildNameEditorPrivilegeType;                        // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UREZ[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastCommentEditorCharacterId;                            // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastCommentEditorPlatformId;                             // 0x0068(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           LastCommentEditorPrivilegeType;                          // 0x0078(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGuildMemberRole                                           GuildMemberRole;                                         // 0x0079(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TDHR[0x6];                                   // 0x007A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBHoldHandParam
	 * Size -> 0x0020
	 */
	struct FSBHoldHandParam
	{
	public:
		float                                                      Range;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawLimit;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchLimit;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6APT[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 Camera;                                                  // 0x0010(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestPlayInfo
	 * Size -> 0x0018
	 */
	struct FSBInterruptQuestPlayInfo
	{
	public:
		class FName                                                QuestID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   InstanceId;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OSRZ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   EndTimeTick;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestPlayerRanking
	 * Size -> 0x0020
	 */
	struct FSBInterruptQuestPlayerRanking
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               Class;                                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOFN[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RankingRank;                                             // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContributionPoint;                                       // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N71D[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestResultInfo
	 * Size -> 0x0018
	 */
	struct FSBInterruptQuestResultInfo
	{
	public:
		class FName                                                QuestID;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBInterruptQuestPlayerRanking>              Ranking;                                                 // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestNpcData
	 * Size -> 0x001C
	 */
	struct FSBInterruptQuestNpcData
	{
	public:
		class FName                                                NpcId;                                                   // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                QuestID;                                                 // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestGimmickObjectData
	 * Size -> 0x001C
	 */
	struct FSBInterruptQuestGimmickObjectData
	{
	public:
		class FName                                                ObjectId;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                QuestID;                                                 // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestDestructibleObjectData
	 * Size -> 0x0020
	 */
	struct FSBInterruptQuestDestructibleObjectData
	{
	public:
		class FName                                                ObjectId;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                QuestID;                                                 // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActive;                                                // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GTRX[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMailLimitStatus
	 * Size -> 0x0010
	 */
	struct FSBMailLimitStatus
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XP13[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           LimitDate;                                               // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMultiType
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBMultiType : public FTableRowBase
	{
	public:
		int32_t                                                    Int32Value;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FloatValue;                                              // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGamePadSettings
	 * Size -> 0x0090
	 */
	struct FSBGamePadSettings
	{
	public:
		ESBKeyConfigGamepadKey                                     Dash;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     AutoRun;                                                 // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Jump;                                                    // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     MainAction;                                              // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     SubAction;                                               // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     LeftSkill;                                               // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     RightSkill;                                              // 0x0006(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Skill1;                                                  // 0x0007(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Skill2;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Skill3;                                                  // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Skill4;                                                  // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     SpecialSkill;                                            // 0x000B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Dodge;                                                   // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Interaction;                                             // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Reload;                                                  // 0x000E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ImagineArts;                                             // 0x000F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ImagineArts2;                                            // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ImagineMount;                                            // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     CameraZoomIn;                                            // 0x0012(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     CameraZoomOut;                                           // 0x0013(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     CameraReset;                                             // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     LockOn;                                                  // 0x0015(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutExec;                                            // 0x0016(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutMoveLeft;                                        // 0x0017(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutMoveRight;                                       // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Function;                                                // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Function2;                                               // 0x001A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     MainMenu;                                                // 0x001B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ChatWindow;                                              // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRing;                                            // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF5;                                       // 0x001E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF6;                                       // 0x001F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF7;                                       // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF8;                                       // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF9;                                       // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF10;                                      // 0x0023(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF11;                                      // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ShortcutRingExeF12;                                      // 0x0025(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     WholeMap;                                                // 0x0026(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Pushpin;                                                 // 0x0027(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     PhotoMode;                                               // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     Screenshot;                                              // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     QAHUD;                                                   // 0x002A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     QuestHudChange;                                          // 0x002B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     KeyGuide;                                                // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     SkillPaletteChange;                                      // 0x002D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     NowParty;                                                // 0x002E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ContentAction1;                                          // 0x002F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigGamepadKey                                     ContentAction2;                                          // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V2Z5[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LeftStickInputThresholdX;                                // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftStickInputStrengthX;                                 // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftStickInputThresholdY;                                // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftStickInputStrengthY;                                 // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightStickInputThresholdX;                               // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightStickInputStrengthX;                                // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightStickInputThresholdY;                               // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightStickInputStrengthY;                                // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraSpeedRateYaw;                                      // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraSpeedRatePitch;                                    // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_FitTargetStrength;                             // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_FollowTargetStrength;                          // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_CameraBrakeStrength;                           // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSwitchAnalogStick : 1;                                  // 0x0068(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseCameraPitch : 1;                                 // 0x0068(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseCameraYaw : 1;                                   // 0x0068(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNU7[0x27];                                  // 0x0069(0x0027) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBKeyboardSettings
	 * Size -> 0x0098
	 */
	struct FSBKeyboardSettings
	{
	public:
		ESBKeyConfigKeyboardKey                                    MoveFront;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    MoveBack;                                                // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    MoveLeft;                                                // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    MoveRight;                                               // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Walk;                                                    // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Dash;                                                    // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    AutoRun;                                                 // 0x0006(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Jump;                                                    // 0x0007(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    OrientToCamera;                                          // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    MainAction;                                              // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    SubAction;                                               // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    LeftSkill;                                               // 0x000B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    RightSkill;                                              // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Skill1;                                                  // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Skill2;                                                  // 0x000E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Skill3;                                                  // 0x000F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Skill4;                                                  // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    SpecialSkill;                                            // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Dodge;                                                   // 0x0012(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Interaction;                                             // 0x0013(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Reload;                                                  // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ImagineArts;                                             // 0x0015(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ImagineArts2;                                            // 0x0016(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ImagineMount;                                            // 0x0017(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    CameraPitchUp;                                           // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    CameraPitchDown;                                         // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    CameraYawLeft;                                           // 0x001A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    CameraYawRight;                                          // 0x001B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    CameraZoomIn;                                            // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    CameraZoomOut;                                           // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    CameraReset;                                             // 0x001E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    LockOn;                                                  // 0x001F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    LockOnTargetRight;                                       // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    LockOnTargetLeft;                                        // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutExec;                                            // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutMoveLeft;                                        // 0x0023(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutMoveRight;                                       // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Function;                                                // 0x0025(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    MainMenu;                                                // 0x0026(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ChatWindow;                                              // 0x0027(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAMyCharacter;                                           // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAInventory;                                             // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAQuest;                                                 // 0x002A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAMap;                                                   // 0x002B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QALibrary;                                               // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAContents;                                              // 0x002D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAParty;                                                 // 0x002E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAGuild;                                                 // 0x002F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAMyGacha;                                               // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAOption;                                                // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAPhotoMode;                                             // 0x0032(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QAHUD;                                                   // 0x0033(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QACommunicate;                                           // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRing;                                            // 0x0035(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF5;                                       // 0x0036(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF6;                                       // 0x0037(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF7;                                       // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF8;                                       // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF9;                                       // 0x003A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF10;                                      // 0x003B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF11;                                      // 0x003C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ShortcutRingExeF12;                                      // 0x003D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    WholeMap;                                                // 0x003E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Screenshot;                                              // 0x003F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMarkRegist;                                          // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark1;                                               // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark2;                                               // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark3;                                               // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark4;                                               // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark5;                                               // 0x0045(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark6;                                               // 0x0046(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark7;                                               // 0x0047(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark8;                                               // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark9;                                               // 0x0049(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark10;                                              // 0x004A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark11;                                              // 0x004B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark12;                                              // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark13;                                              // 0x004D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark14;                                              // 0x004E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark15;                                              // 0x004F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark16;                                              // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark17;                                              // 0x0051(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark18;                                              // 0x0052(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark19;                                              // 0x0053(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark20;                                              // 0x0054(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark21;                                              // 0x0055(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark22;                                              // 0x0056(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark23;                                              // 0x0057(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    BookMark24;                                              // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    Pushpin;                                                 // 0x0059(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    PhotoMode;                                               // 0x005A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    QuestHudChange;                                          // 0x005B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    KeyGuide;                                                // 0x005C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    SkillPaletteChange;                                      // 0x005D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    NowParty;                                                // 0x005E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ContentAction1;                                          // 0x005F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigKeyboardKey                                    ContentAction2;                                          // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KR0D[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraSpeedRateYaw;                                      // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraSpeedRatePitch;                                    // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_FitTargetStrength;                             // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_FollowTargetStrength;                          // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_CameraBrakeStrength;                           // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OUJO[0x20];                                  // 0x0078(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMouseSettings
	 * Size -> 0x0098
	 */
	struct FSBMouseSettings
	{
	public:
		ESBKeyConfigMouseKey                                       MoveFront;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       MoveBack;                                                // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       MoveLeft;                                                // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       MoveRight;                                               // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Walk;                                                    // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Dash;                                                    // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       AutoRun;                                                 // 0x0006(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       RouteGuideAutoRun;                                       // 0x0007(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Jump;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       OrientToCamera;                                          // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       MainAction;                                              // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       SubAction;                                               // 0x000B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       LeftSkill;                                               // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       RightSkill;                                              // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Skill1;                                                  // 0x000E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Skill2;                                                  // 0x000F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Skill3;                                                  // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Skill4;                                                  // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       SpecialSkill;                                            // 0x0012(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Dodge;                                                   // 0x0013(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Interaction;                                             // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Reload;                                                  // 0x0015(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ImagineArts;                                             // 0x0016(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ImagineArts2;                                            // 0x0017(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ImagineMount;                                            // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       CameraPitchUp;                                           // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       CameraPitchDown;                                         // 0x001A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       CameraYawLeft;                                           // 0x001B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       CameraYawRight;                                          // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       CameraZoomIn;                                            // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       CameraZoomOut;                                           // 0x001E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       CameraReset;                                             // 0x001F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       LockOn;                                                  // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       LockOnTargetRight;                                       // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       LockOnTargetLeft;                                        // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutExec;                                            // 0x0023(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutMoveLeft;                                        // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutMoveRight;                                       // 0x0025(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       MainMenu;                                                // 0x0026(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ChatWindow;                                              // 0x0027(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAMyCharacter;                                           // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAInventory;                                             // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAQuest;                                                 // 0x002A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAMap;                                                   // 0x002B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QALibrary;                                               // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAContents;                                              // 0x002D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAParty;                                                 // 0x002E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAGuild;                                                 // 0x002F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAMyGacha;                                               // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAOption;                                                // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAPhotoMode;                                             // 0x0032(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QAHUD;                                                   // 0x0033(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QACommunicate;                                           // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRing;                                            // 0x0035(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF5;                                       // 0x0036(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF6;                                       // 0x0037(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF7;                                       // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF8;                                       // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF9;                                       // 0x003A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF10;                                      // 0x003B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF11;                                      // 0x003C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ShortcutRingExeF12;                                      // 0x003D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       WholeMap;                                                // 0x003E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Screenshot;                                              // 0x003F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMarkRegist;                                          // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark1;                                               // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark2;                                               // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark3;                                               // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark4;                                               // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark5;                                               // 0x0045(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark6;                                               // 0x0046(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark7;                                               // 0x0047(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark8;                                               // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark9;                                               // 0x0049(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark10;                                              // 0x004A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark11;                                              // 0x004B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark12;                                              // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark13;                                              // 0x004D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark14;                                              // 0x004E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark15;                                              // 0x004F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark16;                                              // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark17;                                              // 0x0051(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark18;                                              // 0x0052(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark19;                                              // 0x0053(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark20;                                              // 0x0054(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark21;                                              // 0x0055(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark22;                                              // 0x0056(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark23;                                              // 0x0057(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       BookMark24;                                              // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       Pushpin;                                                 // 0x0059(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       PhotoMode;                                               // 0x005A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       QuestHudChange;                                          // 0x005B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       KeyGuide;                                                // 0x005C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       SkillPaletteChange;                                      // 0x005D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       NowParty;                                                // 0x005E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ContentAction1;                                          // 0x005F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBKeyConfigMouseKey                                       ContentAction2;                                          // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKEC[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InputStrength;                                           // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_FitTargetStrength;                             // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_FollowTargetStrength;                          // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimAssist_CameraBrakeStrength;                           // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseMouseYAxis : 1;                                  // 0x0074(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReverseMouseXAxis : 1;                                  // 0x0074(0x0001) BIT_FIELD Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_96XS[0x23];                                  // 0x0075(0x0023) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerClassKeyConfigData
	 * Size -> 0x01D0
	 */
	struct FSBPlayerClassKeyConfigData
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ERVE[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBGamePadSettings                                  GamePadSetting;                                          // 0x0008(0x0090) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBKeyboardSettings                                 KeyboardSetting;                                         // 0x0098(0x0098) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMouseSettings                                    MouseSetting;                                            // 0x0130(0x0098) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bIsDashToggle;                                           // 0x01C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableMainAttackHoldCombo;                            // 0x01C9(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableMoveInputCommand;                               // 0x01CA(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMoveInputCommandInterval                                MoveInputCommandInterval;                                // 0x01CB(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSubPaletteHold;                                       // 0x01CC(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MZD9[0x3];                                   // 0x01CD(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerCharacterParamInfo
	 * Size -> 0x0088
	 */
	struct FSBPlayerCharacterParamInfo
	{
	public:
		float                                                      AttackPower;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefencePower;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerClassBattleRange                                  BattleRange;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TMC5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RayLengthForPlayerReticle;                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckPlayerReticle;                                     // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1GR6[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetCursorNearColorRange;                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultMainSkill;                                        // 0x0018(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultSubSkill;                                         // 0x001C(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultAerialSkill;                                      // 0x0020(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts1;                                      // 0x0024(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts2;                                      // 0x0028(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts3;                                      // 0x002C(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts4;                                      // 0x0030(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultSpecialSkill;                                     // 0x0034(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultDodgeSkill;                                       // 0x0038(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultEnemyStepJumpSkill;                               // 0x003C(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultUkemiSkill;                                       // 0x0040(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultSkillCancelStepSkill;                             // 0x0044(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultContentActionSkill1;                              // 0x0048(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultContentActionSkill2;                              // 0x004C(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts5;                                      // 0x0050(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts6;                                      // 0x0054(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts7;                                      // 0x0058(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     DefaultActiveArts8;                                      // 0x005C(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     ContentActionSkillIDList[0x5];                           // 0x0060(0x0014) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q8ZH[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable*                                          SkillDataTable;                                          // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          PassiveSkillDataTable;                                   // 0x0080(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillTagPreset
	 * Size -> 0x0028
	 */
	struct FSBPlayerSkillTagPreset
	{
	public:
		ESBPlayerSkillActionType                                   ActionType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MEZN[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        NeedTags;                                                // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        ForbidTags;                                              // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSignificanceAnimUpdateRateSetting
	 * Size -> 0x0020
	 */
	struct FSBPlayerSignificanceAnimUpdateRateSetting
	{
	public:
		float                                                      Significance;                                            // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZSO4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              ThresholdList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    SkipInerpolationNum;                                     // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LC7C[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerTransformSetting
	 * Size -> 0x0380
	 */
	struct FSBPlayerTransformSetting
	{
	public:
		ESBPlayerTransformCharacter                                CharacterType;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O7XA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              TransformCharacter[0x28];                                // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FSBEffectAsset                                      TransformStartEffectSetting;                             // 0x0030(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEffectAsset                                      TransformEndEffectSetting;                               // 0x01D8(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerFollowParam
	 * Size -> 0x001C
	 */
	struct FSBPlayerFollowParam
	{
	public:
		float                                                      StopDist;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WalkDist;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashStartDist;                                           // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashEndDist;                                             // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetOffset;                                            // 0x0010(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionQuestRequestParam
	 * Size -> 0x0048
	 */
	struct FSBMissionQuestRequestParam
	{
	public:
		unsigned char                                              UnknownData_L93A[0x48];                                  // 0x0000(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionQuestMissionScoreDebuf
	 * Size -> 0x0008
	 */
	struct FSBMissionQuestMissionScoreDebuf
	{
	public:
		unsigned char                                              UnknownData_VEDL[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionQuestMissionElementalBurst
	 * Size -> 0x0008
	 */
	struct FSBMissionQuestMissionElementalBurst
	{
	public:
		unsigned char                                              UnknownData_QX3T[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionQuestMissionScore
	 * Size -> 0x0070
	 */
	struct FSBMissionQuestMissionScore
	{
	public:
		int32_t                                                    Damage_Point;                                            // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Damage_Count;                                            // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalDamege_Point;                                    // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalDamege_Count;                                    // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TakeDamege_Point;                                        // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TakeDamege_Count;                                        // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DestructBomb_Count;                                      // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DestructObject_Count;                                    // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JustAvoid_Count;                                         // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Dead_Count;                                              // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TreasureGet_Count;                                       // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SupplierUse_Count;                                       // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMissionQuestMissionScoreDebuf>            BadStatusCountList;                                      // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMissionQuestMissionScoreDebuf>            TakeBadStatusCountList;                                  // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMissionQuestMissionScoreDebuf>            TakeElementCountList;                                    // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMissionQuestMissionElementalBurst>        ElementalBurstCountList;                                 // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSwimMeshOffsetParam
	 * Size -> 0x0008
	 */
	struct FSBSwimMeshOffsetParam
	{
	public:
		float                                                      MinHeightOffsetZ;                                        // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHeightOffsetZ;                                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSwimMeshOffsetParam_Body
	 * Size -> 0x0018
	 */
	struct FSBSwimMeshOffsetParam_Body
	{
	public:
		struct FSBSwimMeshOffsetParam                              S;                                                       // 0x0000(0x0008) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBSwimMeshOffsetParam                              M;                                                       // 0x0008(0x0008) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBSwimMeshOffsetParam                              L;                                                       // 0x0010(0x0008) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSwimMeshOffsetParam_Gender
	 * Size -> 0x0030
	 */
	struct FSBSwimMeshOffsetParam_Gender
	{
	public:
		struct FSBSwimMeshOffsetParam_Body                         Male;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBSwimMeshOffsetParam_Body                         Female;                                                  // 0x0018(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveParamModifyValue
	 * Size -> 0x0008
	 */
	struct FSBPassiveParamModifyValue
	{
	public:
		ESBPassiveStatusParamCalcType                              CalcType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXB7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveLevelParamModifySetting
	 * Size -> 0x000C
	 */
	struct FSBPassiveLevelParamModifySetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPassiveParamModifyValue                          ModifyValue;                                             // 0x0004(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveLevelAttackCollisionSetting
	 * Size -> 0x0008
	 */
	struct FSBPassiveLevelAttackCollisionSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionScale;                                          // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveHPRecoveryItemRemoveStatusSetting
	 * Size -> 0x0018
	 */
	struct FSBPassiveHPRecoveryItemRemoveStatusSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActivateRate;                                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ESBBattleEffectiveGroup>                            RemoveStatusGroupList;                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveResurrectionApplyBattleStatusSetting
	 * Size -> 0x0028
	 */
	struct FSBPassiveResurrectionApplyBattleStatusSetting
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2OVN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 ToSelfStatusAlimentHandle;                               // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ToTargetStatusAlimentHandle;                             // 0x0018(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerBurstBonusAttackAndElementModifySetting
	 * Size -> 0x0018
	 */
	struct FSBPlayerBurstBonusAttackAndElementModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AttackModifyPercent;                                     // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ElementModifyPercent;                                    // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerGiveStatusAlimentOnAttackHitPerkInterlockPassiveSkillSetting
	 * Size -> 0x0010
	 */
	struct FSBPlayerGiveStatusAlimentOnAttackHitPerkInterlockPassiveSkillSetting
	{
	public:
		struct FDataTableRowHandle                                 StatusHandleToTarget;                                    // 0x0000(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPnQuestConditionData
	 * Size -> 0x0048
	 */
	struct FSBPnQuestConditionData
	{
	public:
		ESBMissionQuestType                                        Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestItemType                                    ItemType;                                                // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I59B[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemIdString;                                            // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestPlaceType                                   PlaceType;                                               // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KSQ2[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapId;                                                   // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CondtionId;                                              // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXLZ[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPnQuestItemData
	 * Size -> 0x0098
	 */
	struct FSBPnQuestItemData
	{
	public:
		class FString                                              QuestID;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GroupId;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPnQuestConditionData                             ConditionData;                                           // 0x0020(0x0048) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0068(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    QuestNameId;                                             // 0x006C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Progress;                                                // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAchieve;                                               // 0x0074(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRewarded;                                              // 0x0075(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WUP4[0x2];                                   // 0x0076(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ForceAchievementPriceType;                               // 0x0078(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ForceAchievementPriceCount;                              // 0x007C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        RewardIdList;                                            // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       ProgressAchievemented;                                   // 0x0090(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9QTH[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPnQuestBoard
	 * Size -> 0x0030
	 */
	struct FSBPnQuestBoard
	{
	public:
		int32_t                                                    BoardId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2H72[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           Period;                                                  // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBPnQuestItemData>                          ItemList;                                                // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPnQuestBoardManager
	 * Size -> 0x0010
	 */
	struct FSBPnQuestBoardManager
	{
	public:
		TArray<struct FSBPnQuestBoard>                             QuestBoardList;                                          // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardBoostElement
	 * Size -> 0x0028
	 */
	struct FSBRewardBoostElement
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BoostId;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardBoostType                                         AbilityType;                                             // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G5TQ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AbilityID;                                               // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LimitCount;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RemainingCount;                                          // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardBoostResetPattern                                 ResetPattern;                                            // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRO1[0xF];                                   // 0x0019(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardBoostInfo
	 * Size -> 0x0048
	 */
	struct FSBRewardBoostInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnable;                                                 // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsValidActiveFrom;                                      // 0x0005(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XHP[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ActiveFrom;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsValidActiveUntil;                                     // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6Z7V[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ActiveUntil;                                             // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxBoostEffects;                                         // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResetPattern;                                            // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBRewardBoostElement>                       ElementList;                                             // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassInfo
	 * Size -> 0x001C
	 */
	struct FSBSeasonPassInfo
	{
	public:
		int32_t                                                    SeasonId;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSeasonPassPlanState                                     PassType;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T6JQ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Point;                                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Discount;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextSeasonDiscount;                                      // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextSeasonPoint;                                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassReceivedRewardInfo
	 * Size -> 0x000C
	 */
	struct FSBSeasonPassReceivedRewardInfo
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeasonId;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCreatedElementAmpOption
	 * Size -> 0x0118
	 */
	struct FSBCreatedElementAmpOption
	{
	public:
		class ASBPlayerCharacter*                                  OwnerPlayer;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x0008(0x00C8) Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_YBJ8[0x48];                                  // 0x00D0(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFireBurnerFireShot
	 * Size -> 0x0240
	 */
	struct FSBFireBurnerFireShot
	{
	public:
		unsigned char                                              UnknownData_32RI[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASBPlayerCharacter*                                  OwnerPlayer;                                             // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBPlayerSkillController_FireBurner*                 pSkillController;                                        // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBMagicianFireBurnerSkill*                          pFireBurnerSkill;                                        // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x0030(0x00C8) Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
		struct FSBPlayingEffect                                    PlayingFireStringEffect;                                 // 0x00F8(0x00C8) Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_RSJG[0x80];                                  // 0x01C0(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCreatedThunderCloudOption
	 * Size -> 0x0160
	 */
	struct FSBCreatedThunderCloudOption
	{
	public:
		class ASBPlayerCharacter*                                  OwnerPlayer;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x0008(0x00C8) Transient, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_5158[0x90];                                  // 0x00D0(0x0090) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerTag
	 * Size -> 0x0010
	 */
	struct FSBPlayerTag
	{
	public:
		int32_t                                                    MasterTagId;                                             // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OK2A[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           EndAt;                                                   // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGameServerPartyMemberInfo
	 * Size -> 0x0038
	 */
	struct FSBGameServerPartyMemberInfo
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterName;                                           // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInvited;                                              // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X70D[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGameServerPartyInfo
	 * Size -> 0x0038
	 */
	struct FSBGameServerPartyInfo
	{
	public:
		ESBPartyType                                               PartyType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5YQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PartyId;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeaderId;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBGameServerPartyMemberInfo>                Members;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleResultPersonal
	 * Size -> 0x0028
	 */
	struct FSBDxBattleResultPersonal
	{
	public:
		int32_t                                                    AddBravePoint;                                           // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AwardedFlagBit;                                          // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLBF[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TotalRanking;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassRanking;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LZ1I[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBDxBattleGameScore>                        ScoreList;                                               // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleResultRankingParam
	 * Size -> 0x0038
	 */
	struct FSBDxBattleResultRankingParam
	{
	public:
		int32_t                                                    RankingRank;                                             // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NSP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5ON0[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Contribution;                                            // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0V8[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleResultRanking
	 * Size -> 0x0030
	 */
	struct FSBDxBattleResultRanking
	{
	public:
		TArray<struct FSBDxBattleResultRankingParam>               TotalTopList;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDxBattleResultRankingParam>               MyClassTopList;                                          // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDxBattleResultRankingParam>               OtherClassTopList;                                       // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleResultAwardParam
	 * Size -> 0x0038
	 */
	struct FSBDxBattleResultAwardParam
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JMDA[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AwardedFlag;                                             // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEZ7[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardValue;                                              // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M3K2[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleResultAward
	 * Size -> 0x0010
	 */
	struct FSBDxBattleResultAward
	{
	public:
		TArray<struct FSBDxBattleResultAwardParam>                 AwardPlayerList;                                         // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleResult
	 * Size -> 0x0070
	 */
	struct FSBDxBattleResult
	{
	public:
		struct FSBDxBattleResultPersonal                           PersonalData;                                            // 0x0000(0x0028) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDxBattleResultRanking                            RankingData;                                             // 0x0028(0x0030) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDxBattleResultAward                              AwardPlayerData;                                         // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       GameClear;                                               // 0x0068(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsCompleteClear;                                         // 0x0069(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V50Y[0x6];                                   // 0x006A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleGameScore
	 * Size -> 0x000C
	 */
	struct FSBRaidBattleGameScore
	{
	public:
		unsigned char                                              UnknownData_IL92[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TotalScore;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankingRank;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleResultPersonal
	 * Size -> 0x0020
	 */
	struct FSBRaidBattleResultPersonal
	{
	public:
		int32_t                                                    AwardedFlagBit;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8EFJ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TotalRanking;                                            // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassRanking;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBRaidBattleGameScore>                      ScoreList;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleResultRankingParam
	 * Size -> 0x0030
	 */
	struct FSBRaidBattleResultRankingParam
	{
	public:
		int32_t                                                    RankingRank;                                             // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LJ6R[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O9TT[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleResultRanking
	 * Size -> 0x0020
	 */
	struct FSBRaidBattleResultRanking
	{
	public:
		TArray<struct FSBRaidBattleResultRankingParam>             TotalTopList;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBRaidBattleResultRankingParam>             ClassTopList;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleResultAwardParam
	 * Size -> 0x0030
	 */
	struct FSBRaidBattleResultAwardParam
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CQB6[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AwardedFlag;                                             // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4SZF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleResultAward
	 * Size -> 0x0010
	 */
	struct FSBRaidBattleResultAward
	{
	public:
		TArray<struct FSBRaidBattleResultAwardParam>               AwardPlayerList;                                         // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleResult
	 * Size -> 0x0058
	 */
	struct FSBRaidBattleResult
	{
	public:
		struct FSBRaidBattleResultPersonal                         PersonalData;                                            // 0x0000(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBRaidBattleResultRanking                          RankingData;                                             // 0x0020(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBRaidBattleResultAward                            AwardPlayerData;                                         // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       GameClear;                                               // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BPJW[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRecipeCondition
	 * Size -> 0x0008
	 */
	struct FSBRecipeCondition
	{
	public:
		int32_t                                                    RecepiId;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRecipeType                                              RecipeType;                                              // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQ14[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBActiveItemData
	 * Size -> 0x0020
	 */
	struct FSBActiveItemData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemIndex;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEX3[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           LimitTime;                                               // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.TargetingRangeInfo
	 * Size -> 0x0008
	 */
	struct FTargetingRangeInfo
	{
	public:
		float                                                      Length;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Angle;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.TargetingRangeInfos
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTargetingRangeInfos : public FTableRowBase
	{
	public:
		TArray<struct FTargetingRangeInfo>                         Landing;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FTargetingRangeInfo>                         Flying;                                                  // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.TargetingInfo
	 * Size -> 0x0038
	 */
	struct FTargetingInfo
	{
	public:
		struct FTargetingRangeInfos                                TargetingRangeInfo;                                      // 0x0000(0x0028) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       IsEnableAutoTarget;                                      // 0x0028(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEnableAutoTargetCursor;                                // 0x0029(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEnableLockOn;                                          // 0x002A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1KTB[0x1];                                   // 0x002B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LockOnTargetChangeInputThreshold;                        // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockOnBlockMaxDeltaTime;                                 // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsLockOnInScreenCheck;                                   // 0x0034(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LFH[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileRapidParam
	 * Size -> 0x0038
	 */
	struct FProjectileRapidParam
	{
	public:
		unsigned char                                              UnknownData_HV9W[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileMasterInfo
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBProjectileMasterInfo : public FTableRowBase
	{
	public:
		class UDataTable*                                          ConfigInfo;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          EffectInfo;                                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileAttachInfo
	 * Size -> 0x0040
	 */
	struct FProjectileAttachInfo
	{
	public:
		bool                                                       bIsAttach : 1;                                           // 0x0000(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JMH8[0xB];                                   // 0x0001(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsAttachBone : 1;                                       // 0x000C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D314[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int16_t                                                    AttachSocketIndex;                                       // 0x0010(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XXPW[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     AttachComp;                                              // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     WeaponIndex;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I70Q[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize                                 AttachTransLocation;                                     // 0x0024(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            AttachTransRotator;                                      // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AF9J[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ValidHitOverlapActorInfo
	 * Size -> 0x0030
	 */
	struct FValidHitOverlapActorInfo
	{
	public:
		unsigned char                                              UnknownData_NQSH[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     FirstHitSelfComp;                                        // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3ID[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.BlockingCollisionActor
	 * Size -> 0x0004
	 */
	struct FBlockingCollisionActor
	{
	public:
		unsigned char                                              UnknownData_AU93[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileHitCoverConfig
	 * Size -> 0x0004
	 */
	struct FProjectileHitCoverConfig
	{
	public:
		bool                                                       bIsExclusiveSpawner : 1;                                 // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6DI5[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileShareHitSetting
	 * Size -> 0x0008
	 */
	struct FProjectileShareHitSetting
	{
	public:
		float                                                      ShareHitTime;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProjectileShareGroup                                      ShareGroup;                                              // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsIndependentBySpawner;                                 // 0x0005(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03JM[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CollisionHitSetting
	 * Size -> 0x0028
	 */
	struct FCollisionHitSetting
	{
	public:
		bool                                                       bIsDisableSelfHit;                                       // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOnlyTargetHit;                                        // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInfinitePierce;                                       // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5B5I[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsEnableBlockingHitCheck : 1;                           // 0x0004(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0I9Q[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsEnableHitCover;                                       // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2CWV[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileHitCoverConfig                           HitCoverConfig;                                          // 0x000C(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsHitTargetLimitOnlyOverlap : 1;                        // 0x0010(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDisableReHitDelay : 1;                                // 0x0010(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsShareHit : 1;                                         // 0x0010(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8CVO[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileShareHitSetting                          ShareHitConfig;                                          // 0x0014(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsEnableHitForCharacterGround : 1;                      // 0x001C(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableHitFromGroundDist : 1;                          // 0x001C(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KYM1[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EnableHitFromGroundDist;                                 // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsHitOnlyFirstFrame : 1;                                // 0x0024(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableWeakPointHit : 1;                               // 0x0024(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F40H[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CollisionHitSettingExtended
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FCollisionHitSettingExtended : public FCollisionHitSetting
	{
	public:
		unsigned char                                              UnknownData_X826[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CollisionOnOffData
	 * Size -> 0x0008
	 */
	struct FCollisionOnOffData
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionOnOff                                            OnOff;                                                   // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6HI[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileMoveBaseConfig
	 * Size -> 0x0040
	 */
	struct FProjectileMoveBaseConfig
	{
	public:
		float                                                      InitialSpeed;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OWQ4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckFloatParam>                 InitialSpeedModifyRateList;                              // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		float                                                      MinSpeed;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableGravity : 1;                                    // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4PY3[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GravityScale;                                            // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BeginEffectiveGravityTime;                               // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndEffectiveGravityTime;                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRotationFollowsVelocity : 1;                            // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRotationFollowsVelocityOwnerYawAtBegin : 1;             // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLimitDistance : 1;                                      // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MW8X[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LimitTotalDistance;                                      // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopMoveWhenGroundHit : 1;                              // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3FWH[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ParticleParameter
	 * Size -> 0x0090
	 */
	struct FParticleParameter
	{
	public:
		bool                                                       bIsEnable : 1;                                           // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GUWZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Particle[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              SimulatedParticle[0x28];                                 // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsAttach : 1;                                           // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOT8[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EProjectileEffectAttachTargetType                          AttachTargetType;                                        // 0x005C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UMQS[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachPointName;                                         // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0068(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotOffset;                                               // 0x0074(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsAutoDestroy : 1;                                      // 0x0080(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLinkDestroy : 1;                                      // 0x0080(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDisableAutoDestroyWhenProjectileDestroy : 1;          // 0x0080(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVS1[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialScale;                                            // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotInheritanceScale : 1;                              // 0x0088(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8TUM[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBEColorOverride                                          OverrideEColor;                                          // 0x008C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JM3Q[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.EffectActorParameter
	 * Size -> 0x0060
	 */
	struct FEffectActorParameter
	{
	public:
		bool                                                       bIsEnable : 1;                                           // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0VX[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EffectActor[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bIsAttach : 1;                                           // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NGA5[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EProjectileEffectAttachTargetType                          AttachTargetType;                                        // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W4T1[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachPointName;                                         // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0040(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotOffset;                                               // 0x004C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsLinkDestroyOnAttached : 1;                            // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLinkDestroy : 1;                                      // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D4Z8[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBManageEffectActor
	 * Size -> 0x000C
	 */
	struct FSBManageEffectActor
	{
	public:
		TWeakObjectPtr<class AActor>                               EffectActor;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAutoDestroy : 1;                                      // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WUSG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileHealthConditionConfig
	 * Size -> 0x0008
	 */
	struct FSBProjectileHealthConditionConfig
	{
	public:
		float                                                      HitPoint;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsChangeHitPoint;                                       // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O4QJ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileChainConfigBase
	 * Size -> 0x0030
	 */
	struct FProjectileChainConfigBase
	{
	public:
		unsigned char                                              UnknownData_U0WW[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 ProjectileConfigHandle1;                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ProjectileConfigHandle2;                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsGenerate : 1;                                         // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NZC8[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileHitChainConfig
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	struct FProjectileHitChainConfig : public FProjectileChainConfigBase
	{
	public:
		bool                                                       bIsGenerateAttackHit : 1;                                // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOnlyGenerateSBCharacterHit : 1;                       // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGenerateGroundHit : 1;                                // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGenerateBattleAreaWall : 1;                           // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1PRE[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHitEffectSpawnPosType                                     SpawnPosType;                                            // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E522[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             SpawnPosOffset;                                          // 0x0038(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAdjustGroundPos : 1;                                  // 0x0044(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K3DA[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHitEffectSpawnRotType                                     SpawnRotType;                                            // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ME2[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsReverseRotation : 1;                                  // 0x004C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsExcludeHitFromChainHitActor : 1;                      // 0x004C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRepeatChainOnAttackHit : 1;                           // 0x004C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U3KT[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      PermitConditionList;                                     // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                HitActorSocketName;                                      // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProjectileHitChainChangeTarget                            TargetSelectRule;                                        // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_256Q[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSelfDeadChainConfig
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FProjectileSelfDeadChainConfig : public FProjectileChainConfigBase
	{	};

	/**
	 * ScriptStruct SkyBlue.SBReferenceReplaceData
	 * Size -> 0x0010
	 */
	struct FSBReferenceReplaceData
	{
	public:
		class UMaterialInstance*                                   MaterialInstanceBase;                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                   MaterialInstanceForImagine;                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBReferenceReplaceDataSet
	 * Size -> 0x0018
	 */
	struct FSBReferenceReplaceDataSet
	{
	public:
		class USkeletalMesh*                                       BaseMesh;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBReferenceReplaceData>                     ReplaceDataArray;                                        // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileManageEffect
	 * Size -> 0x0048
	 */
	struct FSBProjectileManageEffect
	{
	public:
		class UParticleSystem*                                     Particle;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   AkEvent;                                                 // 0x0008(0x0040) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileRandomShotInfo
	 * Size -> 0x0018
	 */
	struct FProjectileRandomShotInfo
	{
	public:
		TArray<struct FSBProjectileSelectHandle>                   ProjectileSelectHandle;                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    SelectRate;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_058J[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileBaseParameter
	 * Size -> 0x0070
	 */
	struct FProjectileBaseParameter
	{
	public:
		unsigned char                                              UnknownData_EVTT[0x68];                                  // 0x0000(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Spawner;                                                 // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileTargetInfoSet
	 * Size -> 0x0020
	 */
	struct FProjectileTargetInfoSet
	{
	public:
		TArray<TWeakObjectPtr<class USceneComponent>>              TargetCompList;                                          // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 TargetPoint;                                             // 0x0010(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidTargetPoint : 1;                                   // 0x001C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IIJL[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSpawnParameter
	 * Size -> 0x0098 (FullSize[0x0108] - InheritedSize[0x0070])
	 */
	struct FProjectileSpawnParameter : public FProjectileBaseParameter
	{
	public:
		struct FProjectileTargetInfoSet                            TargetInfoSet;                                           // 0x0070(0x0020) ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K3C1[0x20];                                  // 0x0090(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      IgnoreHitActorList;                                      // 0x00B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ZPR[0x48];                                  // 0x00C0(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSpawnRelayParameter
	 * Size -> 0x0138
	 */
	struct FProjectileSpawnRelayParameter
	{
	public:
		struct FProjectileSpawnParameter                           SpawnParam;                                              // 0x0000(0x0108) ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9KDI[0x10];                                  // 0x0108(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     AuthorityClientPlayerTargetComp;                         // 0x0118(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6Q2K[0x18];                                  // 0x0120(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileTrailImpactInfo
	 * Size -> 0x0050
	 */
	struct FSBProjectileTrailImpactInfo
	{
	public:
		bool                                                       bIsPaintDecal : 1;                                       // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RP0H[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              DecalMaterial[0x28];                                     // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      PaintDecalLength;                                        // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            PaintDecalOffsetRot;                                     // 0x0034(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             PaintDecalSize;                                          // 0x0040(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PaintDecalLifeTime;                                      // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.QuestBoardQuestData
	 * Size -> 0x0018
	 */
	struct FQuestBoardQuestData
	{
	public:
		bool                                                       bSeparator;                                              // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q08B[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    QuestIndex;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestCategory2                                            Category2;                                               // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestCategory3                                            Category3;                                               // 0x000D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestStatus                                               QuestStatus;                                             // 0x000E(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2LS[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClassLevelPrecondition;                                  // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanReceive;                                             // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNew;                                                    // 0x0015(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GNCJ[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBQuestUpdatedItemsAtJoin
	 * Size -> 0x0008
	 */
	struct FSBQuestUpdatedItemsAtJoin
	{
	public:
		EItemType                                                  Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BB2J[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ID;                                                      // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBQuestListFilterSetting
	 * Size -> 0x0010
	 */
	struct FSBQuestListFilterSetting
	{
	public:
		TArray<bool>                                               bFlag;                                                   // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.QuestListQuestData
	 * Size -> 0x000C
	 */
	struct FQuestListQuestData
	{
	public:
		int32_t                                                    QuestIndex;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E4DH[0x1];                                   // 0x0008(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EQuestStatus                                               QuestStatus;                                             // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JFVT[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonRect
	 * Size -> 0x001C
	 */
	struct FSBDungeonRect
	{
	public:
		unsigned char                                              UnknownData_78FA[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             BoxCenterPos;                                            // 0x0010(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRandomDungeonMakeParamInfo
	 * Size -> 0x0028
	 */
	struct FSBRandomDungeonMakeParamInfo
	{
	public:
		ERoomMakeFunction                                          MakeFucnction;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I5AY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CellActorClass;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LevelName;                                               // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ILR[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRandomDungeonMakeParamTable
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBRandomDungeonMakeParamTable : public FTableRowBase
	{
	public:
		TArray<struct FSBRandomDungeonMakeParamInfo>               FSBRandomDungeonMakeParamSet;                            // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                RowComment;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRandomDungeonAriaConnectInfo
	 * Size -> 0x0008
	 */
	struct FSBRandomDungeonAriaConnectInfo
	{
	public:
		uint32_t                                                   ConnectWayFlags;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DungeonMapSerialNum;                                     // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RankingCharacterData
	 * Size -> 0x0078
	 */
	struct FRankingCharacterData
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              shortId;                                                 // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalPower;                                              // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassRank;                                               // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4GEZ[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Achievement;                                             // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponID;                                                // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1IJV[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0058(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RankingData
	 * Size -> 0x0088
	 */
	struct FRankingData
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UserId;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              shortId;                                                 // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalPower;                                              // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJ9A[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Achievement;                                             // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRankingCharacterData>                       CharacterDataList;                                       // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0068(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RankingHistoryData
	 * Size -> 0x00A8
	 */
	struct FRankingHistoryData
	{
	public:
		class FString                                              RankingId;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RankingGroup;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RankingName;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRankingType                                             RankingType;                                             // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRankingTargetType                                       RankingTargetType;                                       // 0x0031(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N80O[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EnableGameMode;                                          // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EnableContentId;                                         // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               EnableClassType;                                         // 0x0058(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKJO[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ContentId;                                               // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0070(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EXBU[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Season;                                                  // 0x0074(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredValue;                                           // 0x0078(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LimitedNumber;                                           // 0x007C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastUpdated;                                             // 0x0080(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H54S[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TermId;                                                  // 0x0088(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PublicTermId;                                            // 0x0098(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGlobalRepTargetInfo
	 * Size -> 0x0028
	 */
	struct FSBGlobalRepTargetInfo
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GIR9[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerStateRepForCity
	 * Size -> 0x0014
	 */
	struct FSBPlayerStateRepForCity
	{
	public:
		unsigned char                                              UnknownData_NDNV[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class APlayerState>                         State;                                                   // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59TV[0x8];                                   // 0x000C(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBReplicationPlayerSyncImportant
	 * Size -> 0x0060
	 */
	struct FSBReplicationPlayerSyncImportant
	{
	public:
		unsigned char                                              UnknownData_CDKK[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBReportedDetail
	 * Size -> 0x0018
	 */
	struct FSBReportedDetail
	{
	public:
		class FString                                              ReportedCharacterId;                                     // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ReportedTime;                                            // 0x0010(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBReportedInfo
	 * Size -> 0x0010
	 */
	struct FSBReportedInfo
	{
	public:
		TArray<struct FSBReportedDetail>                           ReportedDetails;                                         // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRouteGuideDebugInfo
	 * Size -> 0x0020
	 */
	struct FSBRouteGuideDebugInfo
	{
	public:
		class FName                                                CurrentLevelName;                                        // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TargetLevelName;                                         // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0010(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Range;                                                   // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRTPCAkComponentData
	 * Size -> 0x0014
	 */
	struct FSBRTPCAkComponentData
	{
	public:
		ESBRTPCAkComponentType                                     Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A6DO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ValueDefault;                                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMin;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMax;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IIE4[0x4];                                   // 0x0010(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBScbClassData
	 * Size -> 0x0024
	 */
	struct FSBScbClassData
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9SY5[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxRank;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    STR;                                                     // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VIT;                                                     // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DEX;                                                     // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    INT;                                                     // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MND;                                                     // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HP;                                                      // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScbClassConditionsData
	 * Size -> 0x0024
	 */
	struct FSBScbClassConditionsData
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RQ5N[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentLevel;                                            // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextLevel;                                               // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    STR;                                                     // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VIT;                                                     // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DEX;                                                     // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    INT;                                                     // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MND;                                                     // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HP;                                                      // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.WatermarkSetting
	 * Size -> 0x0018
	 */
	struct FWatermarkSetting
	{
	public:
		int32_t                                                    BorderWidth;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NE6H[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImagePath;                                               // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBUploadImage
	 * Size -> 0x0018
	 */
	struct FSBUploadImage
	{
	public:
		class UTexture2DDynamic*                                   Texture;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      PngData;                                                 // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBServerEntry
	 * Size -> 0x0098
	 */
	struct FSBServerEntry
	{
	public:
		class FString                                              ServerName;                                              // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CurrentPlayers;                                          // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MaxPlayers;                                              // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameType;                                                // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Ping;                                                    // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SearchResultsIndex;                                      // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OYUK[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServerAddress;                                           // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SessionId;                                               // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WarpPointTag;                                            // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponAnimationSetting
	 * Size -> 0x0010
	 */
	struct FSBWeaponAnimationSetting
	{
	public:
		class UAnimationAsset*                                     Animation;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AnimationName;                                           // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkinMaterialData
	 * Size -> 0x0050
	 */
	struct FSBSkinMaterialData
	{
	public:
		unsigned char                                              UpperMaterial[0x28];                                     // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              LowerMaterial[0x28];                                     // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBSkinData
	 * Size -> 0x00F0
	 */
	struct FSBSkinData
	{
	public:
		struct FSBSkinMaterialData                                 DefaultMuscle;                                           // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSBSkinMaterialData                                 LowMuscle;                                               // 0x0050(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSBSkinMaterialData                                 HighMuscle;                                              // 0x00A0(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMaterialBaseReplaceData
	 * Size -> 0x0050
	 */
	struct FSBMaterialBaseReplaceData
	{
	public:
		unsigned char                                              MaterialBase[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              MaterialReplace[0x28];                                   // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBMaterialBaseReplaceDataArray
	 * Size -> 0x0010
	 */
	struct FSBMaterialBaseReplaceDataArray
	{
	public:
		TArray<struct FSBMaterialBaseReplaceData>                  MaterialBaseReplaceDataArray;                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMInitializeValueDataInterruptQuest
	 * Size -> 0x000C
	 */
	struct FSBBGMInitializeValueDataInterruptQuest
	{
	public:
		float                                                      WaitTimeOfStart;                                         // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitTimeOfSuccess;                                       // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitTimeOfFail;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMInitializeValueDataBattle
	 * Size -> 0x0078
	 */
	struct FSBBGMInitializeValueDataBattle
	{
	public:
		int32_t                                                    WeakEnemyLevelDiff;                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StrongEnemyLevelDiff;                                    // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitTimeOfFieldBattleEnd;                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitTimeOfDungeonZakoBattleEnd;                          // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitTimeOfDungeonMiddleBossBattleEnd;                    // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UQUE[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, ESBBattleBGMType>                      LevelBattleBGMMap;                                       // 0x0018(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FString>                                      NoRequestDefaultBattleBGMList;                           // 0x0068(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMInitializeValueInstanceArea
	 * Size -> 0x0030
	 */
	struct FSBBGMInitializeValueInstanceArea
	{
	public:
		TArray<class FString>                                      MapIDArrayOfStopTickBGM;                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FString>                                      MapIDArrayOfNotRequestNoBattle;                          // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FString>                                      MapIDArrayOfStopMusciAfterInstanceArea;                  // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMInitializeValueArena
	 * Size -> 0x0004
	 */
	struct FSBBGMInitializeValueArena
	{
	public:
		float                                                      RequestTimeOfPreBattleEnd;                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMInitializeValueData
	 * Size -> 0x0128
	 */
	struct FSBBGMInitializeValueData
	{
	public:
		class USBBGMAkComponent*                                   BGMAkComponent;                                          // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, ESBBGMMapGameMode>                     BGMGameModeMap;                                          // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FString>                                      ContentIdListOfForceUpdateMapID;                         // 0x0058(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBBGMInitializeValueDataInterruptQuest             InterruptQuest;                                          // 0x0068(0x000C) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7OV1[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBBGMInitializeValueDataBattle                     Battle;                                                  // 0x0078(0x0078) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBBGMInitializeValueInstanceArea                   InstanceArea;                                            // 0x00F0(0x0030) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBBGMInitializeValueArena                          Arena;                                                   // 0x0120(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FRI7[0x4];                                   // 0x0124(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRTPCEventData
	 * Size -> 0x0018
	 */
	struct FSBRTPCEventData
	{
	public:
		ESBAkEventRTPCType                                         RTPCType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZIF[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      EventNameArray;                                          // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSoundQuestProgressStateData
	 * Size -> 0x0010
	 */
	struct FSBSoundQuestProgressStateData
	{
	public:
		class FName                                                QuestID;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StateGroupName;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSquadMemberTarget
	 * Size -> 0x000C
	 */
	struct FSBSquadMemberTarget
	{
	public:
		unsigned char                                              UnknownData_TKII[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Priority;                                                // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSMCTargetInfo
	 * Size -> 0x0018
	 */
	struct FSBSMCTargetInfo
	{
	public:
		struct FSBSquadMemberTarget                                Target;                                                  // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                Faction;                                                 // 0x000C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClusterNo;                                               // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSquadMemberContext
	 * Size -> 0x0030
	 */
	struct FSBSquadMemberContext
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSMCSituation                                            Situation;                                               // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MORZ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Faction;                                                 // 0x000C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Group;                                                   // 0x0014(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L2SG[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBSMCTargetInfo>                            TargetList;                                              // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnActionSetting
	 * Size -> 0x0030
	 */
	struct FSBSpawnActionSetting
	{
	public:
		float                                                      Probability;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PAOH[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBUtilityOption*                                    UtilityOption;                                           // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InitAnimStateName;                                       // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      PassStateMachineNames;                                   // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCubeBuilderParameter
	 * Size -> 0x000C
	 */
	struct FSBCubeBuilderParameter
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Y;                                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCylinderBuilderParameter
	 * Size -> 0x000C
	 */
	struct FSBCylinderBuilderParameter
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Sides;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRandomSwitchs
	 * Size -> 0x0010
	 */
	struct FSBRandomSwitchs
	{
	public:
		int32_t                                                    RandomSwitch1;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomSwitch2;                                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomSwitch3;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomSwitch4;                                           // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTextId
	 * Size -> 0x0014
	 */
	struct FSBTextId
	{
	public:
		class FName                                                IdString;                                                // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FallbackId;                                              // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IdNumber;                                                // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTextVersion
	 * Size -> 0x0010
	 */
	struct FSBTextVersion
	{
	public:
		TArray<int32_t>                                            Versions;                                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTextData
	 * Size -> 0x0088
	 */
	struct FSBTextData
	{
	public:
		struct FSBTextId                                           ID;                                                      // 0x0000(0x0014) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SIUI[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Text;                                                    // 0x0018(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class FString>                           MetaData;                                                // 0x0028(0x0050) Edit, EditConst, NativeAccessSpecifierPublic
		struct FSBTextVersion                                      Version;                                                 // 0x0078(0x0010) Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTokenState
	 * Size -> 0x0048
	 */
	struct FSBTokenState
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UserId;                                                  // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           RegisteDate;                                             // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           LastRecoveryDate;                                        // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.TowerChallengeAchieve
	 * Size -> 0x0058
	 */
	struct FTowerChallengeAchieve
	{
	public:
		ETowerChallengeAchieveType                                 Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CI83[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KillEnemyId;                                             // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillEnemyAmount;                                         // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DestructObjectAmount;                                    // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DestructObjectTag;                                       // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CorrectItemID;                                           // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CorrectItemAmount;                                       // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FreeCounter;                                             // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6WBB[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                FreeText;                                                // 0x0040(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.TowerChallengeInfo
	 * Size -> 0x0018
	 */
	struct FTowerChallengeInfo
	{
	public:
		TArray<struct FTowerChallengeAchieve>                      Achieves;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      TimeLimit;                                               // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EOP8[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.TowerChallengeProgressInfo
	 * Size -> 0x0014
	 */
	struct FTowerChallengeProgressInfo
	{
	public:
		int32_t                                                    RestEnemyCount;                                          // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillEnemyAmount;                                         // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DestructObjectAmount;                                    // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CorrectItemAmount;                                       // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FreeCounter;                                             // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MssageRestrictionParam
	 * Size -> 0x000C
	 */
	struct FMssageRestrictionParam
	{
	public:
		int32_t                                                    RestrictionFromLogNum;                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RestrictionFromLogSec;                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RestrictionMessageSec;                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBUIAkEventSetting
	 * Size -> 0x0008
	 */
	struct FSBUIAkEventSetting
	{
	public:
		int32_t                                                    Priority;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBUiAkEventCategory                                       Category;                                                // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ZRW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUIAkEventRequest
	 * Size -> 0x0050
	 */
	struct FSBUIAkEventRequest
	{
	public:
		unsigned char                                              Event[0x28];                                             // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_LV7O[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             WorldContextObject;                                      // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBUtilityOptionInstance
	 * Size -> 0x0010
	 */
	struct FSBUtilityOptionInstance
	{
	public:
		class USBUtilityOption*                                    Option;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AT75[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUtilitySystem
	 * Size -> 0x0040
	 */
	struct FSBUtilitySystem
	{
	public:
		class USBUtilityBrainComponent*                            OwnerComp;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class USBUtilityOption*>                            DefaultOptions;                                          // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		TArray<struct FSBUtilityOptionInstance>                    OptionInstances;                                         // 0x0018(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_67XS[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUtilityCondition
	 * Size -> 0x0020
	 */
	struct FSBUtilityCondition
	{
	public:
		class USBUtilityDataProvider*                              Data;                                                    // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBUtilityScoreFunction                                    Function;                                                // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInverse;                                                // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2UP[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScaleX;                                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleY;                                                  // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GAHV[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityCharacterInfo
	 * Size -> 0x0008
	 */
	struct FSBWarehouseAbilityCharacterInfo
	{
	public:
		int32_t                                                    RecipeId;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWarehouseAbilityCharacterStatus                         Status;                                                  // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9NIB[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWaterDepthSoundData
	 * Size -> 0x0028
	 */
	struct FSBWaterDepthSoundData
	{
	public:
		class UAkComponent*                                        AkComponent;                                             // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1Y0N[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayWeaponEffect
	 * Size -> 0x0278
	 */
	struct FSBPlayWeaponEffect
	{
	public:
		bool                                                       bIsPlay : 1;                                             // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IUN8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBEffectAsset                                      Effect;                                                  // 0x0008(0x01A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x01B0(0x00C8) Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnvironmentWeaponEffect
	 * Size -> 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
	 */
	struct FSBEnvironmentWeaponEffect : public FSBPlayWeaponEffect
	{
	public:
		EEnvironmentType                                           Type;                                                    // 0x0278(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N9BO[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUnsheatheWeaponEffect
	 * Size -> 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
	 */
	struct FSBUnsheatheWeaponEffect : public FSBPlayWeaponEffect
	{
	public:
		bool                                                       bUnsheathe : 1;                                          // 0x0278(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JGML[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleScoreWeaponEffectParam
	 * Size -> 0x003C
	 */
	struct FSBBattleScoreWeaponEffectParam
	{
	public:
		ESBBattleScoreWeaponEffectType                             Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleScoreWeaponEffectAttachType                       AttachType;                                              // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GDG6[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachSocket;                                            // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x000C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0018(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0024(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableSheathe;                                          // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableUnsheathe;                                        // 0x0031(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CTI2[0xA];                                   // 0x0032(0x000A) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.HoldingArrowEffectSetting
	 * Size -> 0x00E0
	 */
	struct FHoldingArrowEffectSetting
	{
	public:
		unsigned char                                              UnknownData_T2B9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlayingEffect                                    PlayingEffect;                                           // 0x0010(0x00C8) Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IR53[0x8];                                   // 0x00D8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMapLevelInfo
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FSBMapLevelInfo : public FTableRowBase
	{
	public:
		class FString                                              GameContentId;                                           // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMapType                                                 MapType;                                                 // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMapRegion                                               MapRegion;                                               // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQOT[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SublevelId;                                              // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BGMMapId;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          SafeSpawnPoint;                                          // 0x0050(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAchievementRewardedStampData
	 * Size -> 0x0008
	 */
	struct FSBAchievementRewardedStampData
	{
	public:
		int32_t                                                    StampId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNew;                                                   // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MGQM[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAchievementRewardData
	 * Size -> 0x0070
	 */
	struct FSBAchievementRewardData
	{
	public:
		TArray<struct FOwnItemInfo>                                DirtyItems;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                SoldItems;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterToken>                           Tokens;                                                  // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    AddLuno;                                                 // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddGC;                                                   // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddExp;                                                  // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FreeCurrencies;                                          // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedMoney;                                           // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedGc;                                              // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedExp;                                             // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedCurrencies;                                      // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBAchievementRewardedStampData>             VanishStampDataList;                                     // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AwardIdList;                                             // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLimitedTimeGroupInfo
	 * Size -> 0x0020
	 */
	struct FSBLimitedTimeGroupInfo
	{
	public:
		int32_t                                                    GroupId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JSE2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           EndTime;                                                 // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      EmoteList;                                               // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAestheShopCharaParamRestrictionMasterData
	 * Size -> 0x0030
	 */
	struct FSBAestheShopCharaParamRestrictionMasterData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharacterGender                                         Gender;                                                  // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAestheShopCharaPartsAndParamEditType                    EditType;                                                // 0x0011(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09GW[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ParamValueList;                                          // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    ParamMin;                                                // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ParamMax;                                                // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAestheShopAppearanceInfo
	 * Size -> 0x03D0
	 */
	struct FSBAestheShopAppearanceInfo
	{
	public:
		int32_t                                                    InfoId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KRYD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharaCreateParameter                             CharaCreateParameter;                                    // 0x0008(0x03C0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FDateTime                                           DataSaveDateTime;                                        // 0x03C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreatePartsIconIdData
	 * Size -> 0x0100
	 */
	struct FSBCharaCreatePartsIconIdData
	{
	public:
		class FString                                              FaceIconId;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HairIconId;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EyeIconId;                                               // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EyeBrowIconId;                                           // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EyeLashIconId;                                           // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeftEyeIrisIconId;                                       // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RightEyeIrisIconId;                                      // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NoseIconId;                                              // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MouthIconId;                                             // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FaceLineIconId;                                          // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MakeupConditionIconId;                                   // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MakeupLipIconId;                                         // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MakeupPaint1IconId;                                      // 0x00C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MakeupPaint2IconId;                                      // 0x00D0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BeardIconId;                                             // 0x00E0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HairGradationTypeIconId;                                 // 0x00F0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerkInterlockPassiveSkillInfo
	 * Size -> 0x0014
	 */
	struct FSBPerkInterlockPassiveSkillInfo
	{
	public:
		int32_t                                                    PassiveSkillID;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              EffectiveUniqueHandle;                                   // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7TPG[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PerkId;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    PerkValue1;                                              // 0x000C(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    PerkValue2;                                              // 0x000E(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PassiveSkillPremise;                                     // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNK7[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSearchEnemySetting
	 * Size -> 0x0010
	 */
	struct FSBSearchEnemySetting
	{
	public:
		float                                                      SearchTargetRange;                                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SearchRangeScoreMax;                                     // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchAngle;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SearchAngleScoreMax;                                     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerAimAssistSetting
	 * Size -> 0x0018
	 */
	struct FSBPlayerAimAssistSetting
	{
	public:
		float                                                      AssistTime;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AssistPower;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBSearchEnemySetting                               SearchSetting;                                           // 0x0008(0x0010) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveSkillID
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FSBPassiveSkillID : public FSBEncryptNetSerializeID
	{	};

	/**
	 * ScriptStruct SkyBlue.SBPrevEffectiveImpotantStatusParam
	 * Size -> 0x0001
	 */
	struct FSBPrevEffectiveImpotantStatusParam
	{
	public:
		ESBInvincibleLevel                                         InvincibleLevel;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageEventElementDataForMulticast
	 * Size -> 0x0002
	 */
	struct FSBDamageEventElementDataForMulticast
	{
	public:
		ESBAttribute                                               ElementType;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTakeReaction : 1;                                       // 0x0001(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayHitEffect : 1;                                      // 0x0001(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttackAction : 1;                                       // 0x0001(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageEventElementData
	 * Size -> 0x000E (FullSize[0x0010] - InheritedSize[0x0002])
	 */
	struct FSBDamageEventElementData : public FSBDamageEventElementDataForMulticast
	{
	public:
		unsigned char                                              ElementValue;                                            // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V4SY[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AccumValue;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResultAccumValue;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStunValueCalculation                                    CalculationType;                                         // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0PC0[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileIdentifyHandle
	 * Size -> 0x0010
	 */
	struct FSBProjectileIdentifyHandle
	{
	public:
		TWeakObjectPtr<class APawn>                                Instigator;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   SpawnUniqueID;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageEventGeneralParam
	 * Size -> 0x0008
	 */
	struct FSBDamageEventGeneralParam
	{
	public:
		ESBDamageEventGeneralParam                                 Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NIPU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageEvent
	 * Size -> 0x00F8 (FullSize[0x01A0] - InheritedSize[0x00A8])
	 */
	struct FSBDamageEvent : public FPointDamageEvent
	{
	public:
		int8_t                                                     bIsEncryptionKeyValid;                                   // 0x00A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_T3Y3[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBDamageEventElementData>                   ElementDataList;                                         // 0x00B0(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FSBStatusAilmentHandle>                      StatusAliments;                                          // 0x00C0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W8VH[0x8];                                   // 0x00D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int8_t                                                     EncryptionKey3;                                          // 0x00D8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              Parity4;                                                 // 0x00D9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VEV5[0x6];                                   // 0x00DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBStatusAilmentHandle>                      SelfStatusAliments;                                      // 0x00E0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           ShotDirectionForSideBackAttack;                          // 0x00F0(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBInvincibleAnimation                                     InvincibleAnimationType;                                 // 0x00FC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     GroupId;                                                 // 0x00FD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W7NU[0x2];                                   // 0x00FE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackPowerScale;                                        // 0x0100(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4CM[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              EffectiveDamageCauser;                                   // 0x0108(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Parity3;                                                 // 0x0110(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     HitEffectAngle;                                          // 0x0111(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkillPosition;                                           // 0x0112(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     EncryptionKey1;                                          // 0x0113(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		uint16_t                                                   SkillId;                                                 // 0x0114(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SNU1[0x2];                                   // 0x0116(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBProjectileIdentifyHandle                         ProjectileIdentifyHandle;                                // 0x0118(0x0010) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              BitFlagSerialized4;                                      // 0x0128(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              BitFlagSerialized3;                                      // 0x0129(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CEN4[0x2];                                   // 0x012A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProjectileLimitDamageValue;                              // 0x012C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsProjectileForceLimitDamage;                           // 0x0130(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q0VO[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBDamageEventGeneralParam>                  GeneralParamList;                                        // 0x0138(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		uint16_t                                                   DamageKnockBackDistance;                                 // 0x0148(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DamageKnockBackTime;                                     // 0x014A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Z8YE[0x1];                                   // 0x014B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AttackID;                                                // 0x014C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              BitFlagSerialized6;                                      // 0x0150(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              Parity1;                                                 // 0x0151(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              BitFlagSerialized2;                                      // 0x0152(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CCMJ[0x1];                                   // 0x0153(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Flags;                                                   // 0x0154(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     EncryptionKey2;                                          // 0x0158(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8RPB[0x3F];                                  // 0x0159(0x003F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Parity2;                                                 // 0x0198(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              BitFlagSerialized1;                                      // 0x0199(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bInventoryIndex1;                                        // 0x019A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     EncryptionKey4;                                          // 0x019B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bInvalidDamageFromAbility;                               // 0x019C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              BitFlagSerialized5;                                      // 0x019D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bMissDamageFromAbility;                                  // 0x019E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ESBFieldDamageType                                         FieldDamageType;                                         // 0x019F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct SkyBlue.SBMulticastDotDamageEvent
	 * Size -> 0x0008
	 */
	struct FSBMulticastDotDamageEvent
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInfiniteHitPoint : 1;                                   // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepAlive : 1;                                          // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInstantDeath : 1;                                       // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSubstituteDamageBySelf : 1;                             // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HRBE[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMulticastDrainDamageEvent
	 * Size -> 0x0008
	 */
	struct FSBMulticastDrainDamageEvent
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageEventStunDataForMulticast
	 * Size -> 0x0004
	 */
	struct FSBDamageEventStunDataForMulticast
	{
	public:
		uint16_t                                                   StunValue;                                               // 0x0000(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStunValueCalculation                                    CalculationType;                                         // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ENDH[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageEventCommonFlag
	 * Size -> 0x0030
	 */
	struct FSBDamageEventCommonFlag
	{
	public:
		unsigned char                                              UnknownData_VYXQ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bDownHit;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBadConditionHit;                                        // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHPDamageType;                                           // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttackActionAndWeaponHaveElement;                       // 0x000B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDamageKnockBack;                                        // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuperArmorSucceeded;                                    // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitEffectAngle;                                 // 0x000E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayedHitEffectInLocal;                                 // 0x000F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBackHit;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWeakPointHit;                                           // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCriticalHit;                                            // 0x0012(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDotDamage;                                              // 0x0013(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSubstituteDamageBySelf;                                 // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGutsActivated;                                          // 0x0015(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvincibleSucceeded;                                    // 0x0016(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayInvincibleSucceededEffect;                          // 0x0017(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGuardHit;                                               // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGuardSucceeded;                                         // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGuardKnockBack;                                         // 0x001A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideStunDirectionDown;                              // 0x001B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideStunDirectionKnockBack;                         // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideStunDirectionUp;                                // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayEarthMeltEffect;                                    // 0x001E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayFireMeltEffect;                                     // 0x001F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayIceMeltEffect;                                      // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayThunderMeltEffect;                                  // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayLightMeltEffect;                                    // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayDarknessMeltEffect;                                 // 0x0023(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayIceBreakEffect;                                     // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayStoneBreakEffect;                                   // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayElementSpreadEffect;                                // 0x0026(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideDamageUI;                                           // 0x0027(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoDamageByLevelCoefficient;                             // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoDamageByGuard;                                        // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LZ5I[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMulticastDamageEvent
	 * Size -> 0x0088
	 */
	struct FSBMulticastDamageEvent
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DamageHitStopTime;                                       // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GORK[0x1];                                   // 0x0009(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBDamageEventStunDataForMulticast                  StunData;                                                // 0x000A(0x0004) NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_E71L[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBDamageEventElementDataForMulticast>       ElementDataList;                                         // 0x0010(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              CollisionGroupId;                                        // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     HitEffectAngle;                                          // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZHUI[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantizeNormal                           ShotDirection;                                           // 0x0024(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UPrimitiveComponent>                  HitComponent;                                            // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 ImpactPoint;                                             // 0x0038(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBInvincibleAnimation                                     InvincibleAnimationType;                                 // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkillPosition;                                           // 0x0045(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint16_t                                                   DamageKnockBackDistance;                                 // 0x0046(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DamageKnockBackTime;                                     // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_90ND[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBDamageEventCommonFlag                            BitFlag;                                                 // 0x0050(0x0030) NativeAccessSpecifierPublic
		bool                                                       bSpecialAttack : 1;                                      // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResurrection : 1;                                       // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInfiniteHitPoint : 1;                                   // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepAlive : 1;                                          // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInstantDeath : 1;                                       // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInventoryIndex1 : 1;                                    // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvalidDamageFromAbility : 1;                           // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMissDamageFromAbility : 1;                              // 0x0080(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LPHF[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBFieldDamageType                                         FieldDamageType;                                         // 0x0084(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DUE9[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMulticastDamageEventGeneralParam
	 * Size -> 0x0002
	 */
	struct FSBMulticastDamageEventGeneralParam
	{
	public:
		ESBDamageEventGeneralParam                                 Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     Value;                                                   // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBServerDamageEvent
	 * Size -> 0x0008 (FullSize[0x01A8] - InheritedSize[0x01A0])
	 */
	struct FSBServerDamageEvent : public FSBDamageEvent
	{
	public:
		unsigned char                                              bForceCritical;                                          // 0x01A0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              ParityForServerDamageEvent;                              // 0x01A1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bNoDeactivateSleep;                                      // 0x01A2(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              bNoDeactivateTransform;                                  // 0x01A3(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TJ6B[0x4];                                   // 0x01A4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleGateData
	 * Size -> 0x0020
	 */
	struct FSBDxBattleGateData
	{
	public:
		class FString                                              GateId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapId;                                                   // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleMasterData
	 * Size -> 0x0088
	 */
	struct FSBDxBattleMasterData
	{
	public:
		class FString                                              RaidId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NameId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZZH[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapId;                                                   // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RewardId;                                                // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalRankingGCMultiplier;                                // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClassRankingGCMultiplier;                                // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardGCMultiplier;                                       // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardMostDamageMultiplier;                               // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardInstaneousDumageMultiplier;                         // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardBuffMultiplier;                                     // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardResurrectionMultiplier;                             // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardDebuffMultiplier;                                   // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardGimmickAttackMultiplier;                            // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardLastAttakMultiplier;                                // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardMostTakeHitsMultiplier;                             // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LDA6[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TermId;                                                  // 0x0068(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBDxBattleGateData>                         GateData;                                                // 0x0078(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleNpcInfo
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBBattleNpcInfo : public FTableRowBase
	{
	public:
		class FName                                                npc_id;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P6QD[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMapInfo
	 * Size -> 0x01F0 (FullSize[0x01F8] - InheritedSize[0x0008])
	 */
	struct FSBMapInfo : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMapType                                                 MapType;                                                 // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQXJ[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapName;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SublevelId;                                              // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BGMMapId;                                                // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameMode;                                                // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPlayers;                                              // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeedPlayers;                                             // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMapRegion                                               MapRegion;                                               // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H4LL[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ProcessInfo;                                             // 0x0064(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SupplyInfo;                                              // 0x006C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardInfo;                                              // 0x0074(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TipsImageName;                                           // 0x007C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DungeonImage;                                            // 0x0084(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MapActivator;                                            // 0x008C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EventTerm;                                               // 0x0094(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionType                                             MissionType;                                             // 0x009C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6SH[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TotalPower;                                              // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecommendedBattleScore;                                  // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelSync;                                               // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                QualifyInfo;                                             // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StartPortal;                                             // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DungeonDifficulty;                                       // 0x00C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemySpawnInfo;                                          // 0x00D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemyAttribute;                                          // 0x00D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemyDifficulty;                                         // 0x00E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyBaseLevel;                                          // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QT8L[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EnemyUseId;                                              // 0x00F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBBattleNpcInfo>                            BattleNpc;                                               // 0x0100(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      TimeOfDay;                                               // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimeLimit;                                               // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ExitPortalSpawnTarget;                                   // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TravelMapName;                                           // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TravelPortal;                                            // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RetireMapName;                                           // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RetirePortal;                                            // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActivateRequired;                                      // 0x0168(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9OEZ[0x3];                                   // 0x0169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x016C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EntryConditionId;                                        // 0x0170(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EntryConditionAdventurerRank;                            // 0x0174(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEntryConditionPartyState                                EntryConditionPartyState;                                // 0x0178(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LEUV[0x7];                                   // 0x0179(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBClassType>                                       EntryConditionClassType;                                 // 0x0180(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        EntryConditionClearQuest;                                // 0x0190(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    EntryConditionSubClassLv;                                // 0x01A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EntryConditionSubClassBonus;                             // 0x01A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TipsCategory;                                            // 0x01A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxFloor;                                                // 0x01B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TN5V[0x4];                                   // 0x01BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SiteUrl;                                                 // 0x01C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStackBEnableType                                        StackBEnableType;                                        // 0x01D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JDMZ[0x3];                                   // 0x01D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HelpMatchingCategoryId;                                  // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DropTreasureID;                                          // 0x01D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MissionEntryCondition;                                   // 0x01DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBMapParameterSync                                 ParameterSync;                                           // 0x01E0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerVoiceVariables
	 * Size -> 0x0018
	 */
	struct FSBPlayerVoiceVariables
	{
	public:
		class UAkAudioEvent*                                       Event;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharacterGender                                         Gender;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O3LG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VoiceId;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAkEventLOD                                              LOD;                                                     // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RRJV[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUnlockStampData
	 * Size -> 0x0018
	 */
	struct FSBUnlockStampData
	{
	public:
		int32_t                                                    StampId;                                                 // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2ZAL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    Timestamp;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FavoriteId;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBUnlockStampCategoryData
	 * Size -> 0x0020
	 */
	struct FSBUnlockStampCategoryData
	{
	public:
		int32_t                                                    CategoryId;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_53EE[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    Timestamp;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBUnlockStampData>                          StampList;                                               // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStampMasterData
	 * Size -> 0x0020
	 */
	struct FSBStampMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InitialGrant;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameTextId;                                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6S5[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStampCategoryMasterData
	 * Size -> 0x0020
	 */
	struct FSBStampCategoryMasterData
	{
	public:
		int32_t                                                    CategoryId;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    CategoryNameTextId;                                      // 0x0004(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InitialGrant;                                            // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E9CC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBStampMasterData>                          StampMasterList;                                         // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChangeItemAmountParam
	 * Size -> 0x0020
	 */
	struct FSBChangeItemAmountParam
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemIndex;                                               // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9Y86[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CharaEquipItemCharaCreateInfo
	 * Size -> 0x0028
	 */
	struct FCharaEquipItemCharaCreateInfo
	{
	public:
		ESBCharaEquipType                                          EquipType;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKLK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PartsName;                                               // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorIndex;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDecayedWeaponData
	 * Size -> 0x0038
	 */
	struct FSBDecayedWeaponData
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I3VM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UniqueId;                                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OldItemId;                                               // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEquipped;                                             // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HEW4[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDeletedCostumeData
	 * Size -> 0x0048
	 */
	struct FSBDeletedCostumeData
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AT2X[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UniqueId;                                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorId;                                                 // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ZLP[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEquipped;                                             // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharaEquipType                                          EquipType;                                               // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TK3Z[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDeletedImagineData
	 * Size -> 0x0038
	 */
	struct FSBDeletedImagineData
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FM07[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UniqueId;                                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UIMC[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEquipped;                                             // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OVSD[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDeletedMountData
	 * Size -> 0x0038
	 */
	struct FSBDeletedMountData
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BXVZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UniqueId;                                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DJ8U[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiryDateTime;                                          // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEquipped;                                             // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VLVO[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBExpiredEquipmentCharacterCreationData
	 * Size -> 0x00F0
	 */
	struct FSBExpiredEquipmentCharacterCreationData
	{
	public:
		class FString                                              HatName;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UpperName;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LowerName;                                               // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GlovesName;                                              // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ShoesName;                                               // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UnderwearName;                                           // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryHeadTopName;                                    // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryHeadMidName;                                    // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryHeadLowName;                                    // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryHeadEarName;                                    // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryRightFingerName;                                // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryLeftFingerName;                                 // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryEngagementName;                                 // 0x00C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryBodyBackName;                                   // 0x00D0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AccessoryHipBackName;                                    // 0x00E0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBExpiredEquipmentData
	 * Size -> 0x0130
	 */
	struct FSBExpiredEquipmentData
	{
	public:
		TArray<struct FSBDecayedWeaponData>                        DecayedWeapons;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDeletedCostumeData>                       DeletedCostumes;                                         // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDeletedImagineData>                       DeletedImagines;                                         // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDeletedMountData>                         DeletedMounts;                                           // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBExpiredEquipmentCharacterCreationData            CharacterCreationData;                                   // 0x0040(0x00F0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRankingRewardData
	 * Size -> 0x0040
	 */
	struct FSBRankingRewardData
	{
	public:
		class FString                                              Ranking_Id;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Content_Id;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               Class_Type;                                              // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3EZM[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    reward_id;                                               // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_55M0[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Reward_Text;                                             // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBOwnItemListContainerData
	 * Size -> 0x0020
	 */
	struct FSBOwnItemListContainerData
	{
	public:
		int32_t                                                    Capacity;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                Items;                                                   // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsCapacityBoost;                                         // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IB3G[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BoostCapacity;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBOwnItemBoxParseData
	 * Size -> 0x0008
	 */
	struct FSBOwnItemBoxParseData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D6U4[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBItemBoxResultItemData
	 * Size -> 0x0018
	 */
	struct FSBItemBoxResultItemData
	{
	public:
		ESBRewardItemType                                          RewardItemType;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WXX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ID;                                                      // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDuplicate;                                              // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XD3P[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SellerItemID;                                            // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SaleAmount;                                              // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStorageItemBoxResultData
	 * Size -> 0x0118
	 */
	struct FSBStorageItemBoxResultData
	{
	public:
		TArray<struct FOwnItemInfo>                                DirtyItems;                                              // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                ExpiredItems;                                            // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnEmoteData>                             EmoteData;                                               // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            MoneyData;                                               // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BpData;                                                  // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnItemBoxParseData>                      AchievementData;                                         // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnItemBoxParseData>                      StampSingle;                                             // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnItemBoxParseData>                      StampSet;                                                // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnItemBoxParseData>                      ImagineRecipe;                                           // 0x0080(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnItemBoxParseData>                      CraftRecipe;                                             // 0x0090(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterToken>                           Token;                                                   // 0x00A0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDecorationData>                             AdventurerCardDecorations;                               // 0x00B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T648[0x10];                                  // 0x00C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBItemBoxResultItemData>                    BagItems;                                                // 0x00D0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBItemBoxResultItemData>                    BagEquipments;                                           // 0x00E0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBItemBoxResultItemData>                    StorageItems;                                            // 0x00F0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBItemBoxResultItemData>                    OtherItems;                                              // 0x0100(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    GameServerError;                                         // 0x0110(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ZEY[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLockItemData
	 * Size -> 0x0020
	 */
	struct FSBLockItemData
	{
	public:
		int32_t                                                    storage_no;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  item_type;                                               // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UZN1[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    item_id;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    locked;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              unique_id;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStorageItemAPIResponseData
	 * Size -> 0x0060
	 */
	struct FSBStorageItemAPIResponseData
	{
	public:
		TArray<struct FOwnItemInfo>                                DirtyItems;                                              // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBActiveItemData>                           ActiveItems;                                             // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      InactiveItems;                                           // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                ExpiredItems;                                            // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    AddExp;                                                  // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBExtraExpParse                                    ClassExtraExp;                                           // 0x0044(0x0018) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F1DV[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.FieldActorPickupNotifyInfo
	 * Size -> 0x0090
	 */
	struct FFieldActorPickupNotifyInfo
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GatherPointId;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           GatheredAt;                                              // 0x0020(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           RespawnAt;                                               // 0x0028(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Money;                                                   // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WBM7[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOwnItemInfo>                                PassiveDropItems;                                        // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                IgnoredItems;                                            // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    OverLimitCurrencies;                                     // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OverLimitBPCoin;                                         // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLiquidMemoryInfo>                         LiquidMemoryInfos;                                       // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsLiquidMemoryInfoValid;                                // 0x0070(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRarity                                       GatherType;                                              // 0x0071(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDayTime                                                 TimeZone;                                                // 0x0072(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBonusAdd;                                             // 0x0073(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7MZH[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterToken>                           EventTokens;                                             // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    EmoteActionDate;                                         // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0629[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDiffItemInfo
	 * Size -> 0x0010
	 */
	struct FSBDiffItemInfo
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W36K[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DiffAmount;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsIdentified;                                           // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsMissionBagItem;                                        // 0x000D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_604J[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAddItemData
	 * Size -> 0x0014
	 */
	struct FSBAddItemData
	{
	public:
		int32_t                                                    storage_no;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  item_type;                                               // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GA70[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    item_id;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       identified;                                              // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XFYV[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStorageItemData
	 * Size -> 0x0020
	 */
	struct FSBStorageItemData
	{
	public:
		int32_t                                                    storage_no;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  item_type;                                               // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5WB[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    item_id;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              unique_id;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChangeCostumeData
	 * Size -> 0x0038
	 */
	struct FSBChangeCostumeData
	{
	public:
		int32_t                                                    storage_no;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              unique_id;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCostumeData                                        CostumeData;                                             // 0x0018(0x0020) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStorageItemBoxData
	 * Size -> 0x0028
	 */
	struct FSBStorageItemBoxData
	{
	public:
		int32_t                                                    storage_no;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    item_id;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              unique_id;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            selected_element;                                        // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.FieldActorBuffPointNotifyInfo
	 * Size -> 0x0040
	 */
	struct FFieldActorBuffPointNotifyInfo
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FreeBuffPointId;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           InteractAt;                                              // 0x0020(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ESBFreeBuffPointType>                               BuffTypes;                                               // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FDateTime                                           EndBuffAt;                                               // 0x0038(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfileBgImageInfo
	 * Size -> 0x0028
	 */
	struct FPlayerProfileBgImageInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhotoType                                                 PhotoType;                                               // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_556U[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BgImagePath;                                             // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BgImageSelectedAreaPos;                                  // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BgImageSize;                                             // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyMemberInfo
	 * Size -> 0x0020
	 */
	struct FSBPartyMemberInfo
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4R0E[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BattleScore;                                             // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActive;                                                // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJML[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyRecruitData
	 * Size -> 0x00D8
	 */
	struct FSBPartyRecruitData
	{
	public:
		class FString                                              LeaderUserID;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeaderCharacterID;                                       // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeaderCharacterName;                                     // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Contents;                                                // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SubContents;                                             // 0x0034(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Purpose;                                                 // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<bool>                                               Purpose_List;                                            // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Atmosphere;                                              // 0x0050(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYHO[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<bool>                                               Atmosphere_List;                                         // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    BattleScoreStandard;                                     // 0x0068(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScoreScope;                                        // 0x006C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Target_Anyone;                                           // 0x0070(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Target_Friend;                                           // 0x0071(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Target_Team;                                             // 0x0072(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YU8R[0x5];                                   // 0x0073(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RecruitId;                                               // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FreeComment;                                             // 0x0088(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CreateTime;                                              // 0x0098(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZGU2[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           CreateTimeUtc;                                           // 0x00A0(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBPartyMemberInfo>                          PtMemberInfo;                                            // 0x00A8(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x00B8(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GatherPointLotResult
	 * Size -> 0x000C
	 */
	struct FGatherPointLotResult
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRewardType                                   Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IL0E[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGatherPointEntryInfo
	 * Size -> 0x0070
	 */
	struct FSBGatherPointEntryInfo
	{
	public:
		class UClass*                                              TargetClass;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ObjectId;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tag;                                                     // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGatherHeight                                              Position;                                                // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhysicalSurface                                           GatherSoundSurface;                                      // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KDGI[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0030(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		ESBTreasureBoxRarity                                       GatherRarity;                                            // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LWHJ[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GatherPointId;                                           // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugSpawn;                                             // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFiexedRespawn;                                         // 0x0069(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsReturnCity;                                            // 0x006A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsGathered;                                              // 0x006B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNotSpawnEffect;                                        // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F3CT[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGatherPointLotSimulateResult
	 * Size -> 0x0010
	 */
	struct FSBGatherPointLotSimulateResult
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRewardType                                   Type;                                                    // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRarity                                       GatherRarity;                                            // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Q5A[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGatherPointEmoteInfo
	 * Size -> 0x0050
	 */
	struct FSBGatherPointEmoteInfo
	{
	public:
		class FString                                              TagName;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          InTransform;                                             // 0x0010(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HP82[0xC];                                   // 0x0044(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFreeBuffPointEntryInfo
	 * Size -> 0x0080
	 */
	struct FSBFreeBuffPointEntryInfo
	{
	public:
		class UClass*                                              TargetClass;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ObjectId;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tag;                                                     // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KYW6[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0030(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		ESBFreeBuffPointType                                       Type;                                                    // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFreeBuffPointView                                       PointView;                                               // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GNY[0x2];                                   // 0x0062(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FreeBuffPointId;                                         // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsReturnCity;                                            // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInteracted;                                            // 0x0069(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XHU8[0x2];                                   // 0x006A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                NpcSpawnerTag;                                           // 0x006C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugSpawn;                                             // 0x0074(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L8BR[0xB];                                   // 0x0075(0x000B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.AlbumImageInfoData
	 * Size -> 0x0038
	 */
	struct FAlbumImageInfoData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagePath;                                               // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ThumbnailPath;                                           // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUsed;                                                  // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPNR[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LikeCount;                                               // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfilePhotoTrimmingInfo
	 * Size -> 0x0050
	 */
	struct FPlayerProfilePhotoTrimmingInfo
	{
	public:
		EPhotoType                                                 TrimmingType;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PD7H[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PhotoModeImageId;                                        // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TrimmingCoordinate;                                      // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0DO[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImagePath;                                               // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ThumbnailPath;                                           // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LikeCount;                                               // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEnableLike;                                            // 0x004C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ELVE[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfileClassData
	 * Size -> 0x0008
	 */
	struct FPlayerProfileClassData
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DDRZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClassExp;                                                // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfileClassListData
	 * Size -> 0x0010
	 */
	struct FPlayerProfileClassListData
	{
	public:
		TArray<struct FPlayerProfileClassData>                     DataList;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MilitaryRecordData
	 * Size -> 0x0008
	 */
	struct FMilitaryRecordData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CommunicateSettingInfo
	 * Size -> 0x0108
	 */
	struct FCommunicateSettingInfo
	{
	public:
		class FString                                              Comment;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          TensionTag;                                              // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JFWF[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterId;                                             // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterShortId;                                        // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterName;                                           // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T6JL[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBActivityData>                             Activities;                                              // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ESBProfilePublicSettingType                                GlobalPublicSetting;                                     // 0x0060(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBProfilePublicSettingType                                BattleInfoPublicSetting;                                 // 0x0061(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBProfilePublicSettingType                                ActivitiesPublicSetting;                                 // 0x0062(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9GJQ[0x1];                                   // 0x0063(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AchievementSelected;                                     // 0x0064(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPlayerProfilePhotoTrimmingInfo>             PhotoTrimmingInfo;                                       // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              LocationName;                                            // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ZoneId;                                                  // 0x0088(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlayerProfileClassListData                         ClassDataList;                                           // 0x0098(0x0010) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       SendCardFromParty;                                       // 0x00A8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SendCardReceiveCard;                                     // 0x00A9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9H30[0x2];                                   // 0x00AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ReceiveLikePoint;                                        // 0x00AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x00B0(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AwardIdList;                                             // 0x00D0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    AdventureCardFrameId;                                    // 0x00E0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterCardFrameId;                                    // 0x00E4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventureCardBackGroundColorId;                          // 0x00E8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHidden;                                                // 0x00EC(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MUTG[0x3];                                   // 0x00ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMilitaryRecordData>                         MilitaryRecordData;                                      // 0x00F0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsMilitaryDataOpen;                                      // 0x0100(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RHN1[0x7];                                   // 0x0101(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBOverLimit
	 * Size -> 0x0020
	 */
	struct FSBOverLimit
	{
	public:
		int32_t                                                    Money;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GC;                                                      // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoseOrb;                                                 // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBTokenOverLimit>                           Token;                                                   // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardToken
	 * Size -> 0x000C
	 */
	struct FSBRewardToken
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    After;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonClearAddRewardInfo
	 * Size -> 0x0088
	 */
	struct FSBDungeonClearAddRewardInfo
	{
	public:
		int32_t                                                    AddMoney;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddExp;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddGC;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RVW4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOwnItemInfo>                                DirtyItems;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        RewardedIds;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBOverLimit                                        OverLimit;                                               // 0x0030(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBExtraExpParse                                    ClassExtraExp;                                           // 0x0050(0x0018) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSBRewardToken>                              Token;                                                   // 0x0068(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            MedalIDs;                                                // 0x0078(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidReward
	 * Size -> 0x0120
	 */
	struct FSBRaidReward
	{
	public:
		struct FSBDungeonClearAddRewardInfo                        TotalRankReward;                                         // 0x0000(0x0088) BlueprintVisible, NativeAccessSpecifierPublic
		struct FSBDungeonClearAddRewardInfo                        ClassRankReward;                                         // 0x0088(0x0088) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FSBDungeonClearAddRewardInfo>                Award;                                                   // 0x0110(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxReward
	 * Size -> 0x0220
	 */
	struct FSBDxReward
	{
	public:
		struct FSBDungeonClearAddRewardInfo                        RewardsBreakObject;                                      // 0x0000(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDungeonClearAddRewardInfo                        RewardsContribution;                                     // 0x0088(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDungeonClearAddRewardInfo                        RewardsRanking;                                          // 0x0110(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDungeonClearAddRewardInfo                        RewardsClassRanking;                                     // 0x0198(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillParam
	 * Size -> 0x0018
	 */
	struct FSBSkillParam
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillId;                                                 // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillLV;                                                 // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLetter
	 * Size -> 0x0028
	 */
	struct FSBLetter
	{
	public:
		TArray<struct FOwnItemInfo>                                SendItems;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                LostItems;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SkyCoin;                                                 // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GCKZ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterRewardControl
	 * Size -> 0x0014
	 */
	struct FSBMasterRewardControl
	{
	public:
		float                                                      LunoMultiplier;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpMultiplier;                                           // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialRateBoost;                                       // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialAmountMultiplier;                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialAmountAddition;                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterGuildBonus
	 * Size -> 0x000C
	 */
	struct FSBMasterGuildBonus
	{
	public:
		class FName                                                RewardId;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Percent;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonClearRewardInfo
	 * Size -> 0x0590
	 */
	struct FSBDungeonClearRewardInfo
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankingValue;                                            // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BestScore;                                               // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CompleteNum;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DailyBoostsNum;                                          // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BGP0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBDungeonClearAddRewardInfo                        RewardsClear;                                            // 0x0018(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDungeonClearAddRewardInfo                        RewardsRank;                                             // 0x00A0(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDungeonClearAddRewardInfo                        RewardsPlus;                                             // 0x0128(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBRaidReward                                       RewardsRaid;                                             // 0x01B0(0x0120) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBDxReward                                         RewardsDx;                                               // 0x02D0(0x0220) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                DropItems;                                               // 0x04F0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBSkillParam>                               TacticalAbilityB;                                        // 0x0500(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AchievementIdList;                                       // 0x0510(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBLetter                                           Letter;                                                  // 0x0520(0x0028) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBMasterRewardControl                              RewardControl;                                           // 0x0548(0x0014) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3YAC[0x4];                                   // 0x055C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBMasterGuildBonus>                         TeamBonus;                                               // 0x0560(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       isWareHouseAbilities;                                    // 0x0570(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBuffItemBonusLuno;                                     // 0x0571(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBuffItemBonusEXP;                                      // 0x0572(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBuffItemBonusGC;                                       // 0x0573(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CYX0[0x4];                                   // 0x0574(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            IsBuffTokenIDList;                                       // 0x0578(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    IncreasedTreasureBoxCount;                               // 0x0588(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S5N2[0x4];                                   // 0x058C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonCompleteState
	 * Size -> 0x0014
	 */
	struct FSBDungeonCompleteState
	{
	public:
		class FName                                                DungeonId;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonCompleteType                                     Type;                                                    // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E3LQ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PassageStep;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CompleteNum;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTokenTreasureBoxRewardInfo
	 * Size -> 0x0040
	 */
	struct FSBTokenTreasureBoxRewardInfo
	{
	public:
		int32_t                                                    RemainingTreasureBoxDrawCount;                           // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2BN9[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOwnItemInfo>                                DropItems;                                               // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBLetter                                           Letter;                                                  // 0x0018(0x0028) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugParameter
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FSBDebugParameter : public FTableRowBase
	{
	public:
		class FName                                                ParameterName;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   TextTableAsset;                                          // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TitleTextId;                                             // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ToolTipTextId;                                           // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDebugMenuType                                           Type;                                                    // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QFGB[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      InitialValue;                                            // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              WidgetClass[0x28];                                       // 0x0040(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class FString                                              ToolTip;                                                 // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       enable;                                                  // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEditorOnly;                                             // 0x0079(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReadOnly;                                               // 0x007A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMP5[0x25];                                  // 0x007B(0x0025) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTreasureBoxLotResult
	 * Size -> 0x0018
	 */
	struct FSBTreasureBoxLotResult
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRewardType                                   Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZGYK[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OverLimitAmount;                                         // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OverLimitCurrencies;                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OverLimitBPCoin;                                         // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerPresetEquipItem
	 * Size -> 0x0028
	 */
	struct FSBPlayerPresetEquipItem
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6YN4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UniqueId;                                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Change;                                                  // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5W4B[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Type;                                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SlotId;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerPresetCarryStates                                 CarryStates;                                             // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NGPA[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBurderingDummyData
	 * Size -> 0x03E8
	 */
	struct FSBBurderingDummyData
	{
	public:
		unsigned char                                              DummyData[0x3E8];                                        // 0x0000(0x03E8) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerCachedProperty
	 * Size -> 0x0070
	 */
	struct FSBPlayerCachedProperty
	{
	public:
		float                                                      HitPoint;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicPoint;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stamina;                                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill1;                                                  // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill2;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill3;                                                  // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill4;                                                  // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Special;                                                 // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FightingStyle;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResurrectionPenalty;                                     // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImagineArtsRecastTime;                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImagineArts2RecastTime;                                  // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SubArtsRecastTime;                                       // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts1RecastTime;                                         // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts2RecastTime;                                         // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts3RecastTime;                                         // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts4RecastTime;                                         // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts5RecastTime;                                         // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts6RecastTime;                                         // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts7RecastTime;                                         // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts8RecastTime;                                         // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IKPI[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FrailAilmentName;                                        // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrailAilmentRemainTime;                                  // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MountImagineRideFlag;                                    // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JK0M[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerPresetEquipList
	 * Size -> 0x0018
	 */
	struct FSBPlayerPresetEquipList
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DataIndex;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerPresetType                                        PresetType;                                              // 0x0015(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05VF[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckSendDataBase
	 * Size -> 0x0010
	 */
	struct FSBCheatCheckSendDataBase
	{
	public:
		unsigned char                                              UnknownData_2AS9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckSendData_OnCastSkill
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSBCheatCheckSendData_OnCastSkill : public FSBCheatCheckSendDataBase
	{
	public:
		unsigned char                                              UnknownData_ZSVW[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerCastSkillCheatInfo
	 * Size -> 0x001C
	 */
	struct FSBPlayerCastSkillCheatInfo
	{
	public:
		float                                                      MaxStamina;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreStamina;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConsumeStamina;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NeedStamina;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AfterStamina;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     ChargeLevel;                                             // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3CPX[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChargeTime;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerRepStateCheatInfo
	 * Size -> 0x0008
	 */
	struct FSBPlayerRepStateCheatInfo
	{
	public:
		float                                                      Stamina;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDash : 1;                                               // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQOD[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PlayerAwardData
	 * Size -> 0x0010
	 */
	struct FPlayerAwardData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N3WL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           CreateAt;                                                // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerOwnedRoomData
	 * Size -> 0x0008
	 */
	struct FSBPlayerOwnedRoomData
	{
	public:
		int32_t                                                    RoomId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAuthorityParty;                                        // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAuthorityTeam;                                         // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAuthorityFriend;                                       // 0x0006(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5ZG2[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTelopDataParam
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBTelopDataParam : public FTableRowBase
	{
	public:
		ESBTelopPlayType                                           PlayType;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTelopType                                               TelopType;                                               // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LJUE[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextId;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P7L6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       SE;                                                      // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTelopPlayParam
	 * Size -> 0x0060
	 */
	struct FSBTelopPlayParam
	{
	public:
		ESBTelopPlayType                                           PlayType;                                                // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RHOB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Name;                                                    // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8L4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                STR;                                                     // 0x0010(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                SubStr;                                                  // 0x0028(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValueMax;                                                // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BGIndex;                                                 // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Position;                                                // 0x004C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          RewardItemType;                                          // 0x0054(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D05Y[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ID;                                                      // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x005C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySpawnInfo
	 * Size -> 0x0020
	 */
	struct FSBEnemySpawnInfo
	{
	public:
		int32_t                                                    SpawnableEnemyNum;                                       // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmptySlotNum;                                            // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReservedSlotNum;                                         // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UsingSlotNum;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnedEnemyNum;                                         // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyCharacterNum;                                       // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuddyNum;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MokujinNum;                                              // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBClassChangeSyncData
	 * Size -> 0x0038
	 */
	struct FSBClassChangeSyncData
	{
	public:
		ESBClassType                                               Role;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9LCA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharaEquipInfo                                     Equip;                                                   // 0x0008(0x0010) NativeAccessSpecifierPublic
		struct FEquipedArtsListInfo                                EquipedArts;                                             // 0x0018(0x0010) NativeAccessSpecifierPublic
		TArray<struct FCharaSkillMasteryInfo>                      SkillMastery;                                            // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CharaConfigInfo
	 * Size -> 0x0002
	 */
	struct FCharaConfigInfo
	{
	public:
		ESBOperateMode                                             OperateMode;                                             // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       OperateModeHelpVisibility;                               // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattlePlayerEquipWeaponInfo
	 * Size -> 0x0060
	 */
	struct FSBDhcBattlePlayerEquipWeaponInfo
	{
	public:
		int32_t                                                    WeaponID;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponLevel;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackPower;                                             // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttributePower;                                          // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UniqueId;                                                // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterWeaponPerkData>                  PerkList;                                                // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    UsedPerkSlot;                                            // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PerkUnlockNum;                                           // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpecialPerkID;                                           // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpecialPerkValue;                                        // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackBNum;                                               // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNewFormat;                                            // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0XN7[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MainPerkPickId;                                          // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MainPerkId;                                              // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWeaponPerkRarity                                        MainPerkRarity;                                          // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BOAN[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MainPerkMainEffectLevel;                                 // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MainPerkSubEffectLevel;                                  // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerkId;                                               // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerkEffectLevel;                                      // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattleAttributeResistanceInfo
	 * Size -> 0x0008
	 */
	struct FSBDhcBattleAttributeResistanceInfo
	{
	public:
		ESBAttribute                                               Attribute;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LJ63[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ResistanceValue;                                         // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattlePlayerStatusInfo
	 * Size -> 0x0040
	 */
	struct FSBDhcBattlePlayerStatusInfo
	{
	public:
		int32_t                                                    STR;                                                     // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VIT;                                                     // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DEX;                                                     // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    INT;                                                     // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MND;                                                     // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackPower;                                             // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalRate;                                            // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalPower;                                           // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefensePower;                                            // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoveryPower;                                           // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBDhcBattleAttributeResistanceInfo>         AttributeResistanceInfos;                                // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    HitPoint;                                                // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Stamina;                                                 // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattlePlayerEquipImagineInfo
	 * Size -> 0x0030
	 */
	struct FSBDhcBattlePlayerEquipImagineInfo
	{
	public:
		int32_t                                                    ImagineId;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImagineLevel;                                            // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImagineSlotId;                                           // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UniqueId;                                                // 0x000C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PerkId;                                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackBNum;                                               // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNewFormat;                                            // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZTU3[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PerkPickId;                                              // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PerkMainEffectLevel;                                     // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PerkSubEffectLevel;                                      // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattlePlayerEquipsInfo
	 * Size -> 0x0080
	 */
	struct FSBDhcBattlePlayerEquipsInfo
	{
	public:
		struct FSBDhcBattlePlayerEquipWeaponInfo                   EquipWeaponInfo;                                         // 0x0000(0x0060) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FSBDhcBattlePlayerEquipImagineInfo>          EquipBattleImagineInfos;                                 // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDhcBattlePlayerEquipImagineInfo>          EquipEnhanceImagineInfos;                                // 0x0070(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattlePlayerEquipArtsInfo
	 * Size -> 0x000C
	 */
	struct FSBDhcBattlePlayerEquipArtsInfo
	{
	public:
		int32_t                                                    ArtsType;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ArtsId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ArtsSlotId;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattleHighScoreInfo
	 * Size -> 0x00F8
	 */
	struct FSBDhcBattleHighScoreInfo
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIQ8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClassLevel;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HSN5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GameMode;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HighScore;                                               // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_38H6[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBDhcBattlePlayerStatusInfo                        PlayerStatusInfo;                                        // 0x0028(0x0040) BlueprintVisible, NativeAccessSpecifierPublic
		struct FSBDhcBattlePlayerEquipsInfo                        PlayerEquipsInfo;                                        // 0x0068(0x0080) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FSBDhcBattlePlayerEquipArtsInfo>             PlayerEquipArtsInfos;                                    // 0x00E8(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDhcBattleInfo
	 * Size -> 0x0010
	 */
	struct FSBDhcBattleInfo
	{
	public:
		TArray<struct FSBDhcBattleHighScoreInfo>                   AttackCheckerHighScoreInfos;                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonProcess
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBDungeonProcess : public FTableRowBase
	{
	public:
		class FName                                                process_id;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonProcessStatus                                    process_status;                                          // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonClearCondition                                   clear_type;                                              // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RPS7[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              clear_parameter;                                         // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              scripts;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              exec_script_code;                                        // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonRewardItem
	 * Size -> 0x0008
	 */
	struct FSBDungeonRewardItem
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonRewardInfo
	 * Size -> 0x0020
	 */
	struct FSBDungeonRewardInfo
	{
	public:
		TArray<struct FSBDungeonRewardItem>                        RewardItems;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    RewardMoney;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BravePoint;                                              // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassExp;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonEvaluation                                       Evaluation;                                              // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XLGC[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventShopExchangeHistory
	 * Size -> 0x000C
	 */
	struct FSBEventShopExchangeHistory
	{
	public:
		int32_t                                                    ShopId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProductId;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeNum;                                             // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventShopPurchaseItemInfo
	 * Size -> 0x0030
	 */
	struct FSBEventShopPurchaseItemInfo
	{
	public:
		int32_t                                                    MasterIndex;                                             // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemIndex;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemAmount;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenIndex;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenPrice;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CCU[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemName;                                                // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumOfProducts;                                           // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BVNC[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventShopProduct
	 * Size -> 0x0070
	 */
	struct FSBEventShopProduct
	{
	public:
		int32_t                                                    MasterId;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventId;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemSetId;                                               // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_35N7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemName;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SellType;                                                // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeedRank;                                                // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrencyType;                                            // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenAmount;                                             // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemDescription;                                         // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextureId;                                               // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HQHF[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           StartDate;                                               // 0x0050(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0058(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResetType;                                               // 0x0060(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeLimit;                                           // 0x0064(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StockNum;                                                // 0x0068(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAchieve;                                               // 0x006C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeLearned;                                            // 0x006D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5TTU[0x2];                                   // 0x006E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ExchangeShopItemInfo
	 * Size -> 0x0028
	 */
	struct FExchangeShopItemInfo
	{
	public:
		class FString                                              ShopId;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IPV6[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemIndex;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemNum;                                                 // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BravePointCost;                                          // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeLimit;                                           // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ExchangeShopExchangingItemInfo
	 * Size -> 0x0030
	 */
	struct FExchangeShopExchangingItemInfo
	{
	public:
		struct FExchangeShopItemInfo                               ExchangeItemInfo;                                        // 0x0000(0x0028) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeNum;                                             // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFLU[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMailAttachment
	 * Size -> 0x0040
	 */
	struct FSBMailAttachment
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          attachment_type;                                         // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S615[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attachment_id;                                           // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsReceived;                                              // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKUA[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    stackb_num;                                              // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ZSB[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ReceivedAt;                                              // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ExtraData;                                               // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMailExtraParameter
	 * Size -> 0x0030
	 */
	struct FSBMailExtraParameter
	{
	public:
		struct FDateTime                                           ExpirationDate_;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              URL_;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CampaignID_;                                             // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3MMQ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SerialCode_;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMailData
	 * Size -> 0x0188 (FullSize[0x0190] - InheritedSize[0x0008])
	 */
	struct FSBMailData : public FTableRowBase
	{
	public:
		class FString                                              mail_id;                                                 // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              from_name;                                               // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              from_user_id;                                            // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              from_character_id;                                       // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              received_character_name;                                 // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              transed_character_name;                                  // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              transed_user_id;                                         // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              transed_character_id;                                    // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              head;                                                    // 0x0088(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Body;                                                    // 0x0098(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status;                                                  // 0x00A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsProtected;                                             // 0x00AC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Priority;                                                // 0x00AD(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Transferable;                                            // 0x00AE(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAccountMail;                                           // 0x00AF(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tags;                                                    // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMailType                                                MailType;                                                // 0x00C0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K120[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBMailAttachment                                   attachments;                                             // 0x00C8(0x0040) BlueprintVisible, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredTime;                                             // 0x0108(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ReceivedTime;                                            // 0x0110(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBMailExtraParameter                               ExtraParameter;                                          // 0x0118(0x0030) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ESBMailPlatformType                                        MailPlatformType;                                        // 0x0148(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBppIrredeemable;                                       // 0x0149(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5D29[0x6];                                   // 0x014A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlatformInfo                                     from_PlatformInfo;                                       // 0x0150(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     transed_PlatformInfo;                                    // 0x0170(0x0020) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMailParser
	 * Size -> 0x0030
	 */
	struct FSBMailParser
	{
	public:
		TArray<struct FSBMailData>                                 MailDataList;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                AttachmentList;                                          // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    unread_count;                                            // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    total_mail_count;                                        // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_mail_capacity;                                       // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    filtered_total_mail_count;                               // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTransableCharacterData
	 * Size -> 0x00A8
	 */
	struct FSBTransableCharacterData
	{
	public:
		class FString                                              user_id;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              character_id;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0034(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TIFX[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IconName;                                                // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          Tag;                                                     // 0x0058(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3JTJ[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OnlineStatus;                                            // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0060(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       isFriend;                                                // 0x0080(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isPartyMember;                                           // 0x0081(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsPartyLeader;                                           // 0x0082(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7JCT[0x5];                                   // 0x0083(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastLogin;                                               // 0x0088(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isPs_only;                                               // 0x0098(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_76CB[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           FriendRegistratedDate;                                   // 0x00A0(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.BattleMemberLevelSyncInfo
	 * Size -> 0x0060
	 */
	struct FBattleMemberLevelSyncInfo
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharaClassInfo>                             CharaClassInfoList;                                      // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                Weapons;                                                 // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                ImagineActives;                                          // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                ImaginePassives;                                         // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SendAdventureCardResult
	 * Size -> 0x0008
	 */
	struct FSendAdventureCardResult
	{
	public:
		bool                                                       bIsFriendMax;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCannotSend;                                             // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTargetFriendMax;                                        // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMyFriendMax;                                            // 0x0003(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCharacterExist;                                         // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBlock;                                                // 0x0005(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAlreadySend;                                          // 0x0006(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPSOnlyDiff;                                           // 0x0007(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfileMenuDetailCharaEquipItemInfo
	 * Size -> 0x0018
	 */
	struct FPlayerProfileMenuDetailCharaEquipItemInfo
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9RC1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UniqueId;                                                // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfileMenuDetailCharaEquipInfo
	 * Size -> 0x0010
	 */
	struct FPlayerProfileMenuDetailCharaEquipInfo
	{
	public:
		TArray<struct FPlayerProfileMenuDetailCharaEquipItemInfo>  EquipItems;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.BattleMemberInfoSend
	 * Size -> 0x0020
	 */
	struct FBattleMemberInfoSend
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerCharacterCardData
	 * Size -> 0x00B0
	 */
	struct FSBPlayerCharacterCardData
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerRank;                                          // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0038(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ZLU[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClassLevel;                                              // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerCardFrameId;                                   // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerCardBgColorId;                                 // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FaceFrameId;                                             // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q7WZ[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AwardIds;                                                // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       isFriend;                                                // 0x0060(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsLikeSendable;                                          // 0x0061(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IFRC[0x2];                                   // 0x0062(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OnlineStatus;                                            // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHidden;                                                // 0x0068(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_12UO[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImageUrl;                                                // 0x0070(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TrimmingCoordinate;                                      // 0x0080(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0088(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TAV4[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0090(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ContactListData
	 * Size -> 0x00C0
	 */
	struct FContactListData
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterName;                                           // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FaceIconUrl;                                             // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0044(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFriend;                                               // 0x0045(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x0046(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VXSO[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ShotComment;                                             // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LeftDay;                                                 // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I2NE[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TimesLeft;                                               // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          TensionTag;                                              // 0x0070(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsOnline;                                                // 0x0071(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanSendCard;                                             // 0x0072(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSendLike;                                               // 0x0073(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OnlineStatus;                                            // 0x0074(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0078(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bPartyMember;                                            // 0x0098(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPartyLeader;                                            // 0x0099(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UDSO[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastLogin;                                               // 0x00A0(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           LastExchangeDate;                                        // 0x00B0(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           FriendRegistratedDate;                                   // 0x00B8(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerProfileMenuDetailData
	 * Size -> 0x0468
	 */
	struct FPlayerProfileMenuDetailData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LocationName;                                            // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GK3S[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlayerId;                                                // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterShortId;                                        // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ZoneId;                                                  // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Active;                                                  // 0x0078(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KWAE[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOwnItemInfo                                        EquipItemWepaon;                                         // 0x0080(0x0150) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                EquipItemCostumes;                                       // 0x01D0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                EquipItemAccessories;                                    // 0x01E0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                EquipItemUnderWear;                                      // 0x01F0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FPlayerProfileMenuDetailCharaEquipInfo              CharaEquipInfo;                                          // 0x0200(0x0010) BlueprintVisible, NativeAccessSpecifierPublic
		ESBProfilePublicSettingType                                GlobalPublicSetting;                                     // 0x0210(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QFT2[0x7];                                   // 0x0211(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ContentId;                                               // 0x0218(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AchievementSelected;                                     // 0x0228(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QMSI[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerProfilePhotoTrimmingInfo>             PhotoTrimmingInfo;                                       // 0x0230(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              SessionId;                                               // 0x0240(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameContentId;                                           // 0x0250(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W66D[0x10];                                  // 0x0260(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OnlineStatus;                                            // 0x0270(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KDWG[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerProfileClassListData                         ClassDataList;                                           // 0x0278(0x0010) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerRank;                                          // 0x0288(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalPower;                                              // 0x028C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSendLIke;                                              // 0x0290(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          TensionTag;                                              // 0x0291(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isFriend;                                                // 0x0292(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDoneSendAdvCard;                                       // 0x0293(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsCanSendAdvCard;                                        // 0x0294(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3CZ9[0x3];                                   // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GuildName;                                               // 0x0298(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GuildId;                                                 // 0x02A8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x02B8(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    Warning;                                                 // 0x02D8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S75M[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AwardIdList;                                             // 0x02E0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    AdventureCardFrameId;                                    // 0x02F0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FaceFrameId;                                             // 0x02F4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BackGroundColorId;                                       // 0x02F8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_999I[0x4];                                   // 0x02FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOwnItemInfo                                        MountImagineData;                                        // 0x0300(0x0150) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FMilitaryRecordData>                         MilitaryRecordData;                                      // 0x0450(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsMilitaryDataOpen;                                      // 0x0460(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_THHO[0x7];                                   // 0x0461(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.LikeSend
	 * Size -> 0x0020
	 */
	struct FLikeSend
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.UpdateCardData
	 * Size -> 0x0068
	 */
	struct FUpdateCardData
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTensionTagType                                          TensionTag;                                              // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateTensionTag;                                       // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SendCardFormParty;                                       // 0x0022(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateSendCardFormParty;                                // 0x0023(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SendCardReceiveCard;                                     // 0x0024(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateSendCardReceiveCard;                              // 0x0025(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NoOverride;                                              // 0x0026(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateNoOverride;                                       // 0x0027(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ShortComment;                                            // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateShortComment;                                     // 0x0038(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateBackGroundColor;                                  // 0x0039(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFP3[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BackGroundColorId;                                       // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateAdventureCardFrame;                               // 0x0040(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3PA8[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AdventureCardFrameId;                                    // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateFaceFrame;                                        // 0x0048(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_910Y[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FaceFrameId;                                             // 0x004C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateIsHidden;                                         // 0x0050(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsHidden;                                               // 0x0051(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateIsMilitaryRecordHidden;                           // 0x0052(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMilitaryRecordHidden;                                 // 0x0053(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateIsAwardData;                                      // 0x0054(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WOX[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AwardIdList;                                             // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChatUIMessage
	 * Size -> 0x0070
	 */
	struct FSBChatUIMessage
	{
	public:
		struct FDateTime                                           Timestamp;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SenderPlayerId;                                          // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SenderCharacterId;                                       // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                SenderName;                                              // 0x0028(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              ReceiverPlayerId;                                        // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MessageBody;                                             // 0x0050(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ESBChatLogType                                             Type;                                                    // 0x0068(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBChatLogOption                                           Option;                                                  // 0x0069(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSystemLogDetailType                                     DetailType;                                              // 0x006A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsCloseArea;                                             // 0x006B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDead;                                                  // 0x006C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUnread;                                                // 0x006D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           PrivilegeType;                                           // 0x006E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1O98[0x1];                                   // 0x006F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDirectChatUIMessage
	 * Size -> 0x0050
	 */
	struct FSBDirectChatUIMessage
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                CharacterName;                                           // 0x0020(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    WindowIndex;                                             // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SRM1[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBChatUIMessage>                            ChatLogMessList;                                         // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAestheShopCourseMasterData
	 * Size -> 0x0050
	 */
	struct FSBAestheShopCourseMasterData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXEO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CourseIconName;                                          // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeCompleted;                                          // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PE45[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TicketId;                                                // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TicketConsumeAmount;                                     // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryGender;                                          // 0x002C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryPreset;                                          // 0x002D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryAppearance;                                      // 0x002E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryDefaultVoice;                                    // 0x002F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryExtraVoice;                                      // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryFaceTypeAndBody;                                 // 0x0031(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryHair;                                            // 0x0032(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategorySkinAndFace;                                     // 0x0033(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryEyeParts;                                        // 0x0034(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryFaceParts;                                       // 0x0035(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAestheShopCourseUsableCategory                            CategoryMakeup;                                          // 0x0036(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2YUV[0x1];                                   // 0x0037(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventTermId;                                             // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsListVisible;                                           // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSeasonPass;                                            // 0x0049(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKFO[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAestheShopPartsMasterData
	 * Size -> 0x0048
	 */
	struct FSBAestheShopPartsMasterData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5UX7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IconID;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AssetId;                                                 // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActive;                                                // 0x002C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NT3S[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventTermId;                                             // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharacterGender                                         Gender;                                                  // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAestheShopCharaPartsIconType                            PartsIconType;                                           // 0x0041(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAestheShopCharaFaceType                                 FaceType;                                                // 0x0042(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAestheShopCharaBodyType                                 BodyType;                                                // 0x0043(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAestheShopCharaHairType                                 HairType;                                                // 0x0044(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAestheShopCharaPartsAndParamEditType                    EditType;                                                // 0x0045(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4M6W[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCostumeExtraColorMasterData
	 * Size -> 0x0030
	 */
	struct FSBCostumeExtraColorMasterData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostumeId;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostumeColorId;                                          // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostumeColorSaturation;                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostumeColorValue;                                       // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInActive;                                              // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_80HG[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventTermId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.EquipableClass
	 * Size -> 0x0010
	 */
	struct FEquipableClass
	{
	public:
		TArray<bool>                                               Classes;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterCostume
	 * Size -> 0x0088
	 */
	struct FSBMasterCostume
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRarity                                                  Rarity;                                                  // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CJTK[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    Name;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemLevel;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerSells;                                        // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerBuys;                                         // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackInventoryNum;                                       // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackStorageNum;                                         // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProtectorCategory                                         ProtectorCategory;                                       // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEquipableGender                                           EquipableGender;                                         // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D22Y[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FEquipableClass                                     EquipableClass;                                          // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    CostumePartsId;                                          // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ORKO[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CostumePartsName;                                        // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostumePartsColorId;                                     // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostumePartsColorSaturation;                             // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostumePartsColorValue;                                  // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAllowedToChangeColor;                                  // 0x0064(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNVD[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaterialId;                                              // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationMinutes;                                         // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsCompositeWear;                                         // 0x0080(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SF7C[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.GuildRank
	 * Size -> 0x0008
	 */
	struct FGuildRank
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeedExp;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryEfficacyValueTableData
	 * Size -> 0x0008
	 */
	struct FSBLiquidMemoryEfficacyValueTableData
	{
	public:
		int32_t                                                    ClassLevel;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EfficacyValue;                                           // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryEfficacyParameter
	 * Size -> 0x0030
	 */
	struct FSBLiquidMemoryEfficacyParameter
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseCount;                                                // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EfficacyValue;                                           // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJMP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBLiquidMemoryEfficacyValueTableData>       EfficacyValueTable;                                      // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    EfficacyValueDescId;                                     // 0x0020(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    EfficacyDescId;                                          // 0x0024(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OccurancyRate;                                           // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cost;                                                    // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryAccumulateConditionParameter
	 * Size -> 0x0028
	 */
	struct FSBLiquidMemoryAccumulateConditionParameter
	{
	public:
		ESBLiquidMemoryAccumulateConditionType                     ConditionType;                                           // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_76AS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    ConditionTypeNameId;                                     // 0x0004(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLiquidMemoryAccumulationType                            AccumulationType;                                        // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LPVR[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ConditionDescId;                                         // 0x0010(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccumulateBottleNum;                                     // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RandomAccumulateTableId;                                 // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryMasterData
	 * Size -> 0x0038
	 */
	struct FSBLiquidMemoryMasterData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BottleAccumulateLimit;                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLiquidMemoryCategory                                    Category;                                                // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLiquidMemoryEfficacyType                                EfficacyType;                                            // 0x0009(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_19Q4[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    EfficacyNameId;                                          // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLiquidMemoryEfficacyValueType                           EfficacyValueType;                                       // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJ5R[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBLiquidMemoryEfficacyParameter>            EfficacyParameters;                                      // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBLiquidMemoryAccumulateConditionParameter> AccumulatedConditionParameters;                          // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonEntryConditionEquipCondition
	 * Size -> 0x0014
	 */
	struct FSBDungeonEntryConditionEquipCondition
	{
	public:
		ESBDungeonEntryConditionItemType                           ItemType;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JNZL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonEntryConditionAppearanceType                     AppearanceType;                                          // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0009(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DC39[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KillerPerkId;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbilityPerkId;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonEntryConditionMasterData
	 * Size -> 0x0030
	 */
	struct FSBDungeonEntryConditionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TDWD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBDungeonEntryConditionEquipCondition>      EquipConditionOr;                                        // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDungeonEntryConditionEquipCondition>      EquipConditionAnd;                                       // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		ESBDungeonEntryConditionElementType                        ElementType;                                             // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TTT9[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEquipmentSeries
	 * Size -> 0x0008
	 */
	struct FSBEquipmentSeries
	{
	public:
		ESBEquipmentSeriesItemType                                 ItemType;                                                // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7RL9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EquipmentId;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterEquipmentSeries
	 * Size -> 0x0018
	 */
	struct FSBMasterEquipmentSeries
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UGJD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBEquipmentSeries>                          EquipmentList;                                           // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventTermsData
	 * Size -> 0x0030
	 */
	struct FSBEventTermsData
	{
	public:
		struct FDateTime                                           StartTime;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndTime;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    onDaysStart;                                             // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    onDaysEnd;                                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimespan                                           onHoursStart;                                            // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimespan                                           onHoursEnd;                                              // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    onWeekDayBit;                                            // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEventTermsCheckType                                     CheckType;                                               // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEventTermsDateType                                      DateCheckType;                                           // 0x002D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HourCheck;                                               // 0x002E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8A4M[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventTermsMasterData
	 * Size -> 0x0020
	 */
	struct FSBEventTermsMasterData
	{
	public:
		class FString                                              TermId;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEventTermsData>                           Terms;                                                   // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFusionItem
	 * Size -> 0x0018
	 */
	struct FSBMasterFusionItem
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeedSlotCount;                                           // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbilityEffectPickupId;                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SupportItemId;                                           // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SupportItemAmount;                                       // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZQW[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestDestructibleObjectMasterData
	 * Size -> 0x0024
	 */
	struct FSBInterruptQuestDestructibleObjectMasterData
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DataId;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInterruptQuestDestructibleType                            Type;                                                    // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9PO[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0014(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Roll;                                                    // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterMainAbilityTickets
	 * Size -> 0x0010
	 */
	struct FSBMasterMainAbilityTickets
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseTokenNum;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMainAbilityTicketType                                   TicketType;                                              // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QFAN[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterMountImagine
	 * Size -> 0x0070
	 */
	struct FSBMasterMountImagine
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQV5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MountId;                                                 // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameTextId;                                              // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStamina;                                              // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L51E[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BGM;                                                     // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerSells;                                        // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNotSell;                                                // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNotDelete;                                              // 0x003D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C0X7[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationMinutes;                                         // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsStackBEnable;                                          // 0x0058(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GCKX[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StackBTypeId;                                            // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleGateData
	 * Size -> 0x0020
	 */
	struct FSBRaidBattleGateData
	{
	public:
		class FString                                              GateId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapId;                                                   // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleMasterData
	 * Size -> 0x0080
	 */
	struct FSBRaidBattleMasterData
	{
	public:
		class FString                                              RaidId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapId;                                                   // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RewardId;                                                // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalRankingGCMultiplier;                                // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClassRankingGCMultiplier;                                // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardGCMultiplier;                                       // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardMostDamageMultiplier;                               // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardInstaneousDumageMultiplier;                         // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardBuffMultiplier;                                     // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardResurrectionMultiplier;                             // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardDebuffMultiplier;                                   // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardGimmickAttackMultiplier;                            // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardLastAttakMultiplier;                                // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AwardMostTakeHitsMultiplier;                             // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3WFW[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TermId;                                                  // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBRaidBattleGateData>                       GateData;                                                // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBResearchTeamMasterData_Buff
	 * Size -> 0x0020
	 */
	struct FSBResearchTeamMasterData_Buff
	{
	public:
		class FString                                              MapId;                                                   // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IncRateMaterial;                                         // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IncRateDropTresurebox;                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IncNumMaterial;                                          // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecipeId;                                                // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBResearchTeamMasterData_CostTime
	 * Size -> 0x0020
	 */
	struct FSBResearchTeamMasterData_CostTime
	{
	public:
		class FString                                              MapId;                                                   // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cost;                                                    // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Duration;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CoolTime;                                                // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardBoostLiquidMemoryMasterData
	 * Size -> 0x0014
	 */
	struct FSBRewardBoostLiquidMemoryMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LiquidMemoryId;                                          // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BottleAccumulateLimitBonus;                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardBoostMissionMasterData
	 * Size -> 0x0028
	 */
	struct FSBRewardBoostMissionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DugeonRewardId;                                          // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LunoMultiplier;                                          // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpMultiplier;                                           // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialRateBoost;                                       // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialAmountMultiplier;                                // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialAmountAddition;                                  // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterRewardLotteryGroupsRewards
	 * Size -> 0x0038
	 */
	struct FSBMasterRewardLotteryGroupsRewards
	{
	public:
		int32_t                                                    item_id;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Critical_Rate;                                           // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot1_Rate;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot2_Rate;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot3_Rate;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot4_Rate;                                              // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot1_Rate_If_Critical;                                  // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot2_Rate_If_Critical;                                  // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot3_Rate_If_Critical;                                  // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot4_Rate_If_Critical;                                  // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Perk_Pick_ID;                                            // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Min_Level;                                               // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Max_Level;                                               // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterRewardLotteryGroups
	 * Size -> 0x0018
	 */
	struct FSBMasterRewardLotteryGroups
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          Reward_Type;                                             // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardLotteryGroupsPickType                             Pick_Type;                                               // 0x0005(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_INJU[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBMasterRewardLotteryGroupsRewards>         Rewards;                                                 // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterSeason
	 * Size -> 0x0048
	 */
	struct FSBMasterSeason
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    SeasonNameTextId;                                        // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartDate;                                               // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ReceiveOnlyStartDate;                                    // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ReceiveOnlyEndDate;                                      // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankupPoint;                                             // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankupFree;                                              // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankupPaid;                                              // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxRank;                                                 // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopEmancipationRank;                                    // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PointMax;                                                // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PickupUnit;                                              // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    GuidePaidPlanTextId;                                     // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterSeasonPass
	 * Size -> 0x0040
	 */
	struct FSBMasterSeasonPass
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeasonId;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSeasonPassPlanState                                     Type;                                                    // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NFHM[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NeedFree;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeedPaid;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RewardRank;                                              // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnlockPaidQuest;                                        // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnlockPremiumAesthe;                                    // 0x0019(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N0MN[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RewardId;                                                // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    PlanNameTextId;                                          // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescriptionTextId;                                       // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttentionTextId;                                         // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z13G[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterSeasonPassReward
	 * Size -> 0x002C
	 */
	struct FSBMasterSeasonPassReward
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeasonId;                                                // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSeasonPassRewardType                                    Type;                                                    // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZSGH[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardId;                                                // 0x0014(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemNameId;                                              // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ItemImageId;                                             // 0x0024(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MasterToken
	 * Size -> 0x0058
	 */
	struct FMasterToken
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenPossessionType                                     PossessionType;                                          // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenCategory                                           Category;                                                // 0x000D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7TPT[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenPurchaseType                                       PurchaseType;                                            // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9NKF[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxAmount;                                               // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C61U[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlaceToConsume;                                          // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenRecoveryType                                       RecoveryType;                                            // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenDayOfWeek                                          RecoveryDayOfWeek;                                       // 0x0041(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EY9L[0x2];                                   // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RecoveryMin;                                             // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoverySec;                                             // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoveryAmount;                                          // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenOverflowType                                       OverflowType;                                            // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DKBL[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.MasterTokenUse
	 * Size -> 0x0008
	 */
	struct FMasterTokenUse
	{
	public:
		int32_t                                                    TokenID;                                                 // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenPlaceToConsumeType                                 PlaceToConsume;                                          // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SL4T[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityCollectionMasterData
	 * Size -> 0x003C
	 */
	struct FSBWarehouseAbilityCollectionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecipeId;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemyId;                                                 // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GameContentId;                                           // 0x0014(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EventTermId;                                             // 0x001C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LunoBonus;                                               // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpBonus;                                                // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bImmediateAppraisal;                                     // 0x002C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6E97[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ItemDropRateBonus;                                       // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TreasureAppearanceRateBonus;                             // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityMissionMasterData
	 * Size -> 0x0014
	 */
	struct FSBWarehouseAbilityMissionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecipeId;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DugeonRewardId;                                          // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityProductionMasterData
	 * Size -> 0x0030
	 */
	struct FSBWarehouseAbilityProductionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecipeId;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWarehouseAbilityProductionType                          Type;                                                    // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9AL3[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CraftRecipeId;                                           // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuccessRateBonus;                                        // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpBonus;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracyBonus;                                           // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RefiningCostReduction;                                   // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CraftCostReduction;                                      // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityRecipeMasterData
	 * Size -> 0x0020
	 */
	struct FSBWarehouseAbilityRecipeMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Description;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWarehouseAbilityCategory                                Category;                                                // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8VN8[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MapId;                                                   // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityStoringMasterData
	 * Size -> 0x0020
	 */
	struct FSBWarehouseAbilityStoringMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecipeId;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmountBonus;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxStackIncrease;                                        // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EventTermId;                                             // 0x0014(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityTokenMasterData
	 * Size -> 0x0014
	 */
	struct FSBWarehouseAbilityTokenMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoveryBonusAmount;                                     // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityZoneMasterData
	 * Size -> 0x0014
	 */
	struct FSBWarehouseAbilityZoneMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecipeId;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GameContentId;                                           // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerkAmplitude
	 * Size -> 0x0014
	 */
	struct FSBPerkAmplitude
	{
	public:
		int32_t                                                    EffectRank;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EffectValue;                                             // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rate;                                                    // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPerkAmplitudes
	 * Size -> 0x0018
	 */
	struct FSBPerkAmplitudes
	{
	public:
		TArray<struct FSBPerkAmplitude>                            Data;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    MaxEffectRank;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalWeight;                                             // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterWeaponPerkLottery
	 * Size -> 0x0058
	 */
	struct FSBMasterWeaponPerkLottery
	{
	public:
		class FString                                              TableId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWeaponPerkRarity                                        Rarity;                                                  // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9KW5[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PerkId;                                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P3Q9[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPerkAmplitudes                                   MainAmplitudes;                                          // 0x0020(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBPerkAmplitudes                                   SubAmplitudes;                                           // 0x0038(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      Rate;                                                    // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PH3N[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterWeaponPerkLotteriesData
	 * Size -> 0x0080
	 */
	struct FSBMasterWeaponPerkLotteriesData
	{
	public:
		class FString                                              TableId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMasterWeaponPerkLottery>                  Data;                                                    // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LVBX[0x60];                                  // 0x0020(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSyntheAbilityData
	 * Size -> 0x0020
	 */
	struct FSBSyntheAbilityData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Perk1Value1;                                             // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Perk2Value1;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Perk1Value2;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Perk2Value2;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Accuracy;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSyntheAbilityPickUp
	 * Size -> 0x0030
	 */
	struct FSBSyntheAbilityPickUp
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxAccuracy;                                             // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalWeight;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4NRR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBSyntheAbilityData>                        DataList;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                              RateList;                                                // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityEffectMasterData
	 * Size -> 0x0024
	 */
	struct FSBAbilityEffectMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbilityID;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ability_parts1_Value1;                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ability_parts1_Value2;                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ability_parts2_Value1;                                   // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ability_parts2_Value2;                                   // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LotteryGroupId;                                          // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBPPtExchangeMasterData
	 * Size -> 0x0018
	 */
	struct FSBBPPtExchangeMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TermId;                                                  // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          ItemType;                                                // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7HLN[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeCount;                                           // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFlatShopItemMasterData
	 * Size -> 0x0078
	 */
	struct FSBFlatShopItemMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IsEnabled;                                               // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopItemId;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemName;                                                // 0x0010(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemPosition;                                            // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HGLM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            CategoryId;                                              // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       UseCoupon;                                               // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2OI[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PurchaseLimitId;                                         // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FluctuationCount;                                        // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextId;                                                  // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ViewType;                                                // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemDescription;                                         // 0x0044(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextureId;                                               // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BonusId;                                                 // 0x004C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MailFormatId;                                            // 0x0050(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ribbon;                                                  // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PeriodRibbon;                                            // 0x005C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartDate;                                               // 0x0060(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0068(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CautionGender;                                           // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A05E[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBPPtShopItemMasterData
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	struct FSBBPPtShopItemMasterData : public FSBFlatShopItemMasterData
	{
	public:
		struct FSBTextTableHash                                    ItemCaution;                                             // 0x0078(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    CoinCaution;                                             // 0x007C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SpFlags;                                                 // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFlatShopPurchaseLimitMasterData
	 * Size -> 0x0018
	 */
	struct FSBFlatShopPurchaseLimitMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LimitId;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FluctuationCount;                                        // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionId;                                             // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Price;                                                   // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LimitCount;                                              // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBPPtShopPurchaseLimitMasterData
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FSBBPPtShopPurchaseLimitMasterData : public FSBFlatShopPurchaseLimitMasterData
	{	};

	/**
	 * ScriptStruct SkyBlue.SBCountryConfigMasterData
	 * Size -> 0x0048
	 */
	struct FSBCountryConfigMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    separate_paid_free;                                      // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    currency_history;                                        // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    registration_age_verification;                           // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    expired_amount_amortization;                             // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    paid_only_product;                                       // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gasha_rate;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    specified_commercial_transactions_act;                   // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              time_zone;                                               // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimespan                                           time_difference;                                         // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           date_change_time;                                        // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWeekChangeDayOfWeek                                     week_change_day_of_week;                                 // 0x0040(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22PI[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCouponRewardID
	 * Size -> 0x0018
	 */
	struct FSBCouponRewardID
	{
	public:
		int32_t                                                    RewardLevel;                                             // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseCount;                                                // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RewardId;                                                // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCouponMasterData
	 * Size -> 0x0038
	 */
	struct FSBCouponMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerRank;                                          // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCouponQuestType                                         QuestType;                                               // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ATXX[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    QuestCompleteCount;                                      // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBCouponRewardID>                           RewardId;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    ReductionRate;                                           // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationDays;                                            // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartAt;                                                 // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndAt;                                                   // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCurrencyShopItemMasterData
	 * Size -> 0x0000 (FullSize[0x0078] - InheritedSize[0x0078])
	 */
	struct FSBCurrencyShopItemMasterData : public FSBFlatShopItemMasterData
	{	};

	/**
	 * ScriptStruct SkyBlue.SBCurrencyShopPurchaseLimitMasterData
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FSBCurrencyShopPurchaseLimitMasterData : public FSBFlatShopPurchaseLimitMasterData
	{	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyData
	 * Size -> 0x0010
	 */
	struct FSBEnemyData
	{
	public:
		class FName                                                ContentId;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemyId;                                                 // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEntryAbilityData
	 * Size -> 0x0008
	 */
	struct FSBEntryAbilityData
	{
	public:
		ESBAbrityType                                              AbrityType;                                              // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2QF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AbrityId;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDropData
	 * Size -> 0x0028
	 */
	struct FSBDropData
	{
	public:
		ESBRewardItemType                                          ItemType;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MV14[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinNumOfAcq;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumOfAcq;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StepSize;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DropRate;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MCTI[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventEnemyDropMasterData
	 * Size -> 0x0050
	 */
	struct FSBEventEnemyDropMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZVCE[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TermId;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEnemyData>                                EnemyList;                                               // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    EntryConditionId;                                        // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EF2P[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBEntryAbilityData>                         EntryAbilitySet;                                         // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDropData>                                 DropList;                                                // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventShopItemMasterData
	 * Size -> 0x0050
	 */
	struct FSBEventShopItemMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventId;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       enable;                                                  // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6OFV[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemSetId;                                               // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemName;                                                // 0x0010(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SellType;                                                // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeedRank;                                                // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrencyType;                                            // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenAmount;                                             // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemDescription;                                         // 0x002C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextureId;                                               // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXZN[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           StartDate;                                               // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0040(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResetType;                                               // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeLimit;                                           // 0x004C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventShopItemSetMasterData
	 * Size -> 0x0034
	 */
	struct FSBEventShopItemSetMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProductId;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnitNum;                                                 // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk1;                                                // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk2;                                                // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk3;                                                // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk4;                                                // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk5;                                                // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorId;                                                 // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventShopMasterData
	 * Size -> 0x0058
	 */
	struct FSBEventShopMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Type;                                                    // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Order;                                                   // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       enable;                                                  // 0x000D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YB5[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Banner[0x28];                                            // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FDateTime                                           StartDate;                                               // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0040(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TokenList;                                               // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventShopRealGoodsMasterData
	 * Size -> 0x0010
	 */
	struct FSBEventShopRealGoodsMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CampaignId;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ProductNameTextId;                                       // 0x0008(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ProductDescTextId;                                       // 0x000C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GuildRankUnlockMaster
	 * Size -> 0x0020
	 */
	struct FGuildRankUnlockMaster
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    TextId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescID;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q6V4[0x14];                                  // 0x000C(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBHelpMatchingModeInfo
	 * Size -> 0x0028
	 */
	struct FSBHelpMatchingModeInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CXZZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Description;                                             // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MenuImage;                                               // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EntryConditionAdventurerRank;                            // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHelpMatchingRequiredInfo
	 * Size -> 0x0010
	 */
	struct FSBHelpMatchingRequiredInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ModeId;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLvMin;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScoreMin;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHelpMatchingRewardInfo
	 * Size -> 0x0020
	 */
	struct FSBHelpMatchingRewardInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ModeId;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdvRankMin;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GX60[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SearchName;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterEventChallengeQuestDrop
	 * Size -> 0x0048
	 */
	struct FSBMasterEventChallengeQuestDrop
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EntryConditionId;                                        // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_53FC[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBEntryAbilityData>                         EntryAbilitySet;                                         // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBDropData>                                 DropList;                                                // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionEntryConditionSet
	 * Size -> 0x0028
	 */
	struct FSBMissionEntryConditionSet
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1GMA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBClassType>                                       ClassType;                                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FName>                                        ClearQuest;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNetworkCafeBuffsMasterData
	 * Size -> 0x000C
	 */
	struct FSBNetworkCafeBuffsMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOutGameBuffType                                           BuffType;                                                // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ERZ3[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPaymentLimitMasterData
	 * Size -> 0x0010
	 */
	struct FSBPaymentLimitMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AgeFrom;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AgeTo;                                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValueLimit;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCondition
	 * Size -> 0x001C
	 */
	struct FSBCondition
	{
	public:
		int32_t                                                    ConditionId;                                             // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TargetType1;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TargetType2;                                             // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Min;                                                     // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Max;                                                     // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CompId;                                                  // 0x0014(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPurchaseConditionMasterData
	 * Size -> 0x0078
	 */
	struct FSBPurchaseConditionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O71V[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCondition>                                AdventurerRank;                                          // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCondition>                                ClassLv;                                                 // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCondition>                                Appearance;                                              // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCondition>                                Mission;                                                 // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCondition>                                Quest;                                                   // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCondition>                                PlayDays;                                                // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCondition>                                Season;                                                  // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRmShopCategory
	 * Size -> 0x000C
	 */
	struct FSBRmShopCategory
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Type;                                                    // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRmShopMasterData
	 * Size -> 0x0048
	 */
	struct FSBRmShopMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Type;                                                    // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Name;                                                    // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Description;                                             // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Banner[0x28];                                            // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FSBRmShopCategory>                           Category;                                                // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRoseOrbShopItemMasterData
	 * Size -> 0x0060
	 */
	struct FSBRoseOrbShopItemMasterData
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0008(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Price;                                                   // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tax;                                                     // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount_Paid;                                             // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount_Free;                                             // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PurchaseLimit;                                           // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PurchaseStock;                                           // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SpFlags;                                                 // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextureId;                                               // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Description;                                             // 0x003C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DetailDescription;                                       // 0x0040(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ribbon;                                                  // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PeriodRibbon;                                            // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BonusId;                                                 // 0x004C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartDate;                                               // 0x0050(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0058(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassShopItemMasterData
	 * Size -> 0x0008 (FullSize[0x0080] - InheritedSize[0x0078])
	 */
	struct FSBSeasonPassShopItemMasterData : public FSBFlatShopItemMasterData
	{
	public:
		int32_t                                                    SeasonId;                                                // 0x0078(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3NSG[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassShopPurchaseLimitMasterData
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FSBSeasonPassShopPurchaseLimitMasterData : public FSBFlatShopPurchaseLimitMasterData
	{
	public:
		int32_t                                                    RequiredRank;                                            // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredPoints;                                          // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFlatShopItemSetMasterData
	 * Size -> 0x003C
	 */
	struct FSBFlatShopItemSetMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopItemId;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemCount;                                               // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxRerity;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rerity;                                                  // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk1;                                                // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk2;                                                // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk3;                                                // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk4;                                                // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubPerk5;                                                // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorId;                                                 // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBImagineHyouiAbility
	 * Size -> 0x0038
	 */
	struct FSBStackBImagineHyouiAbility
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3F7E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              pattern_id;                                              // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stackb_num;                                              // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ability_type;                                            // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ability_scale;                                           // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    min_weapon_level;                                        // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_weapon_level;                                        // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    battle_score;                                            // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    desc_stackboost;                                         // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponKillerPerkPickMasterData
	 * Size -> 0x0048
	 */
	struct FSBWeaponKillerPerkPickMasterData
	{
	public:
		class FName                                                Table_Id;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Perk_Id;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Perk_Pick_ID;                                            // 0x000C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Pick_Table_Id;                                           // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Success_Min_Value;                                       // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Success_Max_Value;                                       // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Big_Success_Min_Value;                                   // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Big_Success_Max_Value;                                   // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterWeaponPerkData>                  Perk_Data;                                               // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponLevelStatusMasterData
	 * Size -> 0x0028
	 */
	struct FSBWeaponLevelStatusMasterData
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ap;                                                      // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cp;                                                      // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    STR;                                                     // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VIT;                                                     // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DEX;                                                     // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    INT;                                                     // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MND;                                                     // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Attribute;                                               // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Special;                                                 // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardPanelParamMasterData
	 * Size -> 0x0050
	 */
	struct FSBAdventureBoardPanelParamMasterData
	{
	public:
		int32_t                                                    PanelId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BoardId;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           UIPos;                                                   // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdventureBoardPanelType                                 Type;                                                    // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1G63[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MissionId;                                               // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredCnt;                                             // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L955[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        RewardIdList;                                            // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            NextPanelList;                                           // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardParamMasterData
	 * Size -> 0x0078
	 */
	struct FSBAdventureBoardParamMasterData
	{
	public:
		int32_t                                                    BoardId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V3XA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VersionId;                                               // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameId;                                                  // 0x0018(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IconID;                                                  // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdventureBoardType                                      Type;                                                    // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HSXV[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        CompleteRewardIdList;                                    // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              ChallengeTermId;                                         // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AcceptanceTermId;                                        // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0058(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KZI6[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAdventureBoardPanelParamMasterData>       PanelParamList;                                          // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescID;                                                  // 0x0074(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardMissionParamMasterData
	 * Size -> 0x00A8
	 */
	struct FSBAdventureBoardMissionParamMasterData
	{
	public:
		class FString                                              MissionId;                                               // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestType                                        Type;                                                    // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQYD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              QuestID;                                                 // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              QuestGroupId;                                            // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameId;                                                  // 0x0038(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3M6I[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapId;                                                   // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EnemyId;                                                 // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestItemType                                    ItemType;                                                // 0x0060(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HLT9[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemIdString;                                            // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0078(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMissionQuestPlaceType                                   PlaceType;                                               // 0x0079(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XZC7[0x6];                                   // 0x007A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BuffId;                                                  // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CountBonus;                                              // 0x0090(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DORW[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CountBonusTermId;                                        // 0x0098(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventurerRankMasterData
	 * Size -> 0x0030
	 */
	struct FSBAdventurerRankMasterData
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZ1C[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AdventureBoardIdList;                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    DistributeAdventureBoardId;                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_26IL[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      GameContentIds;                                          // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CraftSlotRate
	 * Size -> 0x0020
	 */
	struct FCraftSlotRate
	{
	public:
		int32_t                                                    Slot1BaseRate;                                           // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot2BaseRate;                                           // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot3BaseRate;                                           // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot4BaseRate;                                           // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot1BonusRate;                                          // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot2BonusRate;                                          // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot3BonusRate;                                          // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot4BonusRate;                                          // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CraftNeedItems
	 * Size -> 0x000C
	 */
	struct FCraftNeedItems
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRecepiItemType                                          CItemType;                                               // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQP3[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Num;                                                     // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CraftMasterData
	 * Size -> 0x0088
	 */
	struct FCraftMasterData
	{
	public:
		int32_t                                                    RecepiId;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsItem;                                                  // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRecepiItemType                                          CItemType;                                               // 0x0005(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_95Y4[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OutItemId;                                               // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OutItemNum;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseTicketUnit;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BonusRate;                                               // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GrateSuccessGrantsFloor;                                 // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GrateSuccessGrantsCeil;                                  // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Money;                                                   // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Difficulty;                                              // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAutoRelease;                                           // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TL6V[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KillerPerkPickId;                                        // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCraftSlotRate                                      SlotRate;                                                // 0x0048(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FCraftNeedItems>                             NeedItems;                                               // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEmoteMasterData
	 * Size -> 0x0028
	 */
	struct FSBEmoteMasterData
	{
	public:
		int32_t                                                    EmoteId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameTextId;                                              // 0x0004(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    LogTextMyselfTextId;                                     // 0x000C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    LogTextOthersTextId;                                     // 0x0010(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InitialGrant;                                            // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFangTokenMasterData
	 * Size -> 0x000C
	 */
	struct FSBFangTokenMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTokenEffectType                                         EffectType;                                              // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KLPF[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EffectValue;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryAccumulateTokenInfo
	 * Size -> 0x0014
	 */
	struct FSBLiquidMemoryAccumulateTokenInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LiquidMemoryId;                                          // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLiquidMemoryAccumulateTokenType                         Type;                                                    // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKJ3[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumberOfAccumulated;                                     // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterDungeonRankedReward
	 * Size -> 0x0018
	 */
	struct FSBMasterDungeonRankedReward
	{
	public:
		class FName                                                MapId;                                                   // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonEvaluation                                       Evaluation;                                              // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AC77[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaximumValue;                                            // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DungeonRewardSearchName;                                 // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFreeBuffBuffSorting
	 * Size -> 0x0008
	 */
	struct FSBMasterFreeBuffBuffSorting
	{
	public:
		ESBFreeBuffPointType                                       Buff_Type;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZCES[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BuffRate;                                                // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFreeBuffLotRate
	 * Size -> 0x0040
	 */
	struct FSBMasterFreeBuffLotRate
	{
	public:
		ESBFreeBuffPointView                                       Buffpoint_View;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A7U5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Use_CCD;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMasterFreeBuffBuffSorting>                Buff_Sorting;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Rate;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ISYG[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Term_Id;                                                 // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFreeBuffPoint
	 * Size -> 0x0038
	 */
	struct FSBMasterFreeBuffPoint
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XNRU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBMasterFreeBuffLotRate>                    Lot_Rate;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       Enable_Flag;                                             // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Monday;                                                  // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Tuesday;                                                 // 0x001A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Wendneday;                                               // 0x001B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Thursday;                                                // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Friday;                                                  // 0x001D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Saturday;                                                // 0x001E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Sunday;                                                  // 0x001F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           Start_date;                                              // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           End_date;                                                // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Respawn_rate;                                            // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_16W7[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterImagine
	 * Size -> 0x00B8
	 */
	struct FSBMasterImagine
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBImagineCategoryType                                     ImagineType;                                             // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2J7G[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    Name;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rarity;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttribute                                               Attribute;                                               // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EquipPosition1;                                          // 0x0019(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EquipPosition2;                                          // 0x001A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EquipPosition3;                                          // 0x001B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EquipPosition4;                                          // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EquipPosition5;                                          // 0x001D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VAUO[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ParamType;                                               // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImagineArts;                                             // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PerkType;                                                // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerSells;                                        // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNoSale;                                                // 0x0054(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDisallowRefining;                                      // 0x0055(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDisallowFusion;                                        // 0x0056(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAccounting;                                            // 0x0057(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIllust;                                                // 0x0058(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFCC[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialExp;                                             // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ConvertExpRate;                                          // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationMinutes;                                         // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRA7[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventTermId;                                             // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    HyouiName;                                               // 0x0080(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    HyouiDesc;                                               // 0x0084(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    HyouiAbilityName;                                        // 0x0088(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHyoui;                                                 // 0x008C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsStackBEnable;                                          // 0x008D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3BBB[0x2];                                   // 0x008E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StackBTypeId;                                            // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StackBStatusId;                                          // 0x00A0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x00B0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6QJC[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ImagineParameter
	 * Size -> 0x006C
	 */
	struct FImagineParameter
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Attack;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Defense;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    STR;                                                     // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VIT;                                                     // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DEX;                                                     // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    INT;                                                     // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MND;                                                     // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Skill;                                                   // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Attribute;                                               // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StatusTimescale;                                         // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StatusId1;                                               // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbilityScale1;                                           // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StatusId2;                                               // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbilityScale2;                                           // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StatusId3;                                               // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbilityScale3;                                           // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StatusId4;                                               // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbilityScale4;                                           // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HyouiStatusId1;                                          // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HyouiAbilityScale1;                                      // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HyouiStatusId2;                                          // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HyouiAbilityScale2;                                      // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HyouiStatusId3;                                          // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HyouiAbilityScale3;                                      // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HyouiStatusId4;                                          // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HyouiAbilityScale4;                                      // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MasterImaginePerkPickTable
	 * Size -> 0x0038
	 */
	struct FMasterImaginePerkPickTable
	{
	public:
		int32_t                                                    PerkPickId;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R7SP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPerkAmplitudes                                   MainAmplitudes;                                          // 0x0008(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSBPerkAmplitudes                                   SubAmplitudes;                                           // 0x0020(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MasterImaginePerkTable
	 * Size -> 0x0098
	 */
	struct FMasterImaginePerkTable
	{
	public:
		class FString                                              TableId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Perks;                                                   // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                              Rates;                                                   // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9I6R[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            PerkWeights;                                             // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<int32_t, struct FMasterImaginePerkPickTable>          PerkPickTableMaps;                                       // 0x0048(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MasterImagineMaterial
	 * Size -> 0x000C
	 */
	struct FMasterImagineMaterial
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRecepiItemType                                          RecepiItemType;                                          // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CCJ7[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MasterImagineRecepi
	 * Size -> 0x0038
	 */
	struct FMasterImagineRecepi
	{
	public:
		int32_t                                                    RecepiId;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImagineId;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerRank;                                          // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoRelease;                                             // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PUV6[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Price;                                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKG3[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMasterImagineMaterial>                      Materials;                                               // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNaEventTokenBuff
	 * Size -> 0x0018
	 */
	struct FSBNaEventTokenBuff
	{
	public:
		ESBNaEventTokenBuffConditonType                            ConditionType;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FAVD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MapId;                                                   // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerTagId;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionId;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuffRate;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterNaEvent
	 * Size -> 0x00C0
	 */
	struct FSBMasterNaEvent
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03DI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            TokenIdList;                                             // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ESBNaEventType                                             Type;                                                    // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NPKW[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TopImageId;                                              // 0x001C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TopUploadImageId;                                        // 0x0024(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BgImageId;                                               // 0x002C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BgUploadImageId;                                         // 0x0034(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubMenuBgImagePattern;                                   // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    EventTitleTextId;                                        // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BannerId;                                                // 0x0044(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BannerUploadImageId;                                     // 0x004C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ScheduleTutorialId;                                      // 0x0054(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HelpTutorialId;                                          // 0x005C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2QNN[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SiteUrl;                                                 // 0x0068(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0078(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TIWE[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventTermId;                                             // 0x0080(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBNaEventTokenBuff>                         TokenBuffList;                                           // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    EnableGatherToken;                                       // 0x00A0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnableDefeatToken;                                       // 0x00A4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnableDefeatNamedToken;                                  // 0x00A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RI9C[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TokenDropTermId;                                         // 0x00B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterOrnament
	 * Size -> 0x0060
	 */
	struct FSBMasterOrnament
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameTextId;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlaceType;                                               // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OrnamentMenuType;                                        // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OrnamentType;                                            // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rarity;                                                  // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemLevel;                                               // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerSells;                                        // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerBuys;                                         // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorId;                                                 // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNoSaleFlag;                                            // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAlllowedToChangeColor;                                 // 0x003D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActive;                                                // 0x003E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_289Q[0x1];                                   // 0x003F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AssetId;                                                 // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterTreasureRarityRate
	 * Size -> 0x0008
	 */
	struct FSBMasterTreasureRarityRate
	{
	public:
		ESBTreasureBoxRarity                                       Rarity;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U1PM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rate;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterTreasureLotRate
	 * Size -> 0x0020
	 */
	struct FSBMasterTreasureLotRate
	{
	public:
		bool                                                       Lot_Flag : 1;                                            // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UE5Z[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBTreasureBoxRewardType                                   Reward_Type;                                             // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CI18[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Reward_Master_Id;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Reward_Amount_Min;                                       // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Reward_Amount_Max;                                       // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRarity                                       Rarity_Min;                                              // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRarity                                       Rarity_Max;                                              // 0x0015(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DYR4[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rate;                                                    // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBObjectConditionType                                     condition_times;                                         // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SO1C[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterTreasure
	 * Size -> 0x0068
	 */
	struct FSBMasterTreasure
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9LK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBMasterTreasureRarityRate>                 Rarity_Rate;                                             // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMasterTreasureLotRate>                    Lot_Rate;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      Respawn_Interval;                                        // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Enable_Flag;                                             // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Monday;                                                  // 0x002D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Tuesday;                                                 // 0x002E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Wendneday;                                               // 0x002F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Thursday;                                                // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Friday;                                                  // 0x0031(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Saturday;                                                // 0x0032(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Sunday;                                                  // 0x0033(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0G8T[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           Start_date;                                              // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           End_date;                                                // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Respawn_rate;                                            // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Respawn_warranty;                                        // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Respawn_time;                                            // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22Z0[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SE;                                                      // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RandomTreasureBoxChestGroupContentId
	 * Size -> 0x000C
	 */
	struct FRandomTreasureBoxChestGroupContentId
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PopNum;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContentId;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RandomTreasureBoxChest
	 * Size -> 0x00A0
	 */
	struct FRandomTreasureBoxChest
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IPAG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBMasterTreasure                                   MasterTreasureByRandom;                                  // 0x0008(0x0068) NativeAccessSpecifierPublic
		class FString                                              GameContentId;                                           // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tag;                                                     // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRandomTreasureBoxChestGroupContentId>       GroupContentId;                                          // 0x0090(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterRoom
	 * Size -> 0x0008
	 */
	struct FSBMasterRoom
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameTextId;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterRoomPut
	 * Size -> 0x0030
	 */
	struct FSBMasterRoomPut
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoomId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PutLocationId;                                           // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameTextId;                                              // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OFHY[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            OrnamentPlaceGroupe;                                     // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSupplyMasterData
	 * Size -> 0x0020
	 */
	struct FSBSupplyMasterData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBDungeonSupply>                            Supply;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerTagMasterDataCondition
	 * Size -> 0x0004
	 */
	struct FSBPlayerTagMasterDataCondition
	{
	public:
		int32_t                                                    Type;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerTagMasterData
	 * Size -> 0x0048
	 */
	struct FSBPlayerTagMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Target;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Days;                                                    // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBPlayerTagMasterDataCondition>             Conditions;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Overwrite_Tension_Tag;                                   // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GT0W[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Created_At;                                              // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Updated_At;                                              // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RankingTablereRewardData
	 * Size -> 0x000C
	 */
	struct FRankingTablereRewardData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Master_Rewards_ID;                                       // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RankingRewardData
	 * Size -> 0x0030
	 */
	struct FRankingRewardData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Ranking_Id;                                              // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Content_Id;                                              // 0x000C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               Class_Type;                                              // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J7WO[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    From_rank;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    To_Rank;                                                 // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRankingTablereRewardData>                   Rewards;                                                 // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRecipeReleaseConditionMasterData
	 * Size -> 0x0020
	 */
	struct FSBRecipeReleaseConditionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          RewardType;                                              // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CQ9M[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OF77[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBRecipeCondition>                          RecipeCondition;                                         // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RecipeSetMasterData
	 * Size -> 0x0018
	 */
	struct FRecipeSetMasterData
	{
	public:
		int32_t                                                    RecipeSetId;                                             // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    RecipeSetNameTextId;                                     // 0x0004(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            RecipeIdList;                                            // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGameSettingsMasterData
	 * Size -> 0x0008
	 */
	struct FSBGameSettingsMasterData
	{
	public:
		ESBGameSettingsType                                        ID;                                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VLLL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Setting_Value;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterAdventureCardDecoration
	 * Size -> 0x0010
	 */
	struct FSBMasterAdventureCardDecoration
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdventureCardDecorationType                             Type;                                                    // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B9SS[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    Name;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInitialGrant;                                           // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z9LW[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterAwardsData
	 * Size -> 0x000C
	 */
	struct FSBMasterAwardsData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterT_ApartItemData
	 * Size -> 0x000C
	 */
	struct FSBMasterT_ApartItemData
	{
	public:
		EItemType                                                  item_type;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZY67[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    item_id;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Item_Num;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterT_ApartEquipmentData
	 * Size -> 0x0050
	 */
	struct FSBMasterT_ApartEquipmentData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  item_type;                                               // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08JX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    item_id;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BFJU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Event_Term_Id;                                           // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Created_At;                                              // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Updated_At;                                              // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMasterT_ApartItemData>                    Aparted_Item_Data;                                       // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillDataMasterData
	 * Size -> 0x0058
	 */
	struct FSBSkillDataMasterData
	{
	public:
		int32_t                                                    SkillId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBTextTableHash>                            DescArray;                                               // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NA40[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClassLevel;                                              // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillType                                               SkillType;                                               // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillAbilityType                                        AbilityType;                                             // 0x0021(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XP39[0x16];                                  // 0x0022(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ConditionSkillId1;                                       // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionSkillLevel1;                                    // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionSkillId2;                                       // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionSkillLevel2;                                    // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CannotLearnSkillId;                                      // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SwitchSkillId;                                           // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDefaultSkill;                                          // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KK54[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBMasterData
	 * Size -> 0x0030
	 */
	struct FSBStackBMasterData
	{
	public:
		class FString                                              stackb_id;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stackb_num;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rate;                                                    // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    need_luno;                                               // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    item_need_count;                                         // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    support_item_id;                                         // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    support_item_need_counter;                               // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5SU[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBTicketData
	 * Size -> 0x001C
	 */
	struct FSBStackBTicketData
	{
	public:
		int32_t                                                    token_id;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStackBTicketType                                        Type;                                                    // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1QU4[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    need_count;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStackBItemType                                          ItemType;                                                // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X8R9[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    level_min;                                               // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    level_max;                                               // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    success_rate;                                            // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityDataInterface
	 * Size -> 0x0008
	 */
	struct FSBAbilityDataInterface
	{
	public:
		unsigned char                                              UnknownData_22GX[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityMasterData
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FSBAbilityMasterData : public FSBAbilityDataInterface
	{
	public:
		int32_t                                                    ID;                                                      // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAbilityCategoryType                                       Category;                                                // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OFGV[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Perk_passiveskill_id;                                    // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Perk_passiveskill2_id;                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAbilityInterlockPassiveSkillPremise                       Perk_passiveskill_premise;                               // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3O9[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Ability_parts1_Name;                                     // 0x001C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Ability_Name1;                                           // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Ability_parts2_Name;                                     // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Ability_Name2;                                           // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Dynamic_Condition1_type;                                 // 0x0034(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Dynamic_Condition1_value;                                // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Dynamic_Condition1_forcecondition;                       // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BFGZ[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Dynamic_condition1_effectivetime;                        // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Dynamic_Condition1_interval;                             // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IN9D[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.AchievementMasterData
	 * Size -> 0x0078
	 */
	struct FAchievementMasterData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0008(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x000C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LargeCategoryId;                                         // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MediumCategoryId;                                        // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Flag;                                                    // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAchievementMasterTitleFlag                              TitleFlag;                                               // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_44VI[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ObjectKind;                                              // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0KAJ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ObjectId;                                                // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ObjectNum;                                               // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValidConditionId;                                        // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValidConditionKind;                                      // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValidConditionKindValue;                                 // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EvaluationType;                                          // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DFC7[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           Date;                                                    // 0x0060(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      RewardIdList;                                            // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyAppearanceData
	 * Size -> 0x0080
	 */
	struct FSBEnemyAppearanceData
	{
	public:
		class FName                                                CharaBPId;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MainInventoryId;                                         // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SubInventoryId;                                          // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemyReactionType                                       DamageReactionType;                                      // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDamageReactionLefelDiff;                              // 0x0021(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XUAA[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResistSlash;                                             // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistThrust;                                            // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistBlow;                                              // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistRock;                                              // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistThunder;                                           // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistFire;                                              // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistIce;                                               // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistLight;                                             // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistDarkness;                                          // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistStun;                                              // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistPoison;                                            // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistSleep;                                             // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistBerserk;                                           // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistDark;                                              // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistBind;                                              // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistPalsy;                                             // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistDrain;                                             // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistFlashStun;                                         // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistBleeding;                                          // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistCorePoison;                                        // 0x0070(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistSpeakerStun;                                       // 0x0074(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    RaceId;                                                  // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Attribute;                                               // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyLevelParamData
	 * Size -> 0x0024
	 */
	struct FSBEnemyLevelParamData
	{
	public:
		float                                                      HitPoint;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitPointFactor;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackPower;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackPowerFactor;                                       // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefencePower;                                            // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefencePowerFactor;                                      // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpLv1;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpLv100;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpCrv;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyDropItemData
	 * Size -> 0x0030
	 */
	struct FSBEnemyDropItemData
	{
	public:
		class FName                                                ContentId;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemyDropItemType                                       Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CTHR[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LevelMin;                                                // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelMax;                                                // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemyDropItemConditionType                              ConditionType;                                           // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CH55[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DropRate;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemIndex;                                               // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DropNumLv1;                                              // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DropNumLv100;                                            // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DropNumCrv;                                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DropNumRnd;                                              // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySkillParamData
	 * Size -> 0x0030
	 */
	struct FSBEnemySkillParamData
	{
	public:
		class FName                                                ActionName;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecastTime;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Stamina;                                                 // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemySkillType                                          SkillType;                                               // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JNSS[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinLv;                                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLv;                                                   // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemySkillActivationTrigger                             SkillActivationTrigger;                                  // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HIWS[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      LimitedModifiers;                                        // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.EnemyParamMasterData
	 * Size -> 0x00E8
	 */
	struct FEnemyParamMasterData
	{
	public:
		class FName                                                EnemyId;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameId;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AppearanceId;                                            // 0x000C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBEnemyAppearanceData                              AppearanceData;                                          // 0x0014(0x0080) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4TF2[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBEnemyLevelParamData>                      LevelParams;                                             // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBEnemyDropItemData>                        DropItems;                                               // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBEnemySkillParamData>                      SkillParams;                                             // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    BossClass;                                               // 0x00C8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PtAlt;                                                   // 0x00CC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ElemDmgBias;                                             // 0x00D0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DurabilityScale;                                         // 0x00D4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResistRate;                                              // 0x00D8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResistDot;                                               // 0x00DC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyLibActiveTime;                                      // 0x00E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleBGMType                                           BattleBGMType;                                           // 0x00E4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XFSG[0x3];                                   // 0x00E5(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPtAltMhBoost
	 * Size -> 0x0004
	 */
	struct FSBEnemyPtAltMhBoost
	{
	public:
		float                                                      Bias;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPtAltTermBoost
	 * Size -> 0x000C
	 */
	struct FSBEnemyPtAltTermBoost
	{
	public:
		class FName                                                TermId;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Bias;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.EnemyPtAltMasterData
	 * Size -> 0x0030
	 */
	struct FEnemyPtAltMasterData
	{
	public:
		bool                                                       enable;                                                  // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1HFT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ContentId;                                               // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BasePercentage;                                          // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEnemyPtAltMhBoost>                        MhBoost;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBEnemyPtAltTermBoost>                      TermBoost;                                               // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBItemBoxContentParam
	 * Size -> 0x0020
	 */
	struct FSBItemBoxContentParam
	{
	public:
		int32_t                                                    ItemBoxContentsId;                                       // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardItemType                                          ItemType;                                                // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A8ES[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemTypeId;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemRarity;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumOfAcq;                                             // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinNumOfAcq;                                             // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StepSize;                                                // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Percentage;                                              // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterItemBox
	 * Size -> 0x0020
	 */
	struct FSBMasterItemBox
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemBoxType                                               ItemBoxType;                                             // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JBGO[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumOfSelectOrLottery;                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J5FY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBItemBoxContentParam>                      ItemBoxContents;                                         // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ItemEfficacyTypeMasterData
	 * Size -> 0x000C
	 */
	struct FItemEfficacyTypeMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemEfficacyType                                          EfficacyType;                                            // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemEffictionType                                         EffictionType;                                           // 0x0005(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanUseCity;                                             // 0x0006(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanUseMission;                                          // 0x0007(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanUseStorage;                                          // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowUseOtherItem;                                      // 0x0009(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRegisterShortcut;                                       // 0x000A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WO0T[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ItemEfficacy
	 * Size -> 0x0048
	 */
	struct FItemEfficacy
	{
	public:
		EItemEfficacyType                                          Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P15U[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EfficacyId;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FItemEfficacyTypeMasterData                         TypeData;                                                // 0x0008(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    PerkId;                                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value2;                                                  // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProjectileId;                                            // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Time;                                                    // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8I9[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EffectId;                                                // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.AppearanceWeaponSticker
	 * Size -> 0x0010
	 */
	struct FAppearanceWeaponSticker
	{
	public:
		int32_t                                                    AppearanceWeaponId;                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAppearanceWeaponStickerType                               StickerType;                                             // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AIX2[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DurationHours;                                           // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationMinutes;                                         // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ItemMasterData
	 * Size -> 0x00D0
	 */
	struct FItemMasterData
	{
	public:
		bool                                                       CanUse;                                                  // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDungeonOnly;                                            // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4PG[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Index;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  Type;                                                    // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRarity                                                  Rarity;                                                  // 0x0009(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OQMM[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    Name;                                                    // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemLevel;                                               // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemExp;                                                 // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerSells;                                        // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerBuys;                                         // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackStorageNum;                                         // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FItemEfficacy                                       Efficacy;                                                // 0x0028(0x0048) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      RecastTime;                                              // 0x0070(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemEffectDescTextId;                                    // 0x0074(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNoDissolution;                                         // 0x0078(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAccounting;                                            // 0x0079(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NoSaleFlag;                                              // 0x007A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSupplyItem;                                            // 0x007B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFusionItem;                                            // 0x007C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O9Q4[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x0080(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerRank;                                          // 0x0084(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemObtainRouteType                                       ObtainRoute;                                             // 0x0088(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LCYE[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    ObtainRouteId;                                           // 0x008C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IdentifiedByDefault;                                     // 0x0090(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5ASB[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                UnidentifiedIconName;                                    // 0x0094(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    UnidentifiedName;                                        // 0x009C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    UnidentifiedDesc;                                        // 0x00A0(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              Category;                                                // 0x00A4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMBD[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAppearanceWeaponSticker                            AppearanceWeaponSticker;                                 // 0x00A8(0x0010) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x00B8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               LimitClass;                                              // 0x00C8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRareProduction;                                         // 0x00C9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7KOV[0x6];                                   // 0x00CA(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.DigitalSignageMasterData
	 * Size -> 0x0040
	 */
	struct FDigitalSignageMasterData
	{
	public:
		class FString                                              GroupId;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TextureName;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDigitalSignageDataType                                    DataType;                                                // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MFPI[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TextureCnt;                                              // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G15H[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterDungeonReward
	 * Size -> 0x0038
	 */
	struct FSBMasterDungeonReward
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DungeonRewardSearchName;                                 // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardId;                                                // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardMethod                                            RewardMethod;                                            // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R9HH[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Probability;                                             // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    iProbability;                                            // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Group;                                                   // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardSetType                                           RewardSetType;                                           // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2GE6[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EventTerm;                                               // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHappyNappo
	 * Size -> 0x0038
	 */
	struct FSBHappyNappo
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tag;                                                     // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              game_content_id;                                         // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    nappo_num;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YBOB[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBOutGameBuffMasterData
	 * Size -> 0x000C
	 */
	struct FSBOutGameBuffMasterData
	{
	public:
		EOutGameBuffType                                           BuffType;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XUH1[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxValue;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRateValue;                                            // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BTG2[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.QuestConditionData
	 * Size -> 0x0010
	 */
	struct FQuestConditionData
	{
	public:
		unsigned char                                              UnknownData_UDQ3[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.RewardInfo
	 * Size -> 0x0018
	 */
	struct FRewardInfo
	{
	public:
		int32_t                                                    RewardId;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestRewardCategory                                       Category;                                                // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1D9K[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClearCountForAdditional;                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MasterRewardsId;                                         // 0x000C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHidden_flag;                                            // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KG3E[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.QuestUnlockData
	 * Size -> 0x0010
	 */
	struct FQuestUnlockData
	{
	public:
		unsigned char                                              UnknownData_9L3I[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.QuestConsumeItemData
	 * Size -> 0x0008
	 */
	struct FQuestConsumeItemData
	{
	public:
		unsigned char                                              UnknownData_3K7I[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.QuestRevivalCondition
	 * Size -> 0x0030
	 */
	struct FQuestRevivalCondition
	{
	public:
		EQuestRevivalConditionType                                 Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N00J[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Hours;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OnTime;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OnDays;                                                  // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OnWeekdays;                                              // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N3LJ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                QuestID;                                                 // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    QuestStep;                                               // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GR0W[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.QuestMasterData
	 * Size -> 0x0118
	 */
	struct FQuestMasterData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LongId;                                                  // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestCategory1                                            Category1;                                               // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestCategory2                                            Category2;                                               // 0x0011(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestCategory3                                            Category3;                                               // 0x0012(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x0013(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0014(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0018(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ThumbnailId;                                             // 0x001C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z55S[0x14];                                  // 0x0024(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBTextTableHash                                    ConditionDetail;                                         // 0x0038(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ClientId;                                                // 0x003C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ReporterId;                                              // 0x0044(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoReport;                                             // 0x004C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VHB[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuestConditionData                                 ConditionInfo;                                           // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FRewardInfo>                                 RewardInfoList;                                          // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FQuestUnlockData                                    UnlockData;                                              // 0x0070(0x0010) NativeAccessSpecifierPublic
		TArray<struct FQuestConsumeItemData>                       ConsumeItems;                                            // 0x0080(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DoneTextId;                                              // 0x0090(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    CloseTextId;                                             // 0x0094(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DoneSynopsisId;                                          // 0x0098(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    CloseSynopsisId;                                         // 0x009C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CloseLocationId;                                         // 0x00A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreCompleteJingle;                                   // 0x00A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_24XO[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TextTableName;                                           // 0x00AC(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepeatCount;                                             // 0x00B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebug;                                                  // 0x00B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y02V[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AcceptTerm;                                              // 0x00BC(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CompleteTerm;                                            // 0x00C4(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CompletableCount;                                        // 0x00CC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FQuestRevivalCondition                              RevivalCondition;                                        // 0x00D0(0x0030) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FRewardInfo>                                 AdditionalRewards;                                       // 0x0100(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bCompletableCountNotifyEnable;                           // 0x0110(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRevivalConditionNotifyEnable;                           // 0x0111(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVOQ[0x6];                                   // 0x0112(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ShopItemInfo
	 * Size -> 0x000C
	 */
	struct FShopItemInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UUB7[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemIndex;                                               // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillMasteryParam
	 * Size -> 0x0008
	 */
	struct FSBSkillMasteryParam
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionClassLevel;                                     // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBIdScale
	 * Size -> 0x0008
	 */
	struct FSBStackBIdScale
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBImagineParam
	 * Size -> 0x0060
	 */
	struct FSBStackBImagineParam
	{
	public:
		class FString                                              pattern_id;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stackb_num;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      effect_duration_time_scale;                              // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_offensive_power;                                     // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attribute_power;                                         // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_str;                                                 // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_vit;                                                 // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_dex;                                                 // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_mnd;                                                 // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_int;                                                 // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_defensive_power;                                     // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    hyoui_desc;                                              // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBStackBIdScale>                            StatusScales;                                            // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBStackBIdScale>                            HyouiScales;                                             // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBWeaponParam
	 * Size -> 0x0030
	 */
	struct FSBStackBWeaponParam
	{
	public:
		class FString                                              pattern_id;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stackb_num;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_offensive_power;                                     // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_str;                                                 // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_vit;                                                 // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_dex;                                                 // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_mnd;                                                 // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_int;                                                 // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    add_critical_point;                                      // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterWarpPoint
	 * Size -> 0x0068
	 */
	struct FSBMasterWarpPoint
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameContentId;                                           // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DestGameContentId;                                       // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Address;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Portal;                                                  // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           LocationXY;                                              // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FieldGameContentId;                                      // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           FieldLocationXY;                                         // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponMasterData
	 * Size -> 0x00C8
	 */
	struct FSBWeaponMasterData
	{
	public:
		int32_t                                                    WeaponID;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Name;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    Desc;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VA5Z[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MainWeaponAssetName;                                     // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SubWeaponAssetName;                                      // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialId;                                              // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorId;                                                 // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorSaturation;                                         // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorValue;                                              // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerBuys;                                         // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PricePlayerSells;                                        // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               EquipClass;                                              // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XRMD[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EquipLevel;                                              // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttribute                                               Attribute;                                               // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9VS2[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AttributeDamage;                                         // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StatusTable;                                             // 0x005C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseExperience;                                          // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExperienceConversionRate;                                // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBWeaponType                                              WeaponType;                                              // 0x0070(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNoDissolution;                                         // 0x0071(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsForWeaponSticker;                                      // 0x0072(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AAW1[0x1];                                   // 0x0073(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DurationMinutes;                                         // 0x0074(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EventTermId;                                             // 0x0078(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsStackBEnable;                                         // 0x0088(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7JXR[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StackBTypeId;                                            // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StackBStatusId;                                          // 0x00A0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SubPerkPickId;                                           // 0x00B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNewFormat;                                            // 0x00C0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WWTJ[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BattleScore;                                             // 0x00C4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBalloonWindowRequest
	 * Size -> 0x0040
	 */
	struct FSBBalloonWindowRequest
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    CameraNumber;                                            // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StampNumber;                                             // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACharacter*                                          Speaker;                                                 // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachTransformName;                                     // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoClose;                                              // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNBS[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutoCloseTime;                                           // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextureRenderTarget2D*                              RenderTarget;                                            // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponAsset
	 * Size -> 0x00B0
	 */
	struct FSBWeaponAsset
	{
	public:
		unsigned char                                              WeaponBase[0x28];                                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Mesh[0x28];                                              // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ColorList[0x28];                                         // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              MaterialSetList[0x10];                                   // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FSBEnvironmentWeaponEffect>                  EnvironmentEffectList;                                   // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBUnsheatheWeaponEffect>                    UnsheatheEffectList;                                     // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NECZ[0x8];                                   // 0x00A8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPineVillageLeagueEdge
	 * Size -> 0x0010
	 */
	struct FSBPineVillageLeagueEdge
	{
	public:
		TArray<int32_t>                                            GroupScore;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPineVillageMyLeagueData
	 * Size -> 0x0038
	 */
	struct FSBPineVillageMyLeagueData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FaceImagePath;                                           // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MasterPineVillageEventId;                                // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    League;                                                  // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Group;                                                   // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Points;                                                  // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConsecutiveDemotionCandidacies;                          // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasPendingRankingRewards;                                // 0x0034(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasPendingLeagueRewards;                                 // 0x0035(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AH5P[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPineVillageLeagueData
	 * Size -> 0x0048
	 */
	struct FSBPineVillageLeagueData
	{
	public:
		TArray<struct FSBPineVillageLeagueEdge>                    LeagueEdgeValues;                                        // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBPineVillageMyLeagueData                          MyLeagueData;                                            // 0x0010(0x0038) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPineVillageCharacterData
	 * Size -> 0x0078
	 */
	struct FSBPineVillageCharacterData
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLGV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UserId;                                                  // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              shortId;                                                 // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassType;                                               // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FaceImagePath;                                           // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleScore;                                             // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Points;                                                  // 0x0074(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPineVillageRankingsData
	 * Size -> 0x0090
	 */
	struct FSBPineVillageRankingsData
	{
	public:
		struct FDateTime                                           RankingsUpdatedAt;                                       // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBPineVillageCharacterData>                 Rankings;                                                // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBPineVillageCharacterData                         MyRanking;                                               // 0x0018(0x0078) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillSettingConditionCheckData
	 * Size -> 0x0020
	 */
	struct FSBSkillSettingConditionCheckData
	{
	public:
		int32_t                                                    SkillLevel;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IE2N[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            PassiveSkillIDList;                                      // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    StackBNum;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9VI[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInteractionInfo
	 * Size -> 0x0018
	 */
	struct FSBInteractionInfo
	{
	public:
		ESBInteractionType                                         InteractionType;                                         // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_21AZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USBInteractionTargetComponent>        TargetComponent;                                         // 0x0010(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerPresetEquipSet
	 * Size -> 0x0020
	 */
	struct FSBPlayerPresetEquipSet
	{
	public:
		TArray<struct FSBPlayerPresetEquipList>                    List;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBPlayerPresetEquipItem>                    item;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MultiCraftData
	 * Size -> 0x0028
	 */
	struct FMultiCraftData
	{
	public:
		TArray<struct FOwnItemInfo>                                OutItems;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                UseMaterials;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsCritical;                                              // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YB5[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFmItem
	 * Size -> 0x0030
	 */
	struct FSBMasterFmItem
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0L7F[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFmAttribute                                             Attribute;                                               // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XGS1[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Description;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFmHarvestFromSeedData
	 * Size -> 0x000C
	 */
	struct FSBFmHarvestFromSeedData
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFmSeed
	 * Size -> 0x0060
	 */
	struct FSBMasterFmSeed
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ON58[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimespan                                           GrowthTime;                                              // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FIntPoint>                                   PlantRangeList;                                          // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBFmHarvestFromSeedData>                    HarvestDataList;                                         // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SeedIdList;                                              // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BonusIdList;                                             // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFmUseItem
	 * Size -> 0x0020
	 */
	struct FSBMasterFmUseItem
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GPB7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFmItemEffect                                            Effect;                                                  // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P7YZ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterNaEventReward
	 * Size -> 0x0024
	 */
	struct FSBMasterNaEventReward
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventId;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTeamReward;                                           // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9TDZ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RewardId;                                                // 0x000C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Point;                                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredPoint;                                           // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBNaEventRewardAssetType                                  AssetType;                                               // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y5YQ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardBoostTooltipData
	 * Size -> 0x0030
	 */
	struct FSBRewardBoostTooltipData
	{
	public:
		class FText                                                EffectText;                                              // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDateTime;                                             // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LimitCount;                                              // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RemainingCount;                                          // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardBoostResetPattern                                 ResetPattern;                                            // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4C8[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBUseTicket
	 * Size -> 0x0008
	 */
	struct FSBStackBUseTicket
	{
	public:
		int32_t                                                    token_id;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBSelect
	 * Size -> 0x0018
	 */
	struct FSBStackBSelect
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SelectID;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y5YG[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTreasureBoxEntryInfo
	 * Size -> 0x0080
	 */
	struct FSBTreasureBoxEntryInfo
	{
	public:
		class UClass*                                              TargetClass;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ObjectId;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tag;                                                     // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LLOG[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0030(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		ESBTreasureBoxRarity                                       Rarity;                                                  // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LHNP[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeLimit;                                               // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TreasureId;                                              // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugSpawn;                                             // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z5UW[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ObjecDropMinMoney;                                       // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ObjecDropMaxMoney;                                       // 0x0074(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QU93[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTreasureBoxLotSimulateResult
	 * Size -> 0x0010
	 */
	struct FSBTreasureBoxLotSimulateResult
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRewardType                                   Type;                                                    // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRarity                                       BoxRarity;                                               // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DR6J[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFusionCostMasterData
	 * Size -> 0x0008
	 */
	struct FSBFusionCostMasterData
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cost;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFusionTicketMasterData
	 * Size -> 0x0010
	 */
	struct FSBFusionTicketMasterData
	{
	public:
		int32_t                                                    TokenID;                                                 // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeedCount;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFusionTicketType                                        TicketType;                                              // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Q1Y[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.EnemyDropItemInfo
	 * Size -> 0x0030
	 */
	struct FEnemyDropItemInfo
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNumber;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SLVJ[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemIndex;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DiffAmount;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsIdentified;                                           // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I0HX[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     DefaultOrder;                                            // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.EnemyDeadNotifyInfo
	 * Size -> 0x0078
	 */
	struct FEnemyDeadNotifyInfo
	{
	public:
		class FString                                              EnemyId;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyLevel;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Engram;                                                  // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExtraExp;                                                // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Money;                                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JWIG[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEnemyDropItemInfo>                          PassiveDropItems;                                        // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterToken>                           DropEventTokens;                                         // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                IgnoredItems;                                            // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FDateTime                                           Timestamp;                                               // 0x0058(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBDungeonSupply>                            PassiveDropSupply;                                       // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsDropRateUpLiquidMemoryEfficacyApplied;                 // 0x0070(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsExpUpLiquidMemoryEfficacyApplied;                      // 0x0071(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPtAlt;                                                  // 0x0072(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMK3[0x5];                                   // 0x0073(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.GuildChangeData
	 * Size -> 0x0038
	 */
	struct FGuildChangeData
	{
	public:
		class FString                                              Comment;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ESBGuildActivityTime>                               ActivityTime;                                            // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		EGuildAcceptType                                           AcceptType;                                              // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X1OZ[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EGuildAttribute>                                    Attributes;                                              // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ReportData
	 * Size -> 0x0038
	 */
	struct FReportData
	{
	public:
		class FString                                              ReportedPlayerId;                                        // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ReportedCharacterId;                                     // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Message;                                                 // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Category;                                                // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U4DF[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTutorialHelpCommonData
	 * Size -> 0x0048
	 */
	struct FSBTutorialHelpCommonData
	{
	public:
		class FName                                                TextId;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTutorialHelpTextDispType                                TextType;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QO3Y[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Texture[0x28];                                           // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FString                                              MovieFile;                                               // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTutorialHelpTriggerCondition
	 * Size -> 0x001C
	 */
	struct FSBTutorialHelpTriggerCondition
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                QuestID;                                                 // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestStatus                                               QuestStatus;                                             // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VSOB[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ClearMissionId;                                          // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WarehouseAbilityId;                                      // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTutorialHelpData
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FSBTutorialHelpData : public FTableRowBase
	{
	public:
		class FName                                                TitleTextId;                                             // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTutorialHelpCategoryType                                CategoryType;                                            // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNotifyMode;                                             // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UBHA[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBTutorialHelpCommonData>                   CommonData;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       CommandMenuAutoShowTutorialHelp;                         // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDefaultShow;                                           // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBookmarkAdd;                                           // 0x002A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8ID[0x1];                                   // 0x002B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTutorialHelpTriggerCondition                     TriggerCondition;                                        // 0x0030(0x001C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                EventTermId;                                             // 0x004C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6BY[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CompleteQuestResponseData
	 * Size -> 0x0148
	 */
	struct FCompleteQuestResponseData
	{
	public:
		int32_t                                                    QuestIndex;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T0YU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   UpdatedAt;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClearCount;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6LXS[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    RevivalAt;                                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                Items;                                                   // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Money;                                                   // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Engram;                                                  // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BP;                                                      // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassExp;                                                // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBExtraExpParse                                    ClassExtraExp;                                           // 0x0040(0x0018) NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    BPPoint;                                                 // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoseOrbFree;                                             // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMailStampCategories>                      Stamps;                                                  // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBOwnEmoteData>                             Emotes;                                                  // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterCraftRecepi>                       ImagineRecipes;                                          // 0x0080(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterCraftRecepi>                       CraftRecipes;                                            // 0x0090(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            RecipeSet;                                               // 0x00A0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            GainedAchievementIds;                                    // 0x00B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterToken>                           Tokens;                                                  // 0x00C0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBLiquidMemoryInfo>                         LiquidMemory;                                            // 0x00D0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AdventureBoardIds;                                       // 0x00E0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    VanishedMoney;                                           // 0x00F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedExp;                                             // 0x00F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedCoins;                                           // 0x00F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedCurrencies;                                      // 0x00FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VanishedGc;                                              // 0x0100(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OV7G[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            VanishedAchievements;                                    // 0x0108(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterToken>                           VanishedTokens;                                          // 0x0118(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                SoldItems;                                               // 0x0128(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SoldProfit;                                              // 0x0138(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C8Z4[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ResponseCode;                                            // 0x0140(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X161[0x4];                                   // 0x0144(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBResearchTeamOverview
	 * Size -> 0x0028
	 */
	struct FSBResearchTeamOverview
	{
	public:
		class FString                                              GameContentsId;                                          // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBResearchTeamStatus                                      SupporterStatus;                                         // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_16YC[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           SupporterEffectEndTime;                                  // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           SupporterEffectReuseTime;                                // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBResearchTeamData
	 * Size -> 0x0038
	 */
	struct FSBResearchTeamData
	{
	public:
		struct FSBResearchTeamOverview                             Overview;                                                // 0x0000(0x0028) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    ItemDropIncRate;                                         // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TresureboxDropIncRate;                                   // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaterialIncNum;                                          // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A0QG[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaPlayCount
	 * Size -> 0x0018
	 */
	struct FSBGashaPlayCount
	{
	public:
		class FString                                              GashaId;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ID;                                                      // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaCategory
	 * Size -> 0x0020
	 */
	struct FSBGashaCategory
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AVJ2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RibbonFlag;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SPBG[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaPrices
	 * Size -> 0x0020
	 */
	struct FSBGashaPrices
	{
	public:
		int32_t                                                    CurrencyType;                                            // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PriceOfOne;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BulkPrice;                                               // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaTickets
	 * Size -> 0x0008
	 */
	struct FSBGashaTickets
	{
	public:
		int32_t                                                    TokenID;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PriceOfOne;                                              // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaItem
	 * Size -> 0x000C
	 */
	struct FSBGashaItem
	{
	public:
		int32_t                                                    ItemType;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaBonus
	 * Size -> 0x0024
	 */
	struct FSBGashaBonus
	{
	public:
		int32_t                                                    ItemSetId;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBGashaItem                                        ItemInfo;                                                // 0x0004(0x000C) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    UniqueId;                                                // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Num;                                                     // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Limit;                                                   // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Step;                                                    // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Lap;                                                     // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaBonusListInfo
	 * Size -> 0x0048
	 */
	struct FSBGashaBonusListInfo
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermStart;                                               // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermEnd;                                                 // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepeatNum;                                               // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRAP[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBGashaBonus>                               ItemList;                                                // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaInfo
	 * Size -> 0x01C8
	 */
	struct FSBGashaInfo
	{
	public:
		class FString                                              GashaId;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ID;                                                      // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Title;                                                   // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DetailDesc;                                              // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WarningComment;                                          // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CategoryId;                                              // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JL97[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Category;                                                // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Tags;                                                    // 0x0070(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Type;                                                    // 0x0080(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1NOM[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Banner;                                                  // 0x0088(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SimpleBanner;                                            // 0x0098(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GashaStart;                                              // 0x00A8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GashaEnd;                                                // 0x00B8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           GashaEndDate;                                            // 0x00C8(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBGashaPrices>                              Prices;                                                  // 0x00D0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBGashaTickets>                             Tickets;                                                 // 0x00E0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Gender;                                                  // 0x00F0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WDCA[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBGashaBonusListInfo                               BonusListInfo;                                           // 0x00F8(0x0048) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    RibbonFlag;                                              // 0x0140(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PaidOnly;                                                // 0x0144(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9D5V[0x3];                                   // 0x0145(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GroupId;                                                 // 0x0148(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GroupStep;                                               // 0x0158(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StepNow;                                                 // 0x015C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StepMax;                                                 // 0x0160(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LapCount;                                                // 0x0164(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayCount;                                               // 0x0168(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalPlayCount;                                          // 0x016C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNextGasha;                                             // 0x0170(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FQ09[0x7];                                   // 0x0171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBGashaBonusListInfo                               CurrencyBonusListInfo;                                   // 0x0178(0x0048) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    CurrencyTotalPlayCount;                                  // 0x01C0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LapMax;                                                  // 0x01C4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaReceiptDiff
	 * Size -> 0x0020
	 */
	struct FSBGashaReceiptDiff
	{
	public:
		int32_t                                                    Type;                                                    // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Before;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    After;                                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W44G[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiredAt;                                               // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsExpired;                                               // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RW7Z[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaReceipt
	 * Size -> 0x0020
	 */
	struct FSBGashaReceipt
	{
	public:
		TArray<struct FSBGashaReceiptDiff>                         Currency;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBGashaReceiptDiff>                         Tickets;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaReward
	 * Size -> 0x0024
	 */
	struct FSBGashaReward
	{
	public:
		int32_t                                                    SortId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rarity;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Wight;                                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemSetId;                                               // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBGashaItem                                        ItemInfo;                                                // 0x0010(0x000C) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Step;                                                    // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsConfirm;                                               // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTicketGasha;                                           // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T57X[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaPullInfo
	 * Size -> 0x0068
	 */
	struct FSBGashaPullInfo
	{
	public:
		class FString                                              GashaId;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ID;                                                      // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BeforeCount;                                             // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AfterCount;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLKI[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBGashaReceipt                                     Receipts;                                                // 0x0020(0x0020) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FSBGashaReward>                              Rewards;                                                 // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBGashaBonus>                               Bonus;                                                   // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    StepNext;                                                // 0x0060(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrencyAfterCount;                                      // 0x0064(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCryptoCurrency
	 * Size -> 0x0028
	 */
	struct FSBCryptoCurrency
	{
	public:
		int32_t                                                    FreeRoseOrb;                                             // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PaidRoseOrb;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkyCoin;                                                 // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ITXJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiredFreeRoseOrb;                                      // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredPaidRoseOrb;                                      // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredSkyCoin;                                          // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCashHistory
	 * Size -> 0x0048
	 */
	struct FSBCashHistory
	{
	public:
		class FString                                              UpdateType;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PaidAmount;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FreeAmount;                                              // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActionType;                                              // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ActionTypeTextId;                                        // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HVT[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ReasonText;                                              // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           HistoryDate;                                             // 0x0040(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHistoryExpired
	 * Size -> 0x0028
	 */
	struct FSBHistoryExpired
	{
	public:
		int32_t                                                    ExpiredFreeAmount;                                       // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpiredPaidAmount;                                       // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpiredCoinAmount;                                       // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z78U[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpiredFreeAt;                                           // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredPaidAt;                                           // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpiredCoinAt;                                           // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPurchaseFSResponse
	 * Size -> 0x00C0
	 */
	struct FSBPurchaseFSResponse
	{
	public:
		int32_t                                                    PayAmount;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HEWT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      MailList_ItemId;                                         // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      MailList_BonusId;                                        // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bValidSeasonPassInfo;                                    // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U37D[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBSeasonPassInfo                                   SeasonPassInfo;                                          // 0x002C(0x001C) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AdventurerRank;                                          // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassType;                                               // 0x004C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClassLevel;                                              // 0x0050(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Gender;                                                  // 0x0054(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayDays;                                                // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TNF1[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      MissionList_Id;                                          // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<bool>                                               MissionList_Cleared;                                     // 0x0070(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            QuestList_Id;                                            // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<bool>                                               QuestList_Cleared;                                       // 0x0090(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SeasonList_Id;                                           // 0x00A0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SeasonList_Rank;                                         // 0x00B0(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPurchaseRoPSResponse
	 * Size -> 0x0030
	 */
	struct FSBPurchaseRoPSResponse
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OrderID;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FreeRoseOrb;                                             // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PaidRoseOrb;                                             // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsWM;                                                    // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T4PF[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPurchaseCondition
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FSBPurchaseCondition : public FTableRowBase
	{
	public:
		TArray<class FString>                                      MissionId;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<bool>                                               MissionCleared;                                          // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<int32_t>                                            QuestID;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<bool>                                               QuestCleared;                                            // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    PlayDays;                                                // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeasonId;                                                // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeasonLevel;                                             // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P61G[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUserCoupon
	 * Size -> 0x0030
	 */
	struct FSBUserCoupon
	{
	public:
		bool                                                       IsValid;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X3SI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CouponCode;                                              // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClaimedRewardLevel;                                      // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CountQuest;                                              // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CouponId;                                                // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseCount;                                                // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpireDate;                                              // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBShopItem
	 * Size -> 0x0018
	 */
	struct FSBShopItem
	{
	public:
		int32_t                                                    ProductId;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PurchaseLimitId;                                         // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StockNum;                                                // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Price;                                                   // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ViewType;                                                // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_982V[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WorldStockNum;                                           // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBShopItemRoPS
	 * Size -> 0x0050
	 */
	struct FSBShopItemRoPS
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemNameId;                                              // 0x0008(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Price;                                                   // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmountPaid;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmountFree;                                              // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LimitCount;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PurchaseCount;                                           // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OrderID;                                                 // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6D8[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SpFlag;                                                  // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TextureId;                                               // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemDescriptionId;                                       // 0x003C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    ItemDetailDescriptionId;                                 // 0x0040(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BonusId;                                                 // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0048(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTermsOfUseInfo
	 * Size -> 0x0060
	 */
	struct FSBTermsOfUseInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Term_Id;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Type;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Revision;                                                // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Platform;                                                // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HWOJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Lang;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Title;                                                   // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Content;                                                 // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Sort_Id;                                                 // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OVQ2[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBExpiredToken
	 * Size -> 0x0030
	 */
	struct FSBExpiredToken
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenID;                                                 // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpiredAmount;                                           // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           RegisteDate;                                             // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBExpiredTokenStates
	 * Size -> 0x0010
	 */
	struct FSBExpiredTokenStates
	{
	public:
		TArray<struct FSBExpiredToken>                             ExpiredStates;                                           // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTokenStates
	 * Size -> 0x0010
	 */
	struct FSBTokenStates
	{
	public:
		TArray<struct FSBTokenState>                               TokenStates;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaVoiceData
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBGashaVoiceData : public FTableRowBase
	{
	public:
		struct FDataTableRowHandle                                 GroupHandle;                                             // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      LotteryRate;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CXD[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     VoiceEvent;                                              // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLoginBonusWindowItemData
	 * Size -> 0x0020
	 */
	struct FSBLoginBonusWindowItemData
	{
	public:
		int32_t                                                    Category;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D8TM[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ExtraData;                                               // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLoginBonusWindowDayData
	 * Size -> 0x0018
	 */
	struct FSBLoginBonusWindowDayData
	{
	public:
		int32_t                                                    Day;                                                     // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPickup;                                                 // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ELJ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBLoginBonusWindowItemData>                 ItemData;                                                // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLoginBonusWindowData
	 * Size -> 0x00A0
	 */
	struct FSBLoginBonusWindowData
	{
	public:
		int32_t                                                    TypeId;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MasterId;                                                // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortNo;                                                  // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StartDay;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EndDay;                                                  // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndTime;                                                 // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoginCount;                                              // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NeedGetAnimation;                                        // 0x003C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_760I[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImageUrl;                                                // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TitleName;                                               // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLoginBonusWindowDayData>                  DailyData;                                               // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    StumpTarget;                                             // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17N8[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BgImageUrl;                                              // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LetterType;                                              // 0x0088(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UIPosition;                                              // 0x008C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BackGroundId;                                            // 0x0090(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityConditionUIInfo
	 * Size -> 0x0038
	 */
	struct FSBWarehouseAbilityConditionUIInfo
	{
	public:
		class FText                                                ConditionText;                                           // 0x0000(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ProgressText;                                            // 0x0018(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bIsCleard;                                               // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SM9A[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityListUIInfo
	 * Size -> 0x0028
	 */
	struct FSBWarehouseAbilityListUIInfo
	{
	public:
		int32_t                                                    RecipeId;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0008(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bIsMastered;                                             // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0021(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UAPJ[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityLevelButtonUiInfo
	 * Size -> 0x000C
	 */
	struct FSBWarehouseAbilityLevelButtonUiInfo
	{
	public:
		int32_t                                                    PublishedAbilityNum;                                     // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MasteredAbilityNum;                                      // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NB7U[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityNotifyUIInfo
	 * Size -> 0x0020
	 */
	struct FSBWarehouseAbilityNotifyUIInfo
	{
	public:
		class FText                                                RecipeName;                                              // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ESBWarehouseAbilityCharacterStatus                         Status;                                                  // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8NKG[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityConditionConfig
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBAbilityConditionConfig : public FTableRowBase
	{
	public:
		class UClass*                                              Condition;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityConditionID
	 * Size -> 0x0008
	 */
	struct FSBAbilityConditionID
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityConditionInfo
	 * Size -> 0x0010
	 */
	struct FSBAbilityConditionInfo
	{
	public:
		struct FSBAbilityConditionID                               ConditionId;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsForceCondition : 1;                                   // 0x000C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T57R[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityConfig
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBAbilityConfig : public FTableRowBase
	{
	public:
		class UClass*                                              Object;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilityExecuteEnv                                       ExecuteEnv;                                              // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B19X[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxTriggers;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilitySimultaneousActivationControl                    SimultaneousControl;                                     // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilityFlags                                            Flag;                                                    // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilityEffectiveCategory                                EffectiveCategory;                                       // 0x001A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleEffectiveFeel                                     FeelType;                                                // 0x001B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBBattleStatusEffectID                             EffectId;                                                // 0x001C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		ESBAbilityCalcSuccessRate                                  CalcSuccessRate;                                         // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleStatusResistType                                  ReferenceResistType;                                     // 0x0025(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZOBO[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bExclusionLevelDifference : 1;                           // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyAccumulation : 1;                                  // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsImpossibleSummonMount : 1;                            // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFinishMount : 1;                                      // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6FG[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBStatusAilmentIconType                                   IconType;                                                // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZRQA[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UIAttribute;                                             // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_74AY[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityParts
	 * Size -> 0x0028
	 */
	struct FSBAbilityParts
	{
	public:
		struct FSBAbilityID                                        AbilityID;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Value1;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value2;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIndividualRate : 1;                                     // 0x0010(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V5H6[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Rate;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityValueLimit
	 * Size -> 0x0008
	 */
	struct FSBAbilityValueLimit
	{
	public:
		ESBAbilityValueLimitType                                   LimitType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPAH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityEffectData
	 * Size -> 0x0014
	 */
	struct FSBAbilityEffectData
	{
	public:
		struct FSBAbilityMasterID                                  ID;                                                      // 0x0000(0x0004) NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Parts1Value1;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Parts1Value2;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Parts2Value1;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Parts2Value2;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityTextData
	 * Size -> 0x0050
	 */
	struct FSBAbilityTextData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidAbility1;                                          // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L2BM[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityEffectName1;                                      // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidAbility2;                                          // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WTBK[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityEffectName2;                                      // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAchievementLargeCategoryInfo
	 * Size -> 0x0018
	 */
	struct FSBAchievementLargeCategoryInfo
	{
	public:
		int32_t                                                    LargeCategoryId;                                         // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9BVF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            MediumCategoryList;                                      // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionListInfo
	 * Size -> 0x0018
	 */
	struct FSBMissionListInfo
	{
	public:
		struct FSBDungeonCompleteState                             DungeonInfo;                                             // 0x0000(0x0014) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       BoostFree;                                               // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HOHR[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardListManager
	 * Size -> 0x0010
	 */
	struct FSBAdventureBoardListManager
	{
	public:
		TArray<struct FSBAdventureBoardParam>                      BoardParamList;                                          // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardRouteParam
	 * Size -> 0x0008
	 */
	struct FSBAdventureBoardRouteParam
	{
	public:
		int32_t                                                    StartPanelId;                                            // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TermPanelId;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardPanelUpdateData
	 * Size -> 0x0020
	 */
	struct FSBAdventureBoardPanelUpdateData
	{
	public:
		int32_t                                                    BoardId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEVG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PanelId;                                                 // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdventureBoardPanelStatus                               Status;                                                  // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HKV[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ProgressCnt;                                             // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardUpdateData
	 * Size -> 0x0008
	 */
	struct FSBAdventureBoardUpdateData
	{
	public:
		int32_t                                                    BoardId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAdventureBoardStatus                                    Status;                                                  // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActive;                                                // 0x0005(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHudDraw;                                               // 0x0006(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFavorite;                                              // 0x0007(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardMissionTypeData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBAdventureBoardMissionTypeData : public FTableRowBase
	{
	public:
		ESBAdventureBoardPanelMissionType                          Type;                                                    // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2R14[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TypeNameId;                                              // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardNotifyClearStatus
	 * Size -> 0x0002
	 */
	struct FSBAdventureBoardNotifyClearStatus
	{
	public:
		ESBAdventureBoardClearStatus                               Status;                                                  // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsComplete;                                              // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAestheShopCharaPartsIconInfoForSort
	 * Size -> 0x0068
	 */
	struct FSBAestheShopCharaPartsIconInfoForSort
	{
	public:
		int32_t                                                    SortId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KMYX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              IconTexture[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                AssetId;                                                 // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconID;                                                  // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8099[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TermId;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TermTicks;                                               // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAIComboSequenceTreeNodeNextLink
	 * Size -> 0x0014
	 */
	struct FSBAIComboSequenceTreeNodeNextLink
	{
	public:
		unsigned char                                              UnknownData_U383[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAIComboSequenceTreeNode
	 * Size -> 0x0018
	 */
	struct FSBAIComboSequenceTreeNode
	{
	public:
		TArray<struct FSBAIComboSequenceTreeNodeNextLink>          NextList;                                                // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T5OV[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAIComboOnlySkill
	 * Size -> 0x0018
	 */
	struct FSBAIComboOnlySkill
	{
	public:
		class FName                                                StanceName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ComboOnlyCommand;                                        // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAIEnemyActionLotteryRuleHolder
	 * Size -> 0x0010
	 */
	struct FSBAIEnemyActionLotteryRuleHolder
	{
	public:
		bool                                                       bInvertResult;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1G2T[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBAIEnemyActionLotteryRule*                         Rule;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAIEnemyActionLotteryRules
	 * Size -> 0x0018
	 */
	struct FSBAIEnemyActionLotteryRules
	{
	public:
		ESBAIEnemyActionLotteryLogicalOperationType                LogicalOperationType;                                    // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GFYB[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_V9YA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAIEnemyActionLotteryRuleHolder>           RuleHolders;                                             // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAIEnemyActionLotteryTable
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FSBAIEnemyActionLotteryTable : public FTableRowBase
	{
	public:
		class FName                                                ActionName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAIEnemyActionLotteryPhase                               Phase;                                                   // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJEP[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Stance;                                                  // 0x0014(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAIEnemyActionLotteryPartyBattle                         PartyBattle;                                             // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShareRecast;                                            // 0x001D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VIX[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RequiredActionName;                                      // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredNumber;                                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangeMin;                                                // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangeMax;                                                // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DurationMin;                                             // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DurationMax;                                             // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAIEnemyActionLotteryPriority                            Priority;                                                // 0x003C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I5Q3[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WeightGroup;                                             // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0048(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeightInc;                                               // 0x004C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBAIEnemyActionLotteryRules                        AdditionalRules;                                         // 0x0050(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBAIEnemyActionLotteryModifierTrigger                     ModifierTrigger;                                         // 0x0068(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A64Y[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBAIEnemyActionLotteryModifierInstant>             ModifierInstants;                                        // 0x0070(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBAIEnemyActionLotteryPriority                            ModifierPriority;                                        // 0x0080(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OS60[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyDamageEventInfo
	 * Size -> 0x0008
	 */
	struct FSBEnemyDamageEventInfo
	{
	public:
		ESBDamageAttackType                                        AttackType;                                              // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UXM5[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GroupId;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySkillAsset_Base
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBEnemySkillAsset_Base : public FTableRowBase
	{
	public:
		class FString                                              AppearanceId;                                            // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UseId;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecastTime;                                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stamina;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemySkillActivationTrigger                             Trigger;                                                 // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E97E[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySkillAsset_Combo
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	struct FSBEnemySkillAsset_Combo : public FSBEnemySkillAsset_Base
	{
	public:
		class FName                                                ActivationTag;                                           // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySkillAsset_ReactiveSkill
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	struct FSBEnemySkillAsset_ReactiveSkill : public FSBEnemySkillAsset_Base
	{
	public:
		class UClass*                                              ReactiveSkill;                                           // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySkillAsset_TacticalSkill
	 * Size -> 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
	 */
	struct FSBEnemySkillAsset_TacticalSkill : public FSBEnemySkillAsset_Base
	{
	public:
		class UClass*                                              TacticalSkill;                                           // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SABProbability;                                          // 0x0048(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZCS[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAITask_FleeFromParams
	 * Size -> 0x0038
	 */
	struct FSBAITask_FleeFromParams
	{
	public:
		unsigned char                                              UnknownData_6UFH[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAmbientAkEventAssetData
	 * Size -> 0x0030
	 */
	struct FSBAmbientAkEventAssetData
	{
	public:
		unsigned char                                              UnknownData_3F0F[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAnimSingleNodeInstanceProxy
	 * Size -> 0x0000 (FullSize[0x08C0] - InheritedSize[0x08C0])
	 */
	struct FSBAnimSingleNodeInstanceProxy : public FAnimSingleNodeInstanceProxy
	{	};

	/**
	 * ScriptStruct SkyBlue.SBArenaMissionData
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FSBArenaMissionData : public FTableRowBase
	{
	public:
		EArenaMissionAchieveType                                   Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FPF9[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value1;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value2;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitTime;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3SE3[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 MissionRewardHandle;                                     // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                RewardText;                                              // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackDirectionSetting
	 * Size -> 0x0008
	 */
	struct FSBAttackDirectionSetting
	{
	public:
		ESBAttackDirectionOrigin                                   AttackDirectionOrigin;                                   // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttackDirectionType                                     AttackDirection;                                         // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    DirectionYaw;                                            // 0x0002(0x0002) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableBackAttackTrigger : 1;                            // 0x0004(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpecifyGuardDirection : 1;                              // 0x0004(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttackDirectionOrigin                                   AttackDirectionOriginForGuard;                           // 0x0005(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttackDirectionType                                     AttackDirectionForGuard;                                 // 0x0006(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GGQ6[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackStunSetting
	 * Size -> 0x0018
	 */
	struct FSBAttackStunSetting
	{
	public:
		TArray<struct FSBElementDamageSetting>                     ElementDamageList;                                       // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBStunDirection                                           Direction;                                               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLevelDiff;                                              // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKW4[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackHitStopSetting
	 * Size -> 0x0014
	 */
	struct FSBAttackHitStopSetting
	{
	public:
		float                                                      AttackHitStopTime;                                       // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageHitStopTime;                                       // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBHitSlomoPower                                           HitSlomoPower;                                           // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4DD[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bSlomoAttackActor : 1;                                   // 0x000C(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSlomoDamageActor : 1;                                   // 0x000C(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LJ3K[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBHitSlomoType                                            DamageHitStopType;                                       // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AV9D[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLocalOverrideAttackMasterData
	 * Size -> 0x00A8 (FullSize[0x00B0] - InheritedSize[0x0008])
	 */
	struct FSBLocalOverrideAttackMasterData : public FTableRowBase
	{
	public:
		struct FSBAttackID                                         AttackID;                                                // 0x0008(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitCount;                                       // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QF3D[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HitCount;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitInterval;                                    // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZU7[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HitInterval;                                             // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideAttackScale;                                    // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JX0P[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackScale;                                             // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideDamageValue1;                                   // 0x0024(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U153[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    damage_value1;                                           // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideDamageValue2;                                   // 0x002C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N8F3[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    damage_value2;                                           // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideAttackDirectionSetting;                         // 0x0034(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNNS[0x1];                                   // 0x0035(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBAttackDirectionSetting                           AttackDirectionSetting;                                  // 0x0036(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideStunSetting;                                    // 0x003E(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QPW6[0x1];                                   // 0x003F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBAttackStunSetting                                StunSetting;                                             // 0x0040(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitStop;                                        // 0x0058(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MX5[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBAttackHitStopSetting                             HitStop;                                                 // 0x005C(0x0014) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitKnockBack;                                   // 0x0070(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZCKH[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBHitKnockBackSetting                              HitKnockBack;                                            // 0x0074(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideSpecialHitEffectName;                           // 0x008C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2T27[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              special_hit_effect_name;                                 // 0x0090(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitEffectSize;                                  // 0x00A0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OGIT[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HitEffectSize;                                           // 0x00A4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitCameraShake;                                 // 0x00A8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQKZ[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HitCameraShake;                                          // 0x00AC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackThroughConfig
	 * Size -> 0x0008
	 */
	struct FSBAttackThroughConfig
	{
	public:
		ESBDamageAttackType                                        AttackType;                                              // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttackThroughType                                       ThroughType;                                             // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_584T[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AttributeBitMask;                                        // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBElementDamageModifySetting
	 * Size -> 0x0010
	 */
	struct FSBElementDamageModifySetting
	{
	public:
		ESBAttribute                                               ElementType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyElementDamage;                                    // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EIOS[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ElementDamage;                                           // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyCalculationType;                                  // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStunValueCalculation                                    CalculationType;                                         // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyElementDamageModifyRate;                          // 0x000A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SLDV[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ElementDamageModifyRate;                                 // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackStatusData
	 * Size -> 0x0028
	 */
	struct FSBAttackStatusData
	{
	public:
		struct FSBStatusAilmentHandle                              StatusAilment;                                           // 0x0000(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      DelayTime;                                               // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D8JB[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackDeactiveStatusHandleData
	 * Size -> 0x0018
	 */
	struct FSBAttackDeactiveStatusHandleData
	{
	public:
		struct FDataTableRowHandle                                 Handle;                                                  // 0x0000(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDeactiveStatusGivenByOther;                             // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OKJY[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackDeactiveStatusGroupData
	 * Size -> 0x0002
	 */
	struct FSBAttackDeactiveStatusGroupData
	{
	public:
		ESBBattleEffectiveGroup                                    Group;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeactiveStatusGivenByOther;                             // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackMasterDataModifyParam
	 * Size -> 0x0118
	 */
	struct FSBAttackMasterDataModifyParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bOverride;                                               // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyHitInterval;                                      // 0x0011(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8RR4[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HitInterval;                                             // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageModifyRate;                                        // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackScaleModifyRate;                                   // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyDamageValue1;                                     // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QPG9[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageValue1;                                            // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyDownAttackScale;                                  // 0x0028(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DL0I[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DownAttackScale;                                         // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyBadConditionAttackScale;                          // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3E32[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BadConditionAttackScale;                                 // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShieldDamageModifyRate;                                  // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyAttackDirection;                                  // 0x003C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LCAW[0x1];                                   // 0x003D(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBAttackDirectionSetting                           AttackDirectionSetting;                                  // 0x003E(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bModifyAttackThroughConfig;                              // 0x0046(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BJNV[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBAttackThroughConfig                              AttackThroughConfig;                                     // 0x0048(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bModifyStunDirection;                                    // 0x0050(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStunDirection                                           StunDirection;                                           // 0x0051(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXXH[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBElementDamageModifySetting>               ElementDamageModifySettingList;                          // 0x0058(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bModifyHitStop;                                          // 0x0068(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PB85[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBAttackHitStopSetting                             HitStop;                                                 // 0x006C(0x0014) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bModifyHitKnockBack;                                     // 0x0080(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W1VA[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBHitKnockBackSetting                              HitKnockBack;                                            // 0x0084(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bModifyHateScale;                                        // 0x009C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JX7F[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HateScale;                                               // 0x00A0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifySpecialHitEffectName;                             // 0x00A4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CRW[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SpecialHitEffectName;                                    // 0x00A8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WV6[0x8];                                   // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBStatusAilmentHandle>                      GiveStatusAilmentList;                                   // 0x00B8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBAttackStatusData>                         GaveDamageSelfStatusAilmentList;                         // 0x00C8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBAttackStatusData>                         GaveHitSelfStatusAilmentList;                            // 0x00D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBAttackStatusData>                         GaveWeakPointHitSelfStatusAilmentList;                   // 0x00E8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBAttackDeactiveStatusHandleData>           DeactiveStatusHandleList;                                // 0x00F8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBAttackDeactiveStatusGroupData>            DeactiveStatusGroupList;                                 // 0x0108(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackModifyMasterData
	 * Size -> 0x0028
	 */
	struct FSBAttackModifyMasterData
	{
	public:
		int32_t                                                    SettingID;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBAttackMasterDataModifyParam>              ModifyParamList;                                         // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            UseSettingIDList;                                        // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackMasterDataModifyData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBAttackMasterDataModifyData : public FTableRowBase
	{
	public:
		struct FSBAttackID                                         AttackID;                                                // 0x0008(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GDGP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAttackMasterDataModifyParam>              ModiryParamList;                                         // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         ModiryParamRowHandleList;                                // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackParam
	 * Size -> 0x0008
	 */
	struct FSBAttackParam
	{
	public:
		ESBAttackParam                                             Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C3AF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackMasterData
	 * Size -> 0x00F0
	 */
	struct FSBAttackMasterData
	{
	public:
		int32_t                                                    AttackID;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Name;                                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitCount;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitInterval;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttackHitType                                             attack_hit_type;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttackAttributeType                                       attack_attribute_type;                                   // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageType                                                damage_type;                                             // 0x0012(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GVD2[0x1];                                   // 0x0013(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttackScale;                                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_value1;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_value2;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      back_attack_scale;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      down_attack_scale;                                       // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BadConditionAttackScale;                                 // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShieldDamageModifyRate;                                  // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBAttackDirectionSetting                           attack_direction_setting;                                // 0x0030(0x0008) NoDestructor, NativeAccessSpecifierPublic
		ESBDamageAttackType                                        attack_type;                                             // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttackThroughType                                       through_type;                                            // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XTZ8[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAttribute_Explode : 1;                                  // 0x003C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VS9T[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBDamageArmorThroughType                                  damagearmor_through;                                     // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              guard_knockback_override;                                // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSNW[0x2];                                   // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAttribute_Break : 1;                                    // 0x0044(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QW0J[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBAttackStunSetting                                StunSetting;                                             // 0x0048(0x0018) NativeAccessSpecifierPublic
		struct FSBAttackHitStopSetting                             HitStop;                                                 // 0x0060(0x0014) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K5HQ[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              HitSlomoCurveName;                                       // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBHitKnockBackSetting                              HitKnockBack;                                            // 0x0088(0x0018) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Hate;                                                    // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQXW[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              special_hit_effect_name;                                 // 0x00A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T4PA[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAttackParam>                              AttackParam;                                             // 0x00C0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MLI0[0x20];                                  // 0x00D0(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackOverrideMasterData
	 * Size -> 0x0018 (FullSize[0x0108] - InheritedSize[0x00F0])
	 */
	struct FSBAttackOverrideMasterData : public FSBAttackMasterData
	{
	public:
		class FName                                                ChracterID;                                              // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_93QG[0x10];                                  // 0x00F8(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackProjectile
	 * Size -> 0x0010
	 */
	struct FSBAttackProjectile
	{
	public:
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBVertsData
	 * Size -> 0x0060
	 */
	struct FSBVertsData
	{
	public:
		unsigned char                                              UnknownData_MXJX[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEdgeLocation
	 * Size -> 0x0020
	 */
	struct FSBEdgeLocation
	{
	public:
		unsigned char                                              UnknownData_M3RJ[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEdgeInfo
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FSBEdgeInfo : public FSBEdgeLocation
	{
	public:
		unsigned char                                              UnknownData_9MSL[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBVertEdge
	 * Size -> 0x0010
	 */
	struct FSBVertEdge
	{
	public:
		unsigned char                                              UnknownData_RAWJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTileKey
	 * Size -> 0x000C
	 */
	struct FSBTileKey
	{
	public:
		unsigned char                                              UnknownData_SETW[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBParabora
	 * Size -> 0x0028
	 */
	struct FSBParabora
	{
	public:
		unsigned char                                              UnknownData_CKC7[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackHitLaunchProjectile
	 * Size -> 0x0018
	 */
	struct FSBAttackHitLaunchProjectile
	{
	public:
		struct FSBAttackID                                         AttackID;                                                // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1VNN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityPartsModifyParam
	 * Size -> 0x0020
	 */
	struct FSBAbilityPartsModifyParam
	{
	public:
		struct FSBAbilityID                                        AbilityID;                                               // 0x0000(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverride;                                               // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyValue1;                                           // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KV2W[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value1;                                                  // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         Value1Curve;                                             // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bModifyValue2;                                           // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T9K9[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value2;                                                  // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityModifyParam
	 * Size -> 0x0020
	 */
	struct FSBAbilityModifyParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBAbilityPartsModifyParam>                  PartsList;                                               // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAbilityModifyData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBAbilityModifyData : public FTableRowBase
	{
	public:
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSBAbilityModifyParam>                       ModiryParamList;                                         // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAttackHitSelfApplyStatus
	 * Size -> 0x0020
	 */
	struct FSBAttackHitSelfApplyStatus
	{
	public:
		struct FSBAttackID                                         AttackID;                                                // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_01BS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 RowHandle;                                               // 0x0008(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      DelayTime;                                               // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P28I[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleScoreMasterData
	 * Size -> 0x0014
	 */
	struct FSBBattleScoreMasterData
	{
	public:
		int32_t                                                    SettingType;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Coefficient;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Min;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundingType;                                            // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectiveStatusAilmentPriorityInfo
	 * Size -> 0x0008
	 */
	struct FSBEffectiveStatusAilmentPriorityInfo
	{
	public:
		unsigned char                                              UnknownData_CQAG[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectiveStatusProjectile
	 * Size -> 0x0020
	 */
	struct FSBEffectiveStatusProjectile
	{
	public:
		unsigned char                                              UnknownData_4TOA[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusParticleEffect
	 * Size -> 0x0090
	 */
	struct FSBBattleStatusParticleEffect
	{
	public:
		unsigned char                                              Particle[0x28];                                          // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsAttach : 1;                                           // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAbsoluteRotation : 1;                                   // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A504[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEffectTarget                                              AttachTargetType;                                        // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YDQH[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachSocketName;                                        // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorParameterName;                                      // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOutDestroy : 1;                                       // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAutoDestroy : 1;                                      // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSpawnOnlyInvoker : 1;                                 // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActorScalable : 1;                                    // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WTE[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBEffectVisibleType                                       VisibleType;                                             // 0x0044(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C369[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsSourceActorInvoker : 1;                               // 0x0048(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O1S4[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventVariables                                   AkEvent;                                                 // 0x0050(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusEffectActor
	 * Size -> 0x0080
	 */
	struct FSBBattleStatusEffectActor
	{
	public:
		unsigned char                                              EffectActor[0x28];                                       // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bIsAttach : 1;                                           // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZUF8[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEffectTarget                                              AttachTargetType;                                        // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1FJ0[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachSocketName;                                        // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOutDestroy : 1;                                       // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyElementEffectScale : 1;                            // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSpawnOnlyInvoker : 1;                                 // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NWVY[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventVariables                                   AkEvent;                                                 // 0x0040(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusMaterialEffect
	 * Size -> 0x0010
	 */
	struct FSBBattleStatusMaterialEffect
	{
	public:
		class FName                                                MaterialParamName;                                       // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SetValue;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSpawnOnlyInvoker : 1;                                 // 0x000C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5OTK[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusEffect
	 * Size -> 0x0070
	 */
	struct FSBBattleStatusEffect
	{
	public:
		TArray<struct FSBBattleStatusParticleEffect>               ParticleEffectList;                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBBattleStatusEffectActor>                  EffectActorList;                                         // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBBattleStatusMaterialEffect>               MaterialEffectList;                                      // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   AkEvent;                                                 // 0x0030(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusEffectConfig
	 * Size -> 0x01E0 (FullSize[0x01E8] - InheritedSize[0x0008])
	 */
	struct FSBBattleStatusEffectConfig : public FTableRowBase
	{
	public:
		bool                                                       bRestrictOnSpecificCharacter : 1;                        // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableInEffect : 1;                                     // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QH0Y[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBBattleStatusEffect                               InEffect;                                                // 0x0010(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bEnableOverrideEffect : 1;                               // 0x0080(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8BYJ[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBBattleStatusEffect                               OverrideEffect;                                          // 0x0088(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bEnableInOrOverrideEffect : 1;                           // 0x00F8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0UF8[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBBattleStatusEffect                               InOrOverrideEffect;                                      // 0x0100(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bEnableOutEffect : 1;                                    // 0x0170(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTB1[0x7];                                   // 0x0171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBBattleStatusEffect                               OutEffect;                                               // 0x0178(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleItemEffect
	 * Size -> 0x0088
	 */
	struct FSBBattleItemEffect
	{
	public:
		bool                                                       bIsEnable : 1;                                           // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V3DO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Particle[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsAttach : 1;                                           // 0x0030(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R54I[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorParameterName;                                      // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1A3Q[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventVariables                                   AkEvent;                                                 // 0x0048(0x0040) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusProjectile
	 * Size -> 0x0028
	 */
	struct FSBBattleStatusProjectile
	{
	public:
		ESBStatusProjectileRequestCondition                        RequestCondition;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GXA9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBProjectileSelectHandle                           ProjectileSelectHandle;                                  // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		ESBStatusProjectileInvoker                                 InvokerType;                                             // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7R8K[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsAutoDestroy : 1;                                      // 0x0024(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBurstFinishProjectile : 1;                            // 0x0024(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Q2S[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusProjectileConfig
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FSBBattleStatusProjectileConfig : public FTableRowBase
	{
	public:
		bool                                                       bEnableIn : 1;                                           // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WSBR[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBBattleStatusProjectile>                   Ins;                                                     // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bEnableOverride : 1;                                     // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8F75[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBBattleStatusProjectile>                   Overrides;                                               // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bEnableInOrOverride : 1;                                 // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VDO7[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBBattleStatusProjectile>                   InOrOverrides;                                           // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bEnableOut : 1;                                          // 0x0050(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MB0U[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBBattleStatusProjectile>                   Outs;                                                    // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleStatusProjectileID
	 * Size -> 0x0008
	 */
	struct FSBBattleStatusProjectileID
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEffectiveStatusEffect
	 * Size -> 0x0028
	 */
	struct FSBEffectiveStatusEffect
	{
	public:
		unsigned char                                              UnknownData_3OAM[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAilmentMaterialEffect
	 * Size -> 0x000C
	 */
	struct FSBStatusAilmentMaterialEffect
	{
	public:
		class FName                                                MaterialParamName;                                       // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SetValue;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBHitResult
	 * Size -> 0x0004 (FullSize[0x008C] - InheritedSize[0x0088])
	 */
	struct FSBHitResult : public FHitResult
	{
	public:
		unsigned char                                              UnknownData_U90Y[0x4];                                   // 0x0088(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMMuteInTheaterRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBBGMMuteInTheaterRow : public FTableRowBase
	{
	public:
		class FString                                              DemoName;                                                // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMTimeAttackAreaIDRow
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FSBBGMTimeAttackAreaIDRow : public FTableRowBase
	{
	public:
		class FString                                              BGMMapId;                                                // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, class FString>                               AreaIDEachLapMap;                                        // 0x0018(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBGMEventRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBBGMEventRow : public FTableRowBase
	{
	public:
		unsigned char                                              Event[0x28];                                             // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMConditionValueData
	 * Size -> 0x0008
	 */
	struct FSBMapBossBGMConditionValueData
	{
	public:
		ESBBossBGMSettingType                                      SettingType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9OW1[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SettingValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMConditionDataBase
	 * Size -> 0x0018
	 */
	struct FSBMapBossBGMConditionDataBase
	{
	public:
		ESBMapBossBGMConditionType                                 ConditionType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsValidAddCondition;                                    // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A8D3[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBMapBossBGMConditionValueData>             ValueDataArray;                                          // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMThirdConditionData
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FSBMapBossBGMThirdConditionData : public FSBMapBossBGMConditionDataBase
	{	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMSecondConditionData
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FSBMapBossBGMSecondConditionData : public FSBMapBossBGMConditionDataBase
	{
	public:
		TArray<struct FSBMapBossBGMThirdConditionData>             ThirdConditionData;                                      // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMFirstConditionData
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FSBMapBossBGMFirstConditionData : public FSBMapBossBGMConditionDataBase
	{
	public:
		TArray<struct FSBMapBossBGMSecondConditionData>            SecondConditionData;                                     // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMSettingData
	 * Size -> 0x0060
	 */
	struct FSBMapBossBGMSettingData
	{
	public:
		struct FSBMapBossBGMFirstConditionData                     ConditionData;                                           // 0x0000(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ESBBossBGMEventSettingType                                 EventSettingType;                                        // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleBGMType                                           Type;                                                    // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WY4Z[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EventPtr[0x28];                                          // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsBattleEndSetting;                                     // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMapResultSetting;                                     // 0x0059(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6K4O[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMSettingData_EnemyTotal
	 * Size -> 0x0040
	 */
	struct FSBMapBossBGMSettingData_EnemyTotal
	{
	public:
		struct FSBMapBossBGMConditionValueData                     ConditionData;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		ESBBossBGMEventSettingType                                 EventSettingType;                                        // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleBGMType                                           Type;                                                    // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0091[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EventPtr[0x28];                                          // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsBattleEndSetting;                                     // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMapResultSetting;                                     // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CFI5[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBattleSettingData
	 * Size -> 0x0048
	 */
	struct FSBMapBossBattleSettingData
	{
	public:
		ESBMapBossBGMEnemyConditionType                            EnemyConditionType;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3G7O[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      BossEnmeyIDArray;                                        // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMapBossBGMSettingData>                    SettingDataArray;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              EnemyTag;                                                // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMapBossBGMSettingData_EnemyTotal>         SettingDataArray_EnemyTotal;                             // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBossBGMTableRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBMapBossBGMTableRow : public FTableRowBase
	{
	public:
		class FString                                              Memo;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ContentId;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMapBossBattleSettingData>                 BattleDataArray;                                         // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDefaultBossBGMSettingData
	 * Size -> 0x000C
	 */
	struct FSBDefaultBossBGMSettingData
	{
	public:
		ESBBossBGMSettingType                                      SettingType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OX4K[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SettingValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleBGMType                                           BattleBGMType;                                           // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9GZ2[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBUniqueBossBGMSettingData
	 * Size -> 0x0010
	 */
	struct FSBUniqueBossBGMSettingData
	{
	public:
		ESBBossBGMSettingType                                      SettingType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YWZQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SettingValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Event;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBossBGMTableRow
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FSBBossBGMTableRow : public FTableRowBase
	{
	public:
		class FString                                              Memo;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      EnemyIDList;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsMiddleBoss;                                            // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMKS[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBBGMMapGameMode>                                  BGMGameModeList;                                         // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsUniqueBGM;                                            // 0x0040(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJ8C[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBDefaultBossBGMSettingData>                DefaultSettingDataArray;                                 // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ESBResultBGMType                                           DefaultResultBGMType;                                    // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BJVT[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBUniqueBossBGMSettingData>                 UniqueSettingDataArray;                                  // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       UniqueResultBGMType;                                     // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateSlider
	 * Size -> 0x000C
	 */
	struct FSBCharaCreateSlider
	{
	public:
		float                                                      Height;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Physique;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Bust;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateCrtBoneData
	 * Size -> 0x0008
	 */
	struct FSBCharaCreateCrtBoneData
	{
	public:
		ECharaPartsCrtLocation                                     CrtLocation;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsCrtBone                                         CrtBoneID;                                               // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M3G0[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionalVoiceRequest
	 * Size -> 0x0020
	 */
	struct FSBConditionalVoiceRequest
	{
	public:
		unsigned char                                              UnknownData_42VF[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionalVoiceBuddy
	 * Size -> 0x000C
	 */
	struct FSBConditionalVoiceBuddy
	{
	public:
		unsigned char                                              UnknownData_DBQA[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBuddyConditionalVoiceSettings
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBBuddyConditionalVoiceSettings : public FTableRowBase
	{
	public:
		class FName                                                ConditionId;                                             // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SublevelId;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBConditionalVoicePriority                                Priority;                                                // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O9H6[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CancelTime;                                              // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Interval;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBConditionalVoiceRequestType                             RequestType;                                             // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VM76[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBBuddyType>                                       Speakers;                                                // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBuddyEnemyIdData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBBuddyEnemyIdData : public FTableRowBase
	{
	public:
		class FString                                              EnemyId;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBuddyType                                               BuddyType;                                               // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3JQ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.CameraComponentLocationOffsetParam
	 * Size -> 0x0014
	 */
	struct FCameraComponentLocationOffsetParam
	{
	public:
		float                                                      ElapsedDeltaTime;                                        // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeltaTime;                                               // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.LockOnCameraRotateInfo
	 * Size -> 0x0040
	 */
	struct FLockOnCameraRotateInfo
	{
	public:
		float                                                      Offset;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotateStartAngle;                                        // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRotateSpeedCurve;                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_514U[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RotateSpeedCurve[0x28];                                  // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      RotateSpeed;                                             // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOMS[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.LockOnCameraInfo
	 * Size -> 0x0088
	 */
	struct FLockOnCameraInfo
	{
	public:
		bool                                                       bUseFarInfo;                                             // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ANE8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLockOnCameraRotateInfo                             NearInfo;                                                // 0x0008(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FLockOnCameraRotateInfo                             FarInfo;                                                 // 0x0048(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.LockOnCameraSettings
	 * Size -> 0x0118 (FullSize[0x02C8] - InheritedSize[0x01B0])
	 */
	struct FLockOnCameraSettings : public FGameplayCameraSettings
	{
	public:
		ESBLockOnCameraLookPoint                                   LookPoint;                                               // 0x01B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DGP[0x7];                                   // 0x01B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLockOnCameraInfo                                   PitchCameraInfo;                                         // 0x01B8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FLockOnCameraInfo                                   YawCameraInfo;                                           // 0x0240(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCaptureStudioCharacterWeaponData
	 * Size -> 0x0048
	 */
	struct FSBCaptureStudioCharacterWeaponData
	{
	public:
		unsigned char                                              WeaponMesh[0x28];                                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector                                             WeaponLocation;                                          // 0x0028(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0034(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCaptureStudioImagineData
	 * Size -> 0x00D0 (FullSize[0x00D8] - InheritedSize[0x0008])
	 */
	struct FSBCaptureStudioImagineData : public FTableRowBase
	{
	public:
		int32_t                                                    ImagineId;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V4DH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Mesh[0x28];                                              // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              CharaCreate[0x28];                                       // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              Animation[0x28];                                         // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector                                             Location;                                                // 0x0088(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0094(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZT9[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCaptureStudioCharacterWeaponData>         Weapons;                                                 // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              OverrideMaterials[0x10];                                 // 0x00B8(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<int32_t>                                            OffMaterialIndexes;                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCashExchangeShopProductList
	 * Size -> 0x0098
	 */
	struct FSBCashExchangeShopProductList
	{
	public:
		class FString                                              ProductId;                                               // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SellingPriceCash;                                        // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SellingPricePaid;                                        // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SellingPriceFree;                                        // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SoldNumberLimit;                                         // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SaleStartDate;                                           // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SaleEndDate;                                             // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Flags;                                                   // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProductThumbnail;                                        // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProductName;                                             // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProductText;                                             // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProductDetail;                                           // 0x0078(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OfficialComment;                                         // 0x0088(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateColorSet
	 * Size -> 0x00F8
	 */
	struct FSBCharaCreateColorSet
	{
	public:
		unsigned char                                              UnknownData_QGS7[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharaCreateColor                                 Color1;                                                  // 0x0008(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColor                                 Color2;                                                  // 0x0044(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColor                                 Color3;                                                  // 0x0080(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColor                                 Color4;                                                  // 0x00BC(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateColorSetV6
	 * Size -> 0x0078 (FullSize[0x0170] - InheritedSize[0x00F8])
	 */
	struct FSBCharaCreateColorSetV6 : public FSBCharaCreateColorSet
	{
	public:
		struct FSBCharaCreateColor                                 Color5;                                                  // 0x00F8(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSBCharaCreateColor                                 Color6;                                                  // 0x0134(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingActor_AttackRangeSettings
	 * Size -> 0x000C
	 */
	struct FSBCharacterAnimationSamplingActor_AttackRangeSettings
	{
	public:
		unsigned char                                              UnknownData_R95M[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimationSamplingSimulateActionInfo
	 * Size -> 0x0001
	 */
	struct FSBCharacterAnimationSamplingSimulateActionInfo
	{
	public:
		unsigned char                                              UnknownData_2OHU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFaceBlendParameter
	 * Size -> 0x000C
	 */
	struct FSBFaceBlendParameter
	{
	public:
		float                                                      Smile;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Sad;                                                     // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Anger;                                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterAnimInstanceProxy
	 * Size -> 0x0010 (FullSize[0x0830] - InheritedSize[0x0820])
	 */
	struct FSBCharacterAnimInstanceProxy : public FASAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_78NS[0x10];                                  // 0x0820(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBChangeMaterialColorParam
	 * Size -> 0x0010
	 */
	struct FSBChangeMaterialColorParam
	{
	public:
		unsigned char                                              UnknownData_H3OK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantEffectEmitInfo
	 * Size -> 0x0018
	 */
	struct FSBEnemyChantEffectEmitInfo
	{
	public:
		unsigned char                                              UnknownData_F3CM[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyNotifyCastMagicEffectParamsTable
	 * Size -> 0x0010
	 */
	struct FSBEnemyNotifyCastMagicEffectParamsTable
	{
	public:
		TArray<struct FSBEnemyNotifyCastMagicEffectParams>         MagicParams;                                             // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterHisotroyForKPI
	 * Size -> 0x0014
	 */
	struct FSBCharacterHisotroyForKPI
	{
	public:
		unsigned char                                              UnknownData_YFV9[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillTreeHorizonBranchData
	 * Size -> 0x0018
	 */
	struct FSBSkillTreeHorizonBranchData
	{
	public:
		TArray<struct FCharaSkillMasteryInfo>                      SkillList;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ESkillTreeHorizonBranchType                                ForegroundBranchType;                                    // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4BWT[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpeedRateCorrection
	 * Size -> 0x0058
	 */
	struct FSBSpeedRateCorrection
	{
	public:
		unsigned char                                              UnknownData_R0AQ[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterProfileLocationData
	 * Size -> 0x0048
	 */
	struct FSBCharacterProfileLocationData
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GameContentId;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RouteGuideGameContentId;                                 // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WorldLocation;                                           // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MapLocation;                                             // 0x0024(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRouteGuideArea                                          RouteGuideArea;                                          // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableShowIconOnMap;                                   // 0x0031(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1JBF[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventTermId;                                             // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterProfileData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBCharacterProfileData : public FTableRowBase
	{
	public:
		class FName                                                ProfileId;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFacilityType                                            FacilityType;                                            // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LY4Y[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterProfileLocationData>             Locations;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterSlotPurchase
	 * Size -> 0x0008
	 */
	struct FSBCharacterSlotPurchase
	{
	public:
		int32_t                                                    CharacterSlot;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PurchaseAmount;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLastJoinedPartyInfoState
	 * Size -> 0x0020
	 */
	struct FSBLastJoinedPartyInfoState
	{
	public:
		class FString                                              PartyId;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPartyType                                               PartyType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O60A[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExpireTime;                                              // 0x0018(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLastJoinedContentInfoState
	 * Size -> 0x0018
	 */
	struct FSBLastJoinedContentInfoState
	{
	public:
		class FString                                              ContentId;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpireTime;                                              // 0x0010(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyLog
	 * Size -> 0x0020
	 */
	struct FSBEnemyLog
	{
	public:
		class FName                                                EnemyId;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Num;                                                     // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_47UH[0x14];                                  // 0x000C(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyLogLocationCount
	 * Size -> 0x000C
	 */
	struct FSBEnemyLogLocationCount
	{
	public:
		class FName                                                AreaId;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharacterSystemParam
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBCharacterSystemParam : public FTableRowBase
	{
	public:
		float                                                      ATTACK_POWER_COEFFICIENT_A;                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ATTACK_POWER_COEFFICIENT_B;                              // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DEFENSE_POWER_COEFFICIENT;                               // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HEAL_ACTION_COEFFICIENT;                                 // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FLUCTUATION_MIN;                                         // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FLUCTUATION_MAX;                                         // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WEAK_POINT_SCALE;                                        // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ELEMENT_DAMAGE_SCALE_WEAPON_COEFFICIENT;                 // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ELEMENT_DAMAGE_SCALE_ATTACKACTION_COEFFICIENT;           // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ELEMENT_ACCUM_SCALE_WEAPON_COEFFICIENT;                  // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ELEMENT_ACCUM_SCALE_ATTACKACTION_COEFFICIENT;            // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EIYO[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckFatalRecord
	 * Size -> 0x0001
	 */
	struct FSBCheatCheckFatalRecord
	{
	public:
		unsigned char                                              UnknownData_DH9Z[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckHistoryBase
	 * Size -> 0x0001
	 */
	struct FSBCheatCheckHistoryBase
	{
	public:
		unsigned char                                              UnknownData_ASWT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckHistory_Damage
	 * Size -> 0x0000 (FullSize[0x0001] - InheritedSize[0x0001])
	 */
	struct FSBCheatCheckHistory_Damage : public FSBCheatCheckHistoryBase
	{	};

	/**
	 * ScriptStruct SkyBlue.SBCharaPartsData
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FSBCharaPartsData : public FTableRowBase
	{
	public:
		bool                                                       bForceAddCharaCreateViewerList;                          // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomCreation;                                         // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsLocation                                        PartsLocation;                                           // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DQP[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharaPartsData*                                     M000;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     M100;                                                    // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     M200;                                                    // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     M300;                                                    // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     M400;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     M500;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     F000;                                                    // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     F100;                                                    // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     F200;                                                    // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     F300;                                                    // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     F400;                                                    // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharaPartsData*                                     F500;                                                    // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaPartsMobData
	 * Size -> 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
	 */
	struct FSBCharaPartsMobData : public FSBCharaPartsData
	{
	public:
		ENpcJob                                                    PartsJob;                                                // 0x0070(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsAgeGroup                                        AgeGroup;                                                // 0x0071(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsRegion                                          Region;                                                  // 0x0072(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y11C[0x5];                                   // 0x0073(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMobBodyType
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBMobBodyType : public FTableRowBase
	{
	public:
		unsigned char                                              CharaCreateData[0x28];                                   // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		ECharaPartsRegion                                          Region;                                                  // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENpcJob                                                    Role;                                                    // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GNHH[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Group;                                                   // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChatRoomMessage
	 * Size -> 0x0048
	 */
	struct FSBChatRoomMessage
	{
	public:
		class FString                                              RoomId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           Timestamp;                                               // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASBPlayerCharacter*                                  SenderPlayer;                                            // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Nickname;                                                // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MessageBody;                                             // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsChat;                                                 // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3ZR[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBChatSpecialCommandInfo
	 * Size -> 0x0028
	 */
	struct FSBChatSpecialCommandInfo
	{
	public:
		EChatSpecialCommandType                                    CommandType;                                             // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0FV[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Val;                                                     // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBChatLogType                                             ChatLogType;                                             // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC4E[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Message;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTypingError;                                           // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYR6[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheerfulItemAttachmentTypeSpawnSetting
	 * Size -> 0x0010
	 */
	struct FSBCheerfulItemAttachmentTypeSpawnSetting
	{
	public:
		class UClass*                                              ItemActor;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ItemAttachSocketName;                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCheerfulItemOneMotionTypeSpawnSetting
	 * Size -> 0x0010
	 */
	struct FSBCheerfulItemOneMotionTypeSpawnSetting
	{
	public:
		class UClass*                                              ItemActor;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ItemAttachSocketName;                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCheerfulItemTableRow
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FSBCheerfulItemTableRow : public FTableRowBase
	{
	public:
		ESBCheerfulItemType                                        ItemType;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQCO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemIndex;                                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableTimeToConsumeCheerfulItem;                        // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4FE[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeToConsumeCheerfulItem;                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCheerfulProcessMode                                     ProcessMode;                                             // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCheerfulMoveRestrictMode                                MovementRestrictMode;                                    // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowJumpMovement;                                      // 0x001A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowAutoRunMovement;                                   // 0x001B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SLX0[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UASStateMachine*                                     StateMachine;                                            // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UASAnimationSet*                                     AnimationSet;                                            // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBCheerfulItemAttachmentTypeSpawnSetting>   AttachmentTypeItemSpawnSettingList;                      // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBCheerfulItemOneMotionTypeSpawnSetting>    OneMotionTypeItemSpawnSettingList;                       // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBClassChangeBattleCode
	 * Size -> 0x0018
	 */
	struct FSBClassChangeBattleCode
	{
	public:
		class FString                                              CodeName;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7DKI[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRequiredColoringItemForCostumeInfo
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBRequiredColoringItemForCostumeInfo : public FTableRowBase
	{
	public:
		EProtectorCategory                                         CostumePartsType;                                        // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WA23[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RequiredDyeAmount;                                       // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredToningAgent;                                     // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GSXV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCommandMenuChildInstanceData
	 * Size -> 0x0010
	 */
	struct FSBCommandMenuChildInstanceData
	{
	public:
		class UUserWidget*                                         Widget;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RemoveAfterSwitching;                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZE5[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCommandMenuChildData
	 * Size -> 0x0030
	 */
	struct FSBCommandMenuChildData
	{
	public:
		unsigned char                                              WidgetPtr[0x28];                                         // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       RemoveAfterSwitching;                                    // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1D6Z[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCommonLevelItem
	 * Size -> 0x0008
	 */
	struct FSBCommonLevelItem
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    next_exp;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCommonLevelData
	 * Size -> 0x0020
	 */
	struct FSBCommonLevelData
	{
	public:
		class FString                                              Type;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBCommonLevelItem>                          levels;                                                  // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckParticleSystemParam
	 * Size -> 0x0018
	 */
	struct FSBConditionCheckParticleSystemParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ParticleSystem;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckLinearColorParam
	 * Size -> 0x0020
	 */
	struct FSBConditionCheckLinearColorParam
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        ParamColor;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckEffectTableHandle
	 * Size -> 0x0020
	 */
	struct FSBConditionCheckEffectTableHandle
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 EffectTableHandle;                                       // 0x0010(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CraftToken
	 * Size -> 0x000C
	 */
	struct FCraftToken
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCraftTokenType                                          Type;                                                    // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YNRH[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Ratio;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCursorStateHandle
	 * Size -> 0x0004
	 */
	struct FSBCursorStateHandle
	{
	public:
		int32_t                                                    Handle;                                                  // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageEventUploadFlag
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FSBDamageEventUploadFlag : public FSBDamageEventCommonFlag
	{
	public:
		unsigned char                                              UnknownData_E9YQ[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDamageUIRequestInfo
	 * Size -> 0x0020
	 */
	struct FSBDamageUIRequestInfo
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0008(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DamageValue;                                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttributeScale;                                          // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsWeakPointHit;                                         // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGuard;                                                // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCriticalHit;                                          // 0x001E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMiss;                                                 // 0x001F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBulkGetItemProductItemInfo
	 * Size -> 0x000C
	 */
	struct FSBBulkGetItemProductItemInfo
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXE9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddCount;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBulkGetItemProductItemSetInfo
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FSBBulkGetItemProductItemSetInfo : public FTableRowBase
	{
	public:
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Category;                                                // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FSBBulkGetItemProductItemInfo>               ProductItems;                                            // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugMenu
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBDebugMenu : public FTableRowBase
	{
	public:
		class FName                                                TitleName;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          DataTable;                                               // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDebugMenuType                                           Type;                                                    // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_341O[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugMemoSetting
	 * Size -> 0x0028
	 */
	struct FSBDebugMemoSetting
	{
	public:
		class FText                                                ViewText;                                                // 0x0000(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		struct FVector                                             PutLocation;                                             // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CMP9[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.TerrainErrorPt
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTerrainErrorPt : public FTableRowBase
	{
	public:
		float                                                      Idx;                                                     // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Part;                                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      X;                                                       // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Y;                                                       // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TQSW[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDemoData
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FSBDemoData : public FTableRowBase
	{
	public:
		unsigned char                                              LevelSequenceAsset[0x28];                                // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              LevelSequenceClass[0x28];                                // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		ESBDemoVisibleCharacterType                                DemoVisibleCharacterType;                                // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QF0U[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LevelName;                                               // 0x005C(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTheater;                                               // 0x0064(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDemoMediaType                                           MediaType;                                               // 0x0065(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GB9U[0x2];                                   // 0x0066(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Thumbnail[0x28];                                         // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBTheaterData
	 * Size -> 0x0060
	 */
	struct FSBTheaterData
	{
	public:
		class FName                                                RowName;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDemoType                                                ScenarioType;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDemoMediaType                                           MediaType;                                               // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A735[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Chapter;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LevelName;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DemoTitle;                                               // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DemoDescript;                                            // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Thumbnail[0x28];                                         // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SDigitalSignageData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSDigitalSignageData : public FTableRowBase
	{
	public:
		unsigned char                                              Texture[0x28];                                           // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.DungeonClearConditionItemInfo
	 * Size -> 0x0010
	 */
	struct FDungeonClearConditionItemInfo
	{
	public:
		EDungeonClearConditionType                                 Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bProgressTextOverride;                                   // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_92XE[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EnemyId;                                                 // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyAmount;                                             // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.DungeonClearConditionStepInfo
	 * Size -> 0x0010
	 */
	struct FDungeonClearConditionStepInfo
	{
	public:
		TArray<struct FDungeonClearConditionItemInfo>              ConditionItems;                                          // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.DungeonClearConditionInfo
	 * Size -> 0x0010
	 */
	struct FDungeonClearConditionInfo
	{
	public:
		TArray<struct FDungeonClearConditionStepInfo>              Steps;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonProcessTable
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBDungeonProcessTable : public FTableRowBase
	{
	public:
		class FName                                                MapId;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBDungeonProcess>                           DungeonProcess;                                          // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonClearPartyMemberData
	 * Size -> 0x0038
	 */
	struct FSBDungeonClearPartyMemberData
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBPlayerTag>                                TagIDs;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       PartyFlag;                                               // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QTTX[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonRecord
	 * Size -> 0x0030
	 */
	struct FSBDungeonRecord
	{
	public:
		struct FSBDungeonCompleteState                             CompleteState;                                           // 0x0000(0x0014) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I87M[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BestScore;                                               // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MEJ6[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            RapTime;                                                 // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterDxBattleContributonScoreAttenuAtion
	 * Size -> 0x0030
	 */
	struct FSBMasterDxBattleContributonScoreAttenuAtion
	{
	public:
		class FString                                              ManagementId;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameContentId;                                           // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDxBattleContributonScoreType                            ScoreType;                                               // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RIB5[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AttenuationLevel;                                        // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartValue;                                              // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rate;                                                    // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterDxBattleContributonScoreConefficient
	 * Size -> 0x0028
	 */
	struct FSBMasterDxBattleContributonScoreConefficient
	{
	public:
		class FString                                              ManagementId;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameContentId;                                           // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDxBattleContributonScoreType                            ScoreType;                                               // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDxBattleCoefficientScoreType                            CoefficientType;                                         // 0x0021(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X1MQ[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CoefficientValue;                                        // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleSettingData
	 * Size -> 0x00B0
	 */
	struct FSBDxBattleSettingData
	{
	public:
		struct FSBDxBattleMasterData                               MasterData;                                              // 0x0000(0x0088) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0088(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMasterReward>                             RewardList;                                              // 0x0098(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsRaidMasterSet;                                         // 0x00A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsMapMasterSet;                                          // 0x00A9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FKTK[0x6];                                   // 0x00AA(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleOccurringNpcData
	 * Size -> 0x0020
	 */
	struct FSBDxBattleOccurringNpcData
	{
	public:
		class FString                                              MapId;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBCharacterProfileData>                     NpcProfileList;                                          // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDxBattleOccurringCheckData
	 * Size -> 0x0020
	 */
	struct FSBDxBattleOccurringCheckData
	{
	public:
		unsigned char                                              UnknownData_U2GM[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnParamBase
	 * Size -> 0x0008
	 */
	struct FSBSpawnParamBase
	{
	public:
		unsigned char                                              UnknownData_BN5R[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnNiagaraBase
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBSpawnNiagaraBase : public FSBSpawnParamBase
	{
	public:
		EEffectId                                                  EffectId;                                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SF47[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UNiagaraSystem*                                      NiagaraTemplate;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0018(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0024(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0030(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseEffectScale;                                        // 0x003C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAutoDestroy;                                           // 0x003D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENCPoolMethod                                              PoolingMethod;                                           // 0x003E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLightingChannels;                               // 0x003F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLightingChannels                                   OverrideLightingChannels;                                // 0x0040(0x0001) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideElementType;                                    // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttribute                                               OverrideElementType;                                     // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectVisibleType                                       VisibleType;                                             // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVisibleByHiddenSourceActor;                            // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectType                                              EffectType;                                              // 0x0045(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_48BZ[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnNiagaraAttachedParam
	 * Size -> 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
	 */
	struct FSBSpawnNiagaraAttachedParam : public FSBSpawnNiagaraBase
	{
	public:
		class USceneComponent*                                     AttachToComponent;                                       // 0x0048(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachPointName;                                         // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            LocationType;                                            // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F6VN[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnNiagaraAtLocationParam
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FSBSpawnNiagaraAtLocationParam : public FSBSpawnNiagaraBase
	{
	public:
		class AActor*                                              SourceActor;                                             // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnDecalBase
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBSpawnDecalBase : public FSBSpawnParamBase
	{
	public:
		class UMaterialInterface*                                  DecalMaterial;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DecalSize;                                               // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x001C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0028(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      LifeSpan;                                                // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectVisibleType                                       VisibleType;                                             // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVisibleByHiddenSourceActor;                            // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectType                                              EffectType;                                              // 0x003A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W3JE[0x5];                                   // 0x003B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnDecalAttachedParam
	 * Size -> 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
	 */
	struct FSBSpawnDecalAttachedParam : public FSBSpawnDecalBase
	{
	public:
		class USceneComponent*                                     AttachToComponent;                                       // 0x0040(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachPointName;                                         // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            LocationType;                                            // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_46HH[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnDecalAtLocationParam
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	struct FSBSpawnDecalAtLocationParam : public FSBSpawnDecalBase
	{
	public:
		class AActor*                                              SourceActor;                                             // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnEmitterBase
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBSpawnEmitterBase : public FSBSpawnParamBase
	{
	public:
		class UParticleSystem*                                     EmitterTemplate;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEffectId                                                  EffectId;                                                // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ON6Y[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0020(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x002C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseEffectScale;                                        // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAutoDestroy;                                           // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPSCPoolMethod                                             PoolingMethod;                                           // 0x003A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLightingChannels;                               // 0x003B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLightingChannels                                   OverrideLightingChannels;                                // 0x003C(0x0001) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideElementType;                                    // 0x003D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttribute                                               OverrideElementType;                                     // 0x003E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectVisibleType                                       VisibleType;                                             // 0x003F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVisibleByHiddenSourceActor;                            // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectType                                              EffectType;                                              // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FWGE[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnEmitterAttachedParam
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	struct FSBSpawnEmitterAttachedParam : public FSBSpawnEmitterBase
	{
	public:
		class USceneComponent*                                     AttachToComponent;                                       // 0x0048(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachPointName;                                         // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            LocationType;                                            // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9XD[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              OverwriteSourceActor;                                    // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSpawnEmitterAtLocationParam
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FSBSpawnEmitterAtLocationParam : public FSBSpawnEmitterBase
	{
	public:
		class AActor*                                              SourceActor;                                             // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEmotionInfo
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBEmotionInfo : public FTableRowBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ZPJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortNo;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z5Q7[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          IconTexture;                                             // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReleasedFlag;                                            // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AadditionalInfoBitmask;                                  // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AB95[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyActionParamRecastTimeCheck
	 * Size -> 0x000C
	 */
	struct FSBEnemyActionParamRecastTimeCheck
	{
	public:
		class FName                                                EnemyActionName;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NowRecastTime;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyActionConsumeStamina
	 * Size -> 0x0008
	 */
	struct FSBEnemyActionConsumeStamina
	{
	public:
		float                                                      EndValue;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ComboValue;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyOverrideActionParam
	 * Size -> 0x000C
	 */
	struct FSBEnemyOverrideActionParam
	{
	public:
		class FName                                                ActionName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecastTime;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyExtraSpawnActionSetting
	 * Size -> 0x0008
	 */
	struct FSBEnemyExtraSpawnActionSetting
	{
	public:
		class FName                                                SpawnActionStanceName;                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyExtraActionTable
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FSBEnemyExtraActionTable : public FTableRowBase
	{
	public:
		float                                                      InitialRecastTime;                                       // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WNLK[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBEnemyOverrideActionParam>                 OverrideActionParams;                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBSpawnActionSetting                               SpawnActionSetting;                                      // 0x0020(0x0030) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEnemyExtraSpawnActionSetting                     ExtraSpawnActionSetting;                                 // 0x0050(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyActionTableRowBase
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FSBEnemyActionTableRowBase : public FSCTActionTable
	{	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyActionTable
	 * Size -> 0x0050 (FullSize[0x0070] - InheritedSize[0x0020])
	 */
	struct FSBEnemyActionTable : public FSBEnemyActionTableRowBase
	{
	public:
		float                                                      RecastTime;                                              // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZG6J[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 RecastStaminaSyncAction;                                 // 0x0028(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AvailableCount;                                          // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stamina;                                                 // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ChantTime;                                               // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0BRN[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              TurnMotion[0x28];                                        // 0x0048(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyActionTableNormalMode
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FSBEnemyActionTableNormalMode : public FSBEnemyActionTableRowBase
	{	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantMarkerInfo
	 * Size -> 0x0038
	 */
	struct FSBEnemyChantMarkerInfo
	{
	public:
		unsigned char                                              UnknownData_O4IO[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantMarkerParamsTable
	 * Size -> 0x0010
	 */
	struct FSBEnemyChantMarkerParamsTable
	{
	public:
		TArray<struct FSBEnemyChantMarkerParams>                   MarkerParamsList;                                        // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyChantEffectInfo
	 * Size -> 0x0050
	 */
	struct FSBEnemyChantEffectInfo
	{
	public:
		unsigned char                                              UnknownData_WWZM[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyLookAtOutParam
	 * Size -> 0x0020
	 */
	struct FSBEnemyLookAtOutParam
	{
	public:
		unsigned char                                              UnknownData_6QIM[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBLookAtCustomParam                                LookAtCustomParam;                                       // 0x0004(0x001C) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyCharacterAnimInstanceProxy
	 * Size -> 0x0010 (FullSize[0x0840] - InheritedSize[0x0830])
	 */
	struct FSBEnemyCharacterAnimInstanceProxy : public FSBCharacterAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_90BO[0x10];                                  // 0x0830(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyDungeonAttributeData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBEnemyDungeonAttributeData : public FTableRowBase
	{
	public:
		float                                                      ResistRock;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistThunder;                                           // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistFire;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistIce;                                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistLight;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResistDarkness;                                          // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyDxBattleTableRow
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBEnemyDxBattleTableRow : public FTableRowBase
	{
	public:
		class FString                                              Note;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEnemyWalkingMode                                        GateWalkingMode;                                         // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MR6S[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialHitPointRate;                                     // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeltaHitPointRate;                                       // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Interval;                                                // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyExChantEffectEmitInfo
	 * Size -> 0x0020
	 */
	struct FSBEnemyExChantEffectEmitInfo
	{
	public:
		unsigned char                                              UnknownData_5KSE[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMarkerDebugInfo
	 * Size -> 0x0070
	 */
	struct FSBMarkerDebugInfo
	{
	public:
		unsigned char                                              UnknownData_BWZ9[0x70];                                  // 0x0000(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMarkerTargetStateInfo
	 * Size -> 0x0010
	 */
	struct FSBMarkerTargetStateInfo
	{
	public:
		unsigned char                                              UnknownData_WB1R[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInvalidFlyingEnemyReductionData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBInvalidFlyingEnemyReductionData : public FTableRowBase
	{
	public:
		class FName                                                ContentId;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyMinimumDamageData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBEnemyMinimumDamageData : public FTableRowBase
	{
	public:
		class FName                                                AppearanceId;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyReserveSlotNumData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBEnemyReserveSlotNumData : public FTableRowBase
	{
	public:
		int32_t                                                    ChallangeQuestNum;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQPO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyMaxSpawnNumData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBEnemyMaxSpawnNumData : public FTableRowBase
	{
	public:
		int32_t                                                    MaxSpawnNum;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T3DJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveSettingsAssetData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBEnemyWaveSettingsAssetData : public FTableRowBase
	{
	public:
		unsigned char                                              EnemyWaveSettings[0x28];                                 // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySetAssetData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBEnemySetAssetData : public FTableRowBase
	{
	public:
		unsigned char                                              EnemySet[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyBattleStatusConditionalBias
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBEnemyBattleStatusConditionalBias : public FTableRowBase
	{
	public:
		float                                                      HitPoint;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackPower;                                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefencePower;                                            // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaMax;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ElemDmgBias;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V0UT[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyBattleStatusConditionalBiasList
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBEnemyBattleStatusConditionalBiasList : public FTableRowBase
	{
	public:
		TArray<struct FSBEnemyBattleStatusConditionalBias>         BiasData;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyDifficultyData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBEnemyDifficultyData : public FTableRowBase
	{
	public:
		int32_t                                                    StaminaMax;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StaminaRecoverySpeed;                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyLvGapBiasCoefficients
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBEnemyLvGapBiasCoefficients : public FTableRowBase
	{
	public:
		int32_t                                                    QualifyingLvGapMin;                                      // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    QualifyingLvGapMax;                                      // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DisqualifyingLvGapMax;                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DisqualifyingLvGapMin;                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisqualifyingLvGapBiasWithSuperiorEnemy;                 // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisqualifyingLvGapBiasWithInferiorEnemy;                 // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyLvGapBiasData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBEnemyLvGapBiasData : public FTableRowBase
	{
	public:
		float                                                      Exp;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PP50[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCharaCreateDataInfo
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBCharaCreateDataInfo : public FTableRowBase
	{
	public:
		unsigned char                                              CharaCreateData[0x28];                                   // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyMtrlData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBEnemyMtrlData : public FTableRowBase
	{
	public:
		unsigned char                                              Mtrl[0x28];                                              // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyMeshData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBEnemyMeshData : public FTableRowBase
	{
	public:
		unsigned char                                              Mesh[0x28];                                              // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyTypeData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBEnemyTypeData : public FTableRowBase
	{
	public:
		unsigned char                                              EnemyClass[0x28];                                        // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPhaseChangeRuleExpression
	 * Size -> 0x0010
	 */
	struct FSBEnemyPhaseChangeRuleExpression
	{
	public:
		unsigned char                                              UnknownData_SVUM[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPerceivedItemSpawnPoint
	 * Size -> 0x000C (FullSize[0x0018] - InheritedSize[0x000C])
	 */
	struct FSBPerceivedItemSpawnPoint : public FAIFwPerceivedItemPoint
	{
	public:
		unsigned char                                              UnknownData_J8GU[0xC];                                   // 0x000C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySpawnHabitat
	 * Size -> 0x0018
	 */
	struct FSBEnemySpawnHabitat
	{
	public:
		unsigned char                                              UnknownData_WHMI[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemySpawnPoint
	 * Size -> 0x0020
	 */
	struct FSBEnemySpawnPoint
	{
	public:
		unsigned char                                              UnknownData_Y2XW[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyStateChangeKeyPair
	 * Size -> 0x0010
	 */
	struct FSBEnemyStateChangeKeyPair
	{
	public:
		unsigned char                                              UnknownData_CHQZ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveSpawnSettings
	 * Size -> 0x0018
	 */
	struct FSBEnemyWaveSpawnSettings
	{
	public:
		class FString                                              EnemyId;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Num;                                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveLocation
	 * Size -> 0x000C
	 */
	struct FSBEnemyWaveLocation
	{
	public:
		ESBEnemyWaveLocationType                                   Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A7A9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AreaName;                                                // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveRule
	 * Size -> 0x0014
	 */
	struct FSBEnemyWaveRule
	{
	public:
		ESBEnemyWaveRuleType                                       Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1L14[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RemainingCount;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HPRate;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemyTag;                                                // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyWaveSettings
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBEnemyWaveSettings : public FTableRowBase
	{
	public:
		TArray<struct FSBEnemyWaveSpawnSettings>                   Enemies;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBEnemyWaveLocation                                Location;                                                // 0x0018(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSBEnemyWaveRule                                    Rule;                                                    // 0x0024(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Tag;                                                     // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MHZ0[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEngramInfo
	 * Size -> 0x0010
	 */
	struct FSBEngramInfo
	{
	public:
		class UClass*                                              Engram;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChargeValue;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M1U8[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventExecutorTypesDummy
	 * Size -> 0x0010
	 */
	struct FSBEventExecutorTypesDummy
	{
	public:
		class FScriptDelegate                                      Delegate;                                                // 0x0000(0x0010) ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventTermVirtualDateTimeParam
	 * Size -> 0x0018
	 */
	struct FSBEventTermVirtualDateTimeParam
	{
	public:
		unsigned char                                              UnknownData_I1OP[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCountryTimeZoneSetting
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBCountryTimeZoneSetting : public FTableRowBase
	{
	public:
		EFSBCountryTimeZoneType                                    TimeZoneType;                                            // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CH3V[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ShiftHour;                                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShiftMinits;                                             // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8QS[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventTriggerCondition
	 * Size -> 0x0028
	 */
	struct FSBEventTriggerCondition
	{
	public:
		ESBEventTriggerConditionType                               Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DSMV[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value1;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value2;                                                  // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEventTriggerCloseCondition
	 * Size -> 0x0014
	 */
	struct FSBEventTriggerCloseCondition
	{
	public:
		ESBEventTriggerCloseConditionType                          Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HBP0[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                QuestID;                                                 // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Step;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestStatus                                               Status;                                                  // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KA5B[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEventTrigger
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBEventTrigger : public FTableRowBase
	{
	public:
		class USBScriptAsset*                                      ScriptAsset;                                             // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBEventTriggerCondition>                    Conditions;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBEventTriggerCloseCondition>               CloseConditions;                                         // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XU48[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionQuestStatus
	 * Size -> 0x0020
	 */
	struct FSBFieldStatusConditionQuestStatus
	{
	public:
		class FName                                                QuestID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestStatus                                               QuestStatus;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSetProgress;                                            // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KIJP[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              QuestStep;                                               // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionScenarioFlag
	 * Size -> 0x0018
	 */
	struct FSBFieldStatusConditionScenarioFlag
	{
	public:
		struct FDataTableRowHandle                                 FlagHandle;                                              // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bFlagValue;                                              // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WJEJ[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionResearchTeam
	 * Size -> 0x0010
	 */
	struct FSBFieldStatusConditionResearchTeam
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionEventTerm
	 * Size -> 0x0008
	 */
	struct FSBFieldStatusConditionEventTerm
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionEventTermStatus
	 * Size -> 0x000C
	 */
	struct FSBFieldStatusConditionEventTermStatus
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEventTermCheckNormalStatus                              Status;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYPT[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionChallengeQuest
	 * Size -> 0x000C
	 */
	struct FSBFieldStatusConditionChallengeQuest
	{
	public:
		class FName                                                QuestID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFieldStatusChallengeQuestSettingType                    Setting;                                                 // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TPX7[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionQuestConditionItem
	 * Size -> 0x0010
	 */
	struct FSBFieldStatusConditionQuestConditionItem
	{
	public:
		class FName                                                QuestID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConditionItemId;                                         // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCompleted;                                            // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RUAE[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionDungeonActivateFlag
	 * Size -> 0x000C
	 */
	struct FSBFieldStatusConditionDungeonActivateFlag
	{
	public:
		class FName                                                DungeonId;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagValue;                                              // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IQ2X[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionDungeonCompleteFlag
	 * Size -> 0x000C
	 */
	struct FSBFieldStatusConditionDungeonCompleteFlag
	{
	public:
		class FName                                                DungeonId;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagValue;                                              // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9OP[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionItem
	 * Size -> 0x0098
	 */
	struct FSBFieldStatusConditionItem
	{
	public:
		ESBFieldStatusConditionType                                ConditionType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WVVI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBFieldStatusConditionQuestStatus                  QuestStatus;                                             // 0x0008(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionScenarioFlag                 ScenarioFlag;                                            // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionResearchTeam                 ResearchTeam;                                            // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionEventTerm                    EventTerm;                                               // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionEventTermStatus              EventTermStatus;                                         // 0x0058(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionChallengeQuest               ChallengeQuest;                                          // 0x0064(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionQuestConditionItem           QuestConditionItem;                                      // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionDungeonActivateFlag          DungeonActivateFlag;                                     // 0x0080(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBFieldStatusConditionDungeonCompleteFlag          DungeonCompleteFlag;                                     // 0x008C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFacilityIconStatusConditionSetting
	 * Size -> 0x0018
	 */
	struct FSBFacilityIconStatusConditionSetting
	{
	public:
		EFacilityIconStatus                                        Status;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O429[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFieldStatusConditionItem>                 ConditionItems;                                          // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFacilityIconStatusSetting
	 * Size -> 0x0018
	 */
	struct FSBFacilityIconStatusSetting
	{
	public:
		EFacilityIconStatus                                        DefaultStatus;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KMZZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFacilityIconStatusConditionSetting>       ConditionSettings;                                       // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionTokenData
	 * Size -> 0x0050
	 */
	struct FSBFang_expeditionTokenData
	{
	public:
		unsigned char                                              UnknownData_QM8E[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFang_expeditionIconData
	 * Size -> 0x0058
	 */
	struct FSBFang_expeditionIconData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BLKM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Field;                                                   // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Pos;                                                     // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      AreaIdList;                                              // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            StatusList;                                              // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      PlayIdList;                                              // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       NewIconFlag;                                             // 0x0050(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TimeIconFlag;                                            // 0x0051(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMHU[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFeatureSetting
	 * Size -> 0x0018
	 */
	struct FSBFeatureSetting
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Feature_Id;                                              // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Enabled;                                                 // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AH9G[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Version;                                                 // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFreeBuffPointServerInfo
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBFreeBuffPointServerInfo : public FTableRowBase
	{
	public:
		int32_t                                                    object_id;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BRVJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Tag;                                                     // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              map_id;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFAGatherPointLotResult
	 * Size -> 0x0008
	 */
	struct FSBFAGatherPointLotResult
	{
	public:
		int32_t                                                    ItemUniqueId;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTreasureBoxBody
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FSBTreasureBoxBody : public FTableRowBase
	{
	public:
		ESBTreasureBoxRarity                                       Rarity;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D13G[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BodyMesh[0x28];                                          // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              BodyMesh1[0x28];                                         // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusConditionSetting
	 * Size -> 0x0018
	 */
	struct FSBFieldStatusConditionSetting
	{
	public:
		EFieldStatus                                               Status;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEY0[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFieldStatusConditionItem>                 ConditionItems;                                          // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFieldStatusSetting
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBFieldStatusSetting : public FTableRowBase
	{
	public:
		EFieldStatus                                               DefaultStatus;                                           // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3BP9[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFieldStatusConditionSetting>              ConditionSettings;                                       // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishingItemLotInfo
	 * Size -> 0x0020
	 */
	struct FSBFishingItemLotInfo
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemAmount;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemLotRate;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UGJB[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Descript;                                                // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishingItemLotTable
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBFishingItemLotTable : public FTableRowBase
	{
	public:
		TArray<struct FSBFishingItemLotInfo>                       InfoArray;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishLotFlexWeightInfo
	 * Size -> 0x0010
	 */
	struct FSBFishLotFlexWeightInfo
	{
	public:
		unsigned char                                              UnknownData_TRGI[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFishLotFlexInfoTable
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FSBFishLotFlexInfoTable : public FTableRowBase
	{
	public:
		TMap<class FName, float>                                   FishLotRate;                                             // 0x0008(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishLotWeightInfo
	 * Size -> 0x000C
	 */
	struct FSBFishLotWeightInfo
	{
	public:
		unsigned char                                              UnknownData_1N7B[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFishLotInfoTable
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBFishLotInfoTable : public FTableRowBase
	{
	public:
		float                                                      BlueDevil;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScorpionFish;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PufferFish;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JackMackerel;                                            // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Skipjack;                                                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnglerFish;                                              // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Marlin;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemBox;                                                 // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishDisplayInfo
	 * Size -> 0x0038
	 */
	struct FSBFishDisplayInfo
	{
	public:
		bool                                                       UploadSuccess;                                           // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PKSB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RetCode;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FishId;                                                  // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemName;                                                // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Length;                                                  // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NewFish;                                                 // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NewRecord;                                               // 0x0031(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L50M[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFishRarityItem
	 * Size -> 0x0008
	 */
	struct FSBFishRarityItem
	{
	public:
		float                                                      RarityLimit;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishData
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FSBFishData : public FTableRowBase
	{
	public:
		class FString                                              FishName;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FishDescription;                                         // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttribute                                               ElementType;                                             // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_44HG[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ElementAbility;                                          // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FishMesh[0x28];                                          // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UAnimationAsset*                                     Animation;                                               // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   TextTableAsset;                                          // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FishNameTextId;                                          // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FishDescriptionTextId;                                   // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleMin;                                                // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleMax;                                                // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Length;                                                  // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stamina;                                                 // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakTimeMin;                                            // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakTimeMax;                                            // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TiredTimeMin;                                            // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TiredTimeMax;                                            // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TiredRate;                                               // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WiggleStrength;                                          // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WiggleSpeed;                                             // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFishRarityClassId                                       RarityClassId;                                           // 0x00A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFishScaleClassId                                        ScaleClassId;                                            // 0x00A1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZXMR[0x6];                                   // 0x00A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFishRarityItem>                           RarityItemArray;                                         // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishingBaitInfo
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBFishingBaitInfo : public FTableRowBase
	{
	public:
		class FString                                              Descript;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TargetFishId;                                            // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttribute                                               TaregetElementType;                                      // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0EB5[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetHitRate;                                           // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FishSizeId;                                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FishSizeRate;                                            // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFishingRodInfo
	 * Size -> 0x00A0 (FullSize[0x00A8] - InheritedSize[0x0008])
	 */
	struct FSBFishingRodInfo : public FTableRowBase
	{
	public:
		class FString                                              Descript;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FishingRodMesh[0x28];                                    // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      BaseAbility;                                             // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXYY[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      FishingAreaId;                                           // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<ESBAttribute, float>                                  ElementAbility;                                          // 0x0058(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterFmCell
	 * Size -> 0x000C
	 */
	struct FSBMasterFmCell
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBFmCellOpenCondition                                     Condition;                                               // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CMKK[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageCollisionResult
	 * Size -> 0x0040
	 */
	struct FSBFoliageCollisionResult
	{
	public:
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     Particle;                                                // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          Transform;                                               // 0x0010(0x0030) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageCollisionReaction
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FSBFoliageCollisionReaction : public FTableRowBase
	{
	public:
		unsigned char                                              MeshPtr[0x28];                                           // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              MaterialOverride[0x28];                                  // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     Particle;                                                // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFoliageReactionPreset
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBFoliageReactionPreset : public FTableRowBase
	{
	public:
		float                                                      StartRadius;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndRadius;                                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartStrength;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndStrength;                                             // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HalfHeight;                                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Center;                                                  // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Peak;                                                    // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5PZK[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBFusionPerkPickMasterData
	 * Size -> 0x000C
	 */
	struct FSBFusionPerkPickMasterData
	{
	public:
		int32_t                                                    LotteryGroupId;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinValue;                                                // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxValue;                                                // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNameFloat
	 * Size -> 0x000C
	 */
	struct FSBNameFloat
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMinMaxF
	 * Size -> 0x0008
	 */
	struct FSBMinMaxF
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GameServerMasterData
	 * Size -> 0x0038
	 */
	struct FGameServerMasterData
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Address;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAlive;                                                // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5SCG[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClientCount;                                             // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScoreAttackResult
	 * Size -> 0x001C
	 */
	struct FSBScoreAttackResult
	{
	public:
		int32_t                                                    TotalScore;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BestScore;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBDungeonEvaluation                                       RankGrade;                                               // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0S3K[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxComboCount;                                           // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxComboBonus;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillCount;                                               // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillCountBonus;                                          // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMzBattleResult
	 * Size -> 0x0014
	 */
	struct FSBMzBattleResult
	{
	public:
		int32_t                                                    ClearTime;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DeadCount;                                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BurstCount;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChainComboCount;                                         // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RatingTotal;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaVoiceGroupData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBGashaVoiceGroupData : public FTableRowBase
	{
	public:
		class FName                                                GroupId;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LotteryRate;                                             // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9VTV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaExpectDemoLotteryData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBGashaExpectDemoLotteryData : public FTableRowBase
	{
	public:
		ESBGashaExpectDemoType                                     DemoType;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBGashaDemoRank                                           DemoRank;                                                // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PF2A[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Probability;                                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGashaRankUpDemoLotteryData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBGashaRankUpDemoLotteryData : public FTableRowBase
	{
	public:
		ESBRarity                                                  BeforeRarity;                                            // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRarity                                                  AfterRarity;                                             // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KXMT[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Probability;                                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGatherLotConfig
	 * Size -> 0x000C
	 */
	struct FSBGatherLotConfig
	{
	public:
		int32_t                                                    ItemUniqueId;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemNum;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LotRate;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGatherPointConfig
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBGatherPointConfig : public FTableRowBase
	{
	public:
		int32_t                                                    AreaId;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AreaName;                                                // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSpawnNum;                                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBGatherLotConfig>                          LotArray;                                                // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    MinSecondSpawnTime;                                      // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSecondSpawnTime;                                      // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableLimitedSpawn;                                      // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQPL[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StartSpawnTime;                                          // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndSpawnTime;                                            // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxInteractionNum;                                       // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBGrassSoundCountInfo
	 * Size -> 0x000C
	 */
	struct FSBGrassSoundCountInfo
	{
	public:
		unsigned char                                              UnknownData_EP2A[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBHitSlomoCurveConfig
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBHitSlomoCurveConfig : public FTableRowBase
	{
	public:
		class UCurveFloat*                                         CurveData;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLoadCaptureTargetItem
	 * Size -> 0x0020
	 */
	struct FSBLoadCaptureTargetItem
	{
	public:
		class FString                                              TargetType;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TargetId;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBImagineInfo
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBImagineInfo : public FTableRowBase
	{
	public:
		class FName                                                ImagineArtsName;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ImagineArtsTypeNameID;                                   // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ImagineHyouiTypeNameID;                                  // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ImagineSkill[0x28];                                      // 0x0020(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBInitializeWeaponMasterData
	 * Size -> 0x0008
	 */
	struct FSBInitializeWeaponMasterData
	{
	public:
		unsigned char                                              UnknownData_UJKB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestTreasureTickPopData
	 * Size -> 0x0050
	 */
	struct FSBInterruptQuestTreasureTickPopData
	{
	public:
		unsigned char                                              UnknownData_HDK5[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestTreasureEnemyPopParam
	 * Size -> 0x000C
	 */
	struct FSBInterruptQuestTreasureEnemyPopParam
	{
	public:
		bool                                                       Active;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7LJO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TreasureId;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestTreasureTickPopParam
	 * Size -> 0x0014
	 */
	struct FSBInterruptQuestTreasureTickPopParam
	{
	public:
		bool                                                       Active;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6WYO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TreasureId;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PopMax;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PopNum;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeCount;                                               // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestTreasureObjectParam
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBInterruptQuestTreasureObjectParam : public FTableRowBase
	{
	public:
		class FName                                                DataId;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TreasureId;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBInterruptQuestTreasureEnemyPopParam              EnemyPop;                                                // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBInterruptQuestTreasureTickPopParam               TickPop;                                                 // 0x0024(0x0014) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestEnemySpawnRequest
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestEnemySpawnRequest
	{
	public:
		unsigned char                                              UnknownData_31RV[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestEnemySpawnData
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FSBInterruptQuestEnemySpawnData : public FTableRowBase
	{
	public:
		class FString                                              DataBaseId;                                              // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GroupId;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EnemyId;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyLv;                                                 // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x003C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Roll;                                                    // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ClearTargetEnemy;                                        // 0x004C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HBXZ[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestUtilityConditionData
	 * Size -> 0x0038
	 */
	struct FSBInterruptQuestUtilityConditionData
	{
	public:
		EInterruptQuestConditionType                               Condition;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8QBJ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Target;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHB9[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J5PN[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestNamedEnemyParam
	 * Size -> 0x0028
	 */
	struct FSBInterruptQuestNamedEnemyParam
	{
	public:
		class FString                                              EnemyId;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnemyLv;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0014(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Roll;                                                    // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXYV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestDestructibleObject
	 * Size -> 0x0014
	 */
	struct FSBInterruptQuestDestructibleObject
	{
	public:
		class FName                                                DataId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASBDestructible>                      Destructible;                                            // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActive;                                                // 0x0010(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_603K[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInterruptQuestPointCounter
	 * Size -> 0x0018
	 */
	struct FSBInterruptQuestPointCounter
	{
	public:
		TArray<TWeakObjectPtr<class AActor>>                       Actors;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                      Counter;                                                 // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAchieved;                                              // 0x0014(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NPOG[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBItemInUseCanGestureData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBItemInUseCanGestureData : public FTableRowBase
	{
	public:
		TArray<EItemEfficacyType>                                  EfficacyList;                                            // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBItemSelectorInfo
	 * Size -> 0x000C
	 */
	struct FSBItemSelectorInfo
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  Type;                                                    // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSupplyItem;                                            // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0KT3[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLevelingMaterials
	 * Size -> 0x0018
	 */
	struct FSBLevelingMaterials
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StorageNo;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseNum;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryItemMakeListData
	 * Size -> 0x0028
	 */
	struct FSBLibraryItemMakeListData
	{
	public:
		EItemType                                                  Type;                                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4G6E[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecepiId;                                                // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHR6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFindRecepi;                                            // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IL9U[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryEnemyDetailOpenSetting
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBLibraryEnemyDetailOpenSetting : public FTableRowBase
	{
	public:
		int32_t                                                    Element;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Race;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Attribute;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Comment;                                                 // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P0SN[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryEnemySetting
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FSBLibraryEnemySetting : public FTableRowBase
	{
	public:
		bool                                                       Lineup;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Scenario;                                                // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Boss;                                                    // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3OIN[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LibraryName;                                             // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TANQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBLibraryEnemyElementType>                         AttackElement;                                           // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		ESBLibraryEnemyAppearanceTime                              AppearanceTime;                                          // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7T7F[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        SameEnemyId;                                             // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                DetailOpenType;                                          // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModelRotate;                                             // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModelScale;                                              // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraHeight;                                            // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraSideOffset;                                        // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLibraryEnemyViewSetting                                 StandType;                                               // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLibraryEnemyWeaponSetting                               WeaponType;                                              // 0x0059(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z348[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryEnemyPartsBreakData
	 * Size -> 0x000C
	 */
	struct FSBLibraryEnemyPartsBreakData
	{
	public:
		class FName                                                Group;                                                   // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxStep;                                                 // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryEnemyIndividualData
	 * Size -> 0x00E8
	 */
	struct FSBLibraryEnemyIndividualData
	{
	public:
		class FName                                                AppearanceId;                                            // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NameId;                                                  // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        EnemyIDList;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       AllReadFlag;                                             // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LF4R[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class FName>                           AreaData;                                                // 0x0028(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		class FName                                                ModelId;                                                 // 0x0078(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLibraryEnemyPartsBreakData>               PartsData;                                               // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    KillCount;                                               // 0x0090(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CF4X[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, int32_t>                                 ActiveTime;                                              // 0x0098(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryEnemyData
	 * Size -> 0x0028
	 */
	struct FSBLibraryEnemyData
	{
	public:
		class FName                                                BaseEnemyId;                                             // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    RaceId;                                                  // 0x0008(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameId;                                                  // 0x000C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLibraryEnemyIndividualData>               List;                                                    // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		ESBLibraryEnemyViewSetting                                 ViewSetting;                                             // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLibraryEnemyWeaponSetting                               WeaponSetting;                                           // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J27I[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLibraryEnemyAppearanceData
	 * Size -> 0x0090
	 */
	struct FSBLibraryEnemyAppearanceData
	{
	public:
		class FName                                                AppearanceId;                                            // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    RaceId;                                                  // 0x0008(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    NameId;                                                  // 0x000C(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        EnemyIDList;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       AllReadFlag;                                             // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YUBG[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class FName>                           AreaData;                                                // 0x0028(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		class FName                                                ModelId;                                                 // 0x0078(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLibraryEnemyPartsBreakData>               PartsData;                                               // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLightMaterialSchedule
	 * Size -> 0x0018
	 */
	struct FSBLightMaterialSchedule
	{
	public:
		class UMaterialInstanceDynamic*                            MaterialInstance;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParameterName;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Intensity;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZPKT[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryAccumulateLotteryTableMasterData
	 * Size -> 0x0020
	 */
	struct FSBLiquidMemoryAccumulateLotteryTableMasterData
	{
	public:
		unsigned char                                              UnknownData_2353[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLiquidMemoryAccumulateLotteryTableRow
	 * Size -> 0x0008
	 */
	struct FSBLiquidMemoryAccumulateLotteryTableRow
	{
	public:
		unsigned char                                              UnknownData_P96C[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLocationAnchorInfo
	 * Size -> 0x0020
	 */
	struct FSBLocationAnchorInfo
	{
	public:
		unsigned char                                              UnknownData_4TZH[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLocationInfo
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FSBLocationInfo : public FTableRowBase
	{
	public:
		class FName                                                LocationId;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBLocationInfoType                                        Type;                                                    // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I8C7[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                GameContentId;                                           // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RouteGuideGameContentId;                                 // 0x001C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WorldCoordinate;                                         // 0x0024(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MapCoordinate;                                           // 0x0030(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRouteGuideArea                                          RouteGuideArea;                                          // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableShowIconOnMap;                                   // 0x003D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A6IE[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 FieldStatus;                                             // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTextureReplaceData
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBTextureReplaceData : public FTableRowBase
	{
	public:
		EMaterialType                                              MaterialType;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharaPartsLocation                                        CharaPartsLocation;                                      // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_68VJ[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Texture[0x28];                                           // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBCustomTextureData
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FSBCustomTextureData : public FTableRowBase
	{
	public:
		ESBCustomTextureType                                       Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V0LR[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Index;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharacterGender                                         Gender;                                                  // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9J89[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BaseColorTexture[0x28];                                  // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              SpecularTexture[0x28];                                   // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              IdMaskTexture[0x28];                                     // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              HairPatternMaskTexture[0x28];                            // 0x0090(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBMakeupData
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FSBMakeupData : public FTableRowBase
	{
	public:
		ESBMakeupType                                              Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EN9D[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Index;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCharacterGender                                         Gender;                                                  // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanReverse;                                             // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BKZF[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBCharaCreateColorHSV                              DefaultColor;                                            // 0x0014(0x000C) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              MaskTexture[0x28];                                       // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bProjection;                                             // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V61G[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProjectionScale;                                         // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ProjectionOffset;                                        // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MapInterruptQuestInfo
	 * Size -> 0x0028
	 */
	struct FMapInterruptQuestInfo
	{
	public:
		class FName                                                QuestID;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              QuestName;                                               // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             QuestPointActorLocation;                                 // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CK0O[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMapAreaIconTableRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBMapAreaIconTableRow : public FTableRowBase
	{
	public:
		class FName                                                MapId;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Texture[0x28];                                           // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBMapBGConfigTableRow
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FSBMapBGConfigTableRow : public FTableRowBase
	{
	public:
		class FName                                                ZoneId;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Floor;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5GFA[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Texture[0x28];                                           // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector2D                                           CapturePosition;                                         // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CaptureSize;                                             // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           WorldMapPosition;                                        // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UVRange;                                                 // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResolutionMultiplier;                                    // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MenuMapPosition;                                         // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDividedZone;                                           // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_100K[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortId;                                                  // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MenuMapScale;                                            // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDHJ[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMapIconVisibleSettingData
	 * Size -> 0x0010
	 */
	struct FSBMapIconVisibleSettingData
	{
	public:
		int32_t                                                    QuestIndex;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EQuestStatus                                               Status;                                                  // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4STT[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Step;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Visible;                                                 // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HIU3[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMapIconVisibleSettingTableRow
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBMapIconVisibleSettingTableRow : public FTableRowBase
	{
	public:
		class FName                                                LocationId;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BaseVisible;                                             // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1H39[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBMapIconVisibleSettingData>                Settings;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMapPlaceNamePlateConfig
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBMapPlaceNamePlateConfig : public FTableRowBase
	{
	public:
		class FName                                                MapId;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MapPosition;                                             // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NameTextId;                                              // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonDifficultyInfo
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBDungeonDifficultyInfo : public FTableRowBase
	{
	public:
		int32_t                                                    RespawnableNumPerPlayer;                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KL8O[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.FieldActorBuffPointRespawnCheckResult
	 * Size -> 0x0038
	 */
	struct FFieldActorBuffPointRespawnCheckResult
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FreeBuffPointId;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLiquidMemoryInfo>                         LiquidMemoryInfos;                                       // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsLiquidMemoryInfoValid;                                // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsReturnCity;                                            // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInteracted;                                            // 0x0032(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZOI[0x5];                                   // 0x0033(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.FieldActorBuffPointByMapNotifyInfo
	 * Size -> 0x0048
	 */
	struct FFieldActorBuffPointByMapNotifyInfo
	{
	public:
		int32_t                                                    FreeBuffPointId;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_16UC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FreeBuffTag;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameContentId;                                           // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8IX[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBFreeBuffPointView                                       PointView;                                               // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsActivate;                                              // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L4UY[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           UpdateAt;                                                // 0x0040(0x0008) ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBFusionTicketMasterStorage
	 * Size -> 0x0018
	 */
	struct FSBFusionTicketMasterStorage
	{
	public:
		ESBFusionTicketType                                        Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JBRY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBFusionTicketMasterData>                   Data;                                                    // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MasterImagineParams
	 * Size -> 0x0020
	 */
	struct FMasterImagineParams
	{
	public:
		class FString                                              ParamType;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FImagineParameter>                           Params;                                                  // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ImagineLevelData
	 * Size -> 0x0008
	 */
	struct FImagineLevelData
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextExp;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.MasterImagineLevel
	 * Size -> 0x0020
	 */
	struct FMasterImagineLevel
	{
	public:
		class FString                                              LevelType;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FImagineLevelData>                           LevelData;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterSkillType
	 * Size -> 0x0028
	 */
	struct FSBMasterSkillType
	{
	public:
		class FString                                              skill_type;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelCap;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    text_id;                                                 // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    desc_id;                                                 // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    category_id;                                             // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H9BY[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.RandomTreasureBoxChestMapInfo
	 * Size -> 0x0020
	 */
	struct FRandomTreasureBoxChestMapInfo
	{
	public:
		class FString                                              Tag;                                                     // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameContentId;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.RandomTreasureBoxChestContentItems
	 * Size -> 0x0020
	 */
	struct FRandomTreasureBoxChestContentItems
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTreasureBoxRewardType                                   ItemType;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MH8B[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemRarity;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WY25[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.RandomTreasureBoxChestContents
	 * Size -> 0x0020
	 */
	struct FRandomTreasureBoxChestContents
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRandomTreasureBoxChestContentItems>         ItemLists;                                               // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.FieldActorRespawnCheckResult
	 * Size -> 0x0038
	 */
	struct FFieldActorRespawnCheckResult
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GatherPointId;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBLiquidMemoryInfo>                         LiquidMemoryInfos;                                       // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsLiquidMemoryInfoValid;                                // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFiexedRespawn;                                         // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsReturnCity;                                            // 0x0032(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsGathered;                                              // 0x0033(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z22N[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterUploadImage
	 * Size -> 0x0018
	 */
	struct FSBMasterUploadImage
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Filename;                                                // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterVersionData
	 * Size -> 0x0020
	 */
	struct FSBMasterVersionData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Version;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMatchingConfiguration
	 * Size -> 0x0050
	 */
	struct FSBMatchingConfiguration
	{
	public:
		unsigned char                                              UnknownData_X1LD[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMatchingSettings
	 * Size -> 0x0020
	 */
	struct FSBMatchingSettings
	{
	public:
		unsigned char                                              UnknownData_XZAF[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMiniMapQuestAreaConfig
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBMiniMapQuestAreaConfig : public FTableRowBase
	{
	public:
		struct FVector                                             Location;                                                // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GameContentId;                                           // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RouteGuideGameContentId;                                 // 0x001C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRouteGuideArea                                          RouteGuideArea;                                          // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MSTD[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Range;                                                   // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Color;                                                   // 0x002C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CF86[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionQuestMissionSupplier
	 * Size -> 0x0008
	 */
	struct FSBMissionQuestMissionSupplier
	{
	public:
		unsigned char                                              UnknownData_089G[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMissionQuestMissionScoreSkill
	 * Size -> 0x0008
	 */
	struct FSBMissionQuestMissionScoreSkill
	{
	public:
		unsigned char                                              UnknownData_FOH8[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMobRandomSpawnSkinColor
	 * Size -> 0x0018
	 */
	struct FSBMobRandomSpawnSkinColor
	{
	public:
		TArray<int32_t>                                            HueArray;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    MinValue;                                                // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxValue;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMobRandomSpawnHueAndWeight
	 * Size -> 0x0008
	 */
	struct FSBMobRandomSpawnHueAndWeight
	{
	public:
		ESBCharaCreateColorHue                                     Hue;                                                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQOR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMobRandomSpawnHairColor
	 * Size -> 0x0048
	 */
	struct FSBMobRandomSpawnHairColor
	{
	public:
		TArray<ESBCharaCreateColorHue>                             HueArray;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBMobRandomSpawnHueAndWeight>               HueAndWeightArray;                                       // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    MinValue;                                                // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxValue;                                                // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I8T0[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMobMoveParameter
	 * Size -> 0x0008
	 */
	struct FSBMobMoveParameter
	{
	public:
		float                                                      MeanWalkSpeedRate;                                       // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StandardDeviationWalkSpeedRate;                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMobRegionBodyTypeParam
	 * Size -> 0x0068
	 */
	struct FSBMobRegionBodyTypeParam
	{
	public:
		struct FSBMobRandomSpawnSkinColor                          RandomSpawnSkinColor;                                    // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSBMobRandomSpawnHairColor                          RandomSpawnHairColor;                                    // 0x0018(0x0048) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSBMobMoveParameter                                 MobMoveParameter;                                        // 0x0060(0x0008) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMobRegionAndBodyTypeParam
	 * Size -> 0x04E8 (FullSize[0x04F0] - InheritedSize[0x0008])
	 */
	struct FSBMobRegionAndBodyTypeParam : public FTableRowBase
	{
	public:
		ESBMapRegion                                               Region;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H0Z1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBMobRegionBodyTypeParam                           M000;                                                    // 0x0010(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           M100;                                                    // 0x0078(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           M200;                                                    // 0x00E0(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           M300;                                                    // 0x0148(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           M400;                                                    // 0x01B0(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           M500;                                                    // 0x0218(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           F000;                                                    // 0x0280(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           F100;                                                    // 0x02E8(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           F200;                                                    // 0x0350(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           F300;                                                    // 0x03B8(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           F400;                                                    // 0x0420(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBMobRegionBodyTypeParam                           F500;                                                    // 0x0488(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMovieSceneAudioEventTemplate
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FSBMovieSceneAudioEventTemplate : public FMovieSceneEvalTemplate
	{
	public:
		class USBMovieSceneAudioEventSection*                      Section;                                                 // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMovieSceneAudioListenerTemplate
	 * Size -> 0x0288 (FullSize[0x02A8] - InheritedSize[0x0020])
	 */
	struct FSBMovieSceneAudioListenerTemplate : public FMovieSceneEvalTemplate
	{
	public:
		unsigned char                                              UnknownData_PK9M[0x288];                                 // 0x0020(0x0288) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMovieSceneChoiceDialogSectionTemplate
	 * Size -> 0x0090 (FullSize[0x00B0] - InheritedSize[0x0020])
	 */
	struct FSBMovieSceneChoiceDialogSectionTemplate : public FMovieSceneEvalTemplate
	{
	public:
		class USBTextTableAsset*                                   TextTable;                                               // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMovieSceneChoiceDialogSectionData                  ChoiceDialogData;                                        // 0x0028(0x0088) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMovieSceneNotifySectionTemplate
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FSBMovieSceneNotifySectionTemplate : public FMovieSceneEvalTemplate
	{
	public:
		class USBMovieSceneNotifySection*                          Section;                                                 // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct SkyBlue.SBMovieSceneSkeletalAnimationSectionTemplate
	 * Size -> 0x0018 (FullSize[0x0118] - InheritedSize[0x0100])
	 */
	struct FSBMovieSceneSkeletalAnimationSectionTemplate : public FMovieSceneSkeletalAnimationSectionTemplate
	{
	public:
		class UAnimSequenceBase*                                   FemaleAnimation;                                         // 0x0100(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRootMotionType                                          RootMotionType;                                          // 0x0108(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OT97[0x3];                                   // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PreRollFrames;                                           // 0x010C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoop : 1;                                               // 0x0110(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MNWT[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMovieSceneTextWindowSectionTemplate
	 * Size -> 0x0020 (FullSize[0x0040] - InheritedSize[0x0020])
	 */
	struct FSBMovieSceneTextWindowSectionTemplate : public FMovieSceneEvalTemplate
	{
	public:
		class USBTextTableAsset*                                   TextTable;                                               // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                SpeakerId;                                               // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                TextId;                                                  // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ESBMovieSceneTextWindowGender                              Gender;                                                  // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bUseSubtitle;                                            // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SFQP[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.MyCharacterWeaponData
	 * Size -> 0x0038
	 */
	struct FMyCharacterWeaponData
	{
	public:
		class FString                                              WeaponItemUniqueId;                                      // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponItemIndex;                                         // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5NSJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WeaponName;                                              // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponLevel;                                             // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponAura;                                              // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRarity                                                  WeaponRarity;                                            // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y6T5[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.PioneerAbilityList
	 * Size -> 0x0010
	 */
	struct FPioneerAbilityList
	{
	public:
		TArray<struct FSBWarehouseAbilityListUIInfo>               AbilityList;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNaEventPointInfo
	 * Size -> 0x0008
	 */
	struct FSBNaEventPointInfo
	{
	public:
		int32_t                                                    EventId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Point;                                                   // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterNaEventMap
	 * Size -> 0x0018
	 */
	struct FSBMasterNaEventMap
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MapId;                                                   // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventGatherTokenAmount;                                  // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventDefeatTokenAmount;                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventDefeatNamedTokenAmount;                             // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterNaEventOpenByTag
	 * Size -> 0x0014
	 */
	struct FSBMasterNaEventOpenByTag
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventId;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerTagId;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OpenDays;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RewardDays;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNameConventions
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBNameConventions : public FTableRowBase
	{
	public:
		class FString                                              Pattern;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBNameConventionsType                                     Type;                                                    // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseCases;                                                // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BK68[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNetworkCafeReward
	 * Size -> 0x000C
	 */
	struct FSBNetworkCafeReward
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBNetworkCafeRewardType                                   Type;                                                    // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A926[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Quantity;                                                // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcJobData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBNpcJobData : public FTableRowBase
	{
	public:
		ENpcJob                                                    PartsJob;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_50QA[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ShortName;                                               // 0x000C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExtraNpc;                                               // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P2MZ[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcJobAutoCreatePartsData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBNpcJobAutoCreatePartsData : public FTableRowBase
	{
	public:
		ENpcJob                                                    PartsJob;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_M000;                                           // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_M100;                                           // 0x000A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_M300;                                           // 0x000B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_M400;                                           // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_M500;                                           // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_F000;                                           // 0x000E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_F100;                                           // 0x000F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_F300;                                           // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_F400;                                           // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PartsNum_F500;                                           // 0x0012(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9J9D[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.NpcPathPointData
	 * Size -> 0x0018
	 */
	struct FNpcPathPointData
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Tangent;                                                 // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.NpcInSensorActor
	 * Size -> 0x0010
	 */
	struct FNpcInSensorActor
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Length;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TW20[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcSpawnLoadReductionInfo
	 * Size -> 0x0010
	 */
	struct FSBNpcSpawnLoadReductionInfo
	{
	public:
		unsigned char                                              UnknownData_31KP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcSpawnDistanceData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBNpcSpawnDistanceData : public FTableRowBase
	{
	public:
		float                                                      WanderingNpcSpawnDistance;                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StandingNpcSpawnDistance;                                // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcSpawnLoadReductionData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBNpcSpawnLoadReductionData : public FTableRowBase
	{
	public:
		float                                                      EnterFPS;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExitFPS;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxWanderingNpcNum;                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxStandingNpcNum;                                       // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcPathFindQuery
	 * Size -> 0x0010
	 */
	struct FSBNpcPathFindQuery
	{
	public:
		int32_t                                                    SearchFlags;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SearchPathName;                                          // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPathDirection                                             SearchPathDirection;                                     // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPathTarget                                                SearchPathTarget;                                        // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_USH5[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcAIPathMoveRequest
	 * Size -> 0x0028
	 */
	struct FSBNpcAIPathMoveRequest
	{
	public:
		unsigned char                                              UnknownData_ORBT[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcWaitParamCooldownTimeCheck
	 * Size -> 0x000C
	 */
	struct FSBNpcWaitParamCooldownTimeCheck
	{
	public:
		unsigned char                                              UnknownData_M1EW[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcCurrentWaitInfo
	 * Size -> 0x001C
	 */
	struct FSBNpcCurrentWaitInfo
	{
	public:
		unsigned char                                              UnknownData_3SR1[0x1C];                                  // 0x0000(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBNpcWaitParamTableRow
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBNpcWaitParamTableRow : public FTableRowBase
	{
	public:
		ESBNpcWaitType                                             WaitType;                                                // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5EFU[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       CheckPlayEnd;                                            // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8BHB[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayTimeMin;                                             // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayTimeMax;                                             // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooldownTime;                                            // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXOT[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        EnableWait;                                              // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<ENpcJob>                                            EnableJobType;                                           // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBOrnamentColorHSV
	 * Size -> 0x0018
	 */
	struct FSBOrnamentColorHSV
	{
	public:
		unsigned char                                              UnknownData_1KMS[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ID;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Saturation;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_94RD[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBOwnedBuffItemData
	 * Size -> 0x00D8
	 */
	struct FSBOwnedBuffItemData
	{
	public:
		int32_t                                                    Amount;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOutGameBuffType                                           OutGameBuffType;                                         // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L1XN[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FItemMasterData                                     ItemMasterData;                                          // 0x0008(0x00D0) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyState
	 * Size -> 0x0008
	 */
	struct FSBPartyState
	{
	public:
		unsigned char                                              UnknownData_ZUD5[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyStateGeneral
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBPartyStateGeneral : public FSBPartyState
	{
	public:
		bool                                                       bHasConvocation;                                         // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExecuteMigration;                                       // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMigrationResult;                                        // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BOR7[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MigrationSessionId;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MigrationResponseCode;                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRetireGame;                                             // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRecruiting;                                             // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSimplycityPartyOn;                                      // 0x0026(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QDXZ[0x1];                                   // 0x0027(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyMemberRepState
	 * Size -> 0x0048
	 */
	struct FSBPartyMemberRepState
	{
	public:
		unsigned char                                              UnknownData_1B4W[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterId;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OnlineStatus;                                            // 0x0018(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HYZA[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClassLevel;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalPower;                                              // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0028(0x0020) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPartyMemberRepStateGeneral
	 * Size -> 0x0050 (FullSize[0x0098] - InheritedSize[0x0048])
	 */
	struct FSBPartyMemberRepStateGeneral : public FSBPartyMemberRepState
	{
	public:
		class FString                                              SessionId;                                               // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ActivateDungeons;                                        // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bConvocation;                                            // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAgreeToMigration;                                       // 0x0069(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8RK2[0x6];                                   // 0x006A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GameContentId;                                           // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameLimitTime;                                           // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInMissionResult;                                      // 0x0084(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInDungeon;                                            // 0x0085(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SGDY[0x2];                                   // 0x0086(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapName;                                                 // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMigrationInfo
	 * Size -> 0x0018
	 */
	struct FSBMigrationInfo
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitTime;                                               // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GGAG[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBInviteInfo
	 * Size -> 0x0038
	 */
	struct FSBInviteInfo
	{
	public:
		class FString                                              LeaderId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LeaderName;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterId;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitTime;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           PrivilegeType;                                           // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1LU6[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.BerserkerComponentSettings
	 * Size -> 0x0002
	 */
	struct FBerserkerComponentSettings
	{
	public:
		unsigned char                                              UnknownData_8ZCQ[0x2];                                   // 0x0000(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBlasterSpreadShotAreaModifySetting
	 * Size -> 0x0018
	 */
	struct FSBBlasterSpreadShotAreaModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    ModifyRate;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JK5D[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveArtsParam
	 * Size -> 0x0010
	 */
	struct FSBPassiveArtsParam
	{
	public:
		unsigned char                                              UnknownData_P7AY[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLancerShortULTRecastInfo
	 * Size -> 0x0010
	 */
	struct FSBLancerShortULTRecastInfo
	{
	public:
		int64_t                                                    ActivateTime;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActivated;                                            // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M4TB[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBMagicianProcCondition
	 * Size -> 0x0008
	 */
	struct FSBMagicianProcCondition
	{
	public:
		uint32_t                                                   ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive : 1;                                             // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FKL[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPerformanceCameraData
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FSBPerformanceCameraData : public FTableRowBase
	{
	public:
		ESBPerformanceCameraType                                   Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IDYK[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LifeSpan;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2VYE[0x1C];                                  // 0x0014(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBPerformanceCameraWatchPointBase                         WatchPoint;                                              // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NYRZ[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WatchPointSocketName;                                    // 0x0034(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepWatching;                                           // 0x003C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWatchMidPoint;                                          // 0x003D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AS19[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector*                                        WatchPointOffsetData;                                    // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPerformanceCameraLocationBase                           LocationBase;                                            // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IUFC[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LocationSocketName;                                      // 0x004C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttach;                                                 // 0x0054(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P5MN[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector*                                        LocationData;                                            // 0x0058(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                     LocationAnimData;                                        // 0x0060(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPerformanceCameraLocationOffsetRotation                 LocationOffsetRotation;                                  // 0x0068(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4116[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CameraShake;                                             // 0x0070(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         ScaleToOffsetZ;                                          // 0x0078(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPineVillageTierRewards
	 * Size -> 0x0018
	 */
	struct FSBPineVillageTierRewards
	{
	public:
		int32_t                                                    Group;                                                   // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CITU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      RewardIds;                                               // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterPineVillageLeagues
	 * Size -> 0x0028
	 */
	struct FSBMasterPineVillageLeagues
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MasterPointRankingEventId;                               // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPineVillageLeaguesType                                  LeagueType;                                              // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JB11[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PromotionAbovePercentage;                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DemotionBelowPercentage;                                 // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConsecutiveDayAmountForDemotionJudgement;                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBPineVillageTierRewards>                   TierRewards;                                             // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPineVillageRankingRewards
	 * Size -> 0x0018
	 */
	struct FSBPineVillageRankingRewards
	{
	public:
		int32_t                                                    MinRank;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxRank;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      RewardIds;                                               // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBMasterPineVillageEvents
	 * Size -> 0x0050
	 */
	struct FSBMasterPineVillageEvents
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LHV1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PreparationPeriodTermId;                                 // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CompetitionPeriodTermId;                                 // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BenefitPeriodTermId;                                     // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PointTokenId;                                            // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E58N[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBPineVillageRankingRewards>                RankingRewards;                                          // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatReceiveLogInfo
	 * Size -> 0x0050
	 */
	struct FSBCheatReceiveLogInfo
	{
	public:
		unsigned char                                              UnknownData_NFPF[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAutoQuestComponentData
	 * Size -> 0x0030
	 */
	struct FSBAutoQuestComponentData
	{
	public:
		int32_t                                                    ClassExp;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N7O8[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterToken>                           TokenList;                                               // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBExtraExpParse                                    ClassExtraExp;                                           // 0x0018(0x0018) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.PlayerCastSkillInfo
	 * Size -> 0x000C
	 */
	struct FPlayerCastSkillInfo
	{
	public:
		unsigned char                                              UnknownData_DD4H[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBClientManagedProperty
	 * Size -> 0x0030
	 */
	struct FSBClientManagedProperty
	{
	public:
		float                                                      Stamina;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SubArtsRecastTime;                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts1RecastTime;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts2RecastTime;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts3RecastTime;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts4RecastTime;                                         // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts5RecastTime;                                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts6RecastTime;                                         // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts7RecastTime;                                         // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Arts8RecastTime;                                         // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImagineArtsRecastTime;                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImagineArts2RecastTime;                                  // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerContentActionSettingRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBPlayerContentActionSettingRow : public FTableRowBase
	{
	public:
		ESBPlayerContentActionType                                 ContentActionType1;                                      // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerContentActionType                                 ContentActionType2;                                      // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8AS5[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerContentActionSetting
	 * Size -> 0x0008
	 */
	struct FSBPlayerContentActionSetting
	{
	public:
		struct FSBActiveArtsID                                     ContentActionSkill1;                                     // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBActiveArtsID                                     ContentActionSkill2;                                     // 0x0004(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillBuffData
	 * Size -> 0x0010
	 */
	struct FSBSkillBuffData
	{
	public:
		TArray<class FName>                                        BuffList;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSkillData
	 * Size -> 0x0180 (FullSize[0x0188] - InheritedSize[0x0008])
	 */
	struct FSBPlayerSkillData : public FTableRowBase
	{
	public:
		int32_t                                                    SkillId;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B3F4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SkillInfo[0x28];                                         // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              IconAssetList[0x10];                                     // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              LargeIconAssetList[0x10];                                // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              DetailIconAsset[0x28];                                   // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    DisplayPriority;                                         // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZ4W[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FSBSkillBuffData>                     BufIconMap;                                              // 0x0088(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBSkillIconBgType                                         BgType;                                                  // 0x00D8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBSkillElementIconType                                    ElementType;                                             // 0x00D9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJD0[0x6];                                   // 0x00DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, ESBSkillIconBgType>                          ExpansionBgType;                                         // 0x00E0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bActiveAbilityBGUse;                                     // 0x0130(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PIQU[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, ESBSkillElementIconType>                     ExpansionElementType;                                    // 0x0138(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBChatOnlineStatus
	 * Size -> 0x0028
	 */
	struct FSBChatOnlineStatus
	{
	public:
		int32_t                                                    OnlineStatusId;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBlackListed;                                           // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBlackListedBy;                                         // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsPSOnly;                                                // 0x0006(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFVA[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBPlatformInfo                                     PlatformInfo;                                            // 0x0008(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugRespawnPointData
	 * Size -> 0x0020
	 */
	struct FSBDebugRespawnPointData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EXVL[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBReturnLocation
	 * Size -> 0x0014
	 */
	struct FSBReturnLocation
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ERR9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Yaw;                                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugGatherPlayerParam
	 * Size -> 0x0090
	 */
	struct FSBDebugGatherPlayerParam
	{
	public:
		int32_t                                                    CharacterLevel;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterExp;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentHitPoint;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHitPoint;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharacterStatus                                  CharacterStatus;                                         // 0x0010(0x0040) NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bInvincibleMotion;                                       // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     InvincibleAnimationType;                                 // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBInvincibleLevel                                         InvincibleLevel;                                         // 0x0052(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HUYB[0x1];                                   // 0x0053(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bWaitTimeDone : 1;                                       // 0x0054(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalWarpFlag : 1;                                      // 0x0054(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9Z3[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WarpState;                                               // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingWarpAroundEffect : 1;                            // 0x005C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FYB6[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ActiveArtsList;                                          // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        ImagineArtsList;                                         // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            PassiveArtsList;                                         // 0x0080(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugGatherAroundPlayerParam
	 * Size -> 0x0020 (FullSize[0x00B0] - InheritedSize[0x0090])
	 */
	struct FSBDebugGatherAroundPlayerParam : public FSBDebugGatherPlayerParam
	{
	public:
		class FString                                              PlayerName;                                              // 0x0090(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      CurrentStateInfo;                                        // 0x00A0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBBattleDebugParam
	 * Size -> 0x0008
	 */
	struct FSBBattleDebugParam
	{
	public:
		unsigned char                                              UnknownData_VOO6[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBBattleDebugParamVariableType                            VariableType;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W5UE[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBElQuestComponentData
	 * Size -> 0x0030
	 */
	struct FSBElQuestComponentData
	{
	public:
		int32_t                                                    ClassExp;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AX6O[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterToken>                           TokenList;                                               // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBExtraExpParse                                    ClassExtraExp;                                           // 0x0018(0x0018) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkillForecastSetting
	 * Size -> 0x0048
	 */
	struct FSBSkillForecastSetting
	{
	public:
		unsigned char                                              ForecastActor[0x28];                                     // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FVector                                             AttackCollisionSize;                                     // 0x0028(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStepHeight;                                           // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StepDetectPrecision;                                     // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FloorCheckHeight;                                        // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsForcastFrontOfTarget;                                  // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2MEI[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEmoteGimmickInfo
	 * Size -> 0x0008
	 */
	struct FSBEmoteGimmickInfo
	{
	public:
		int32_t                                                    gimmick_point_id;                                        // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    action_date;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBInteractionSearchPriority
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBInteractionSearchPriority : public FTableRowBase
	{
	public:
		ESBInteractionType                                         InteractionType;                                         // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInteractionTargetType                                     InteractionTargetType;                                   // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DCI0[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBInteractionSearchPriorityAdditional>             Additionals;                                             // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveParamModifySetting
	 * Size -> 0x0018
	 */
	struct FSBPassiveParamModifySetting
	{
	public:
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBPassiveParamModifyValue                          ModifyValue;                                             // 0x0010(0x0008) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveCategoryParamModifySetting
	 * Size -> 0x0018
	 */
	struct FSBPassiveCategoryParamModifySetting
	{
	public:
		ESBPassiveArtsModifyCategory                               Category;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X8TI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBPassiveParamModifySetting>                ParamModifySettingList;                                  // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerPassiveSkillData
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FSBPlayerPassiveSkillData : public FTableRowBase
	{
	public:
		int32_t                                                    PassiveSkillID;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0Y7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PassiveSkill[0x28];                                      // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FSBPassiveCategoryParamModifySetting>        CategoryParamModifySettingList;                          // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              Icon[0x28];                                              // 0x0048(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              LargeIcon[0x28];                                         // 0x0070(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FSBActiveArtsID>                             CorrespondActiveArtsList;                                // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    DisplayPriority;                                         // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FUZF[0xC];                                   // 0x00AC(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPassiveStatusParamModifyValue
	 * Size -> 0x0004 (FullSize[0x000C] - InheritedSize[0x0008])
	 */
	struct FSBPassiveStatusParamModifyValue : public FSBPassiveParamModifyValue
	{
	public:
		ESBPassiveArtsModifyCategory                               Category;                                                // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N3QA[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPnQuestComponentData
	 * Size -> 0x0030
	 */
	struct FSBPnQuestComponentData
	{
	public:
		int32_t                                                    ClassExp;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WGS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBCharacterToken>                           TokenList;                                               // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FSBExtraExpParse                                    ClassExtraExp;                                           // 0x0018(0x0018) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerWarpPoint
	 * Size -> 0x0008
	 */
	struct FSBPlayerWarpPoint
	{
	public:
		class FName                                                WarpPointId;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardBoostFangExpeditionMasterData
	 * Size -> 0x0010
	 */
	struct FSBRewardBoostFangExpeditionMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardBoostFangExpeditionType                           Type;                                                    // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1U5[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRewardBoostStackBMasterData
	 * Size -> 0x002C
	 */
	struct FSBRewardBoostStackBMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRewardBoostStackBItemType                               ItemType;                                                // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M47X[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackBNumMin;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackBNumMax;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SupportItemId;                                           // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DiscountLuno;                                            // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuccessRate;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DiscountSupportRate;                                     // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DiscountSupportAmount;                                   // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBTextTableHash                                    DescTextId;                                              // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSessionData
	 * Size -> 0x0048
	 */
	struct FSBPlayerSessionData
	{
	public:
		class FString                                              CharacterId;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0010(0x0018) NativeAccessSpecifierPublic
		class FString                                              SessionId;                                               // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OnlineStatus;                                            // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ContentId;                                               // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FW77[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBResonanceSpearSpreadHitCharacter
	 * Size -> 0x000C
	 */
	struct FSBResonanceSpearSpreadHitCharacter
	{
	public:
		unsigned char                                              UnknownData_T9C8[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerStatusMapTravelMasterData
	 * Size -> 0x0060
	 */
	struct FSBPlayerStatusMapTravelMasterData
	{
	public:
		class FName                                                SettingName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMapType                                                 SourceMapType;                                           // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CHZV[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SourceMapName;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBMapType                                                 DestMapType;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6JUG[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DestMapName;                                             // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPlayerStatusTravelType                                  StatusTravelType;                                        // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritanceHP;                                          // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61LG[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SetHpRate;                                               // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritanceST;                                          // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritanceArtsRecastTime;                              // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4KD[0x2];                                   // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SetArtsRecastTimeRate;                                   // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritanceSpecialSkillRecastTime;                      // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OLBU[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SetSpecialSkillRecastTimeRate;                           // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritanceBattleImagineRecastTime;                     // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q0TK[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SetBattleImagineRecastTimeRate;                          // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritanceFrailAilmentEffectTime;                      // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritanceMountImagineStatus;                          // 0x0059(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C56R[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerStatusMasterCommonData
	 * Size -> 0x00A4
	 */
	struct FSBPlayerStatusMasterCommonData
	{
	public:
		class FName                                                Class;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    primary_rate_limit;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    primary_rate_floor;                                      // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str_factor_of_ap;                                        // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex_factor_of_ap;                                        // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    int_factor_of_ap;                                        // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mnd_factor_of_ap;                                        // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ap_rate_limit;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ap_rate_floor;                                           // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_type;                                             // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    vit_factor_of_dp;                                        // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str_factor_of_dp;                                        // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dp_rate_limit;                                           // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dp_rate_floor;                                           // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    int_factor_of_rp;                                        // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mnd_factor_of_rp;                                        // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    rp_rate_limit;                                           // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    rp_rate_floor;                                           // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex_factor_of_cr;                                        // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mnd_factor_of_cr;                                        // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex_decay_rate_of_cr;                                    // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cr_limit;                                                // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str_factor_of_cp;                                        // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    int_factor_of_cp;                                        // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    vit_factor_of_hp;                                        // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_rate_limit;                                           // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_rate_floor;                                           // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    vit_factor_of_st;                                        // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    st_rate_limit;                                           // 0x0074(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    st_rate_floor;                                           // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    st_base_value;                                           // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_resist_value;                                       // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ice_resist_value;                                        // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    thunder_resist_value;                                    // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_resist_value;                                      // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    light_resist_value;                                      // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    darkness_resist_value;                                   // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    slash_resist_value;                                      // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bow_resist_value;                                        // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    thrust_resist_value;                                     // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerStatusMasterDataRaw
	 * Size -> 0x004C
	 */
	struct FSBPlayerStatusMasterDataRaw
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Class;                                                   // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Lv;                                                      // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HP;                                                      // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    STR;                                                     // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VIT;                                                     // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DEX;                                                     // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    INT;                                                     // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MND;                                                     // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ap;                                                      // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DP;                                                      // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RP;                                                      // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CR;                                                      // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cp;                                                      // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PCL;                                                     // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ICL;                                                     // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Class_Shared_Ability_Num;                                // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBActiveItemList
	 * Size -> 0x0010
	 */
	struct FSBActiveItemList
	{
	public:
		TArray<struct FSBActiveItemData>                           ActiveItems;                                             // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSendIdentifiedMaterialsToWarehouseData
	 * Size -> 0x0048
	 */
	struct FSBSendIdentifiedMaterialsToWarehouseData
	{
	public:
		TArray<struct FOwnItemInfo>                                DirtyItems;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                MoveItems;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOwnItemInfo>                                IgnoredItems;                                            // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SaleProfits;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DoesUserBelongsToParty;                                  // 0x0034(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAuto;                                                 // 0x0035(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7GG3[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           AutoDeliverlyStartTime;                                  // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           AutoDeliverlyExpirationTime;                             // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTreasureBoxProcessCheck
	 * Size -> 0x0018
	 */
	struct FSBTreasureBoxProcessCheck
	{
	public:
		unsigned char                                              UnknownData_OHN0[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerBanFinishedTimeInfo
	 * Size -> 0x000C
	 */
	struct FSBPlayerBanFinishedTimeInfo
	{
	public:
		int32_t                                                    Day;                                                     // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Hour;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Minute;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugGatherStateMachine
	 * Size -> 0x0038
	 */
	struct FSBDebugGatherStateMachine
	{
	public:
		class FString                                              StateMachineNodeName;                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StateMachineName;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentState;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDDE[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      StateNames;                                              // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugGatherStateMachineParam
	 * Size -> 0x0020
	 */
	struct FSBDebugGatherStateMachineParam
	{
	public:
		TArray<struct FSBDebugGatherStateMachine>                  StateMachines;                                           // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      ActiveTags;                                              // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerClassData
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBPlayerClassData : public FTableRowBase
	{
	public:
		ESBClassType                                               ClassType;                                               // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T6DA[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              CharacterBP[0x28];                                       // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    ViewPriority;                                            // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B299[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerVoiceBankTable
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBPlayerVoiceBankTable : public FTableRowBase
	{
	public:
		unsigned char                                              BankAsset[0x28];                                         // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBUserOnlineAccountCharacter
	 * Size -> 0x00D8
	 */
	struct FSBUserOnlineAccountCharacter
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              shortId;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               Role;                                                    // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W9WC[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ReturnSessionId;                                         // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastMapName;                                             // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PermanentDeletedAt;                                      // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M67E[0x50];                                  // 0x0068(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bCompletedTutorial;                                      // 0x00B8(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1BIH[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      ActivateWarppoints;                                      // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    CommandMenuPlayerAvatarPoseId;                           // 0x00D0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NVG7[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerBuffInfo
	 * Size -> 0x0010
	 */
	struct FSBPlayerBuffInfo
	{
	public:
		float                                                      HitPoint;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicPoint;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stamina;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackPowerScale;                                        // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBClassOrderedBuffInfo
	 * Size -> 0x0010
	 */
	struct FSBClassOrderedBuffInfo
	{
	public:
		TArray<struct FSBPlayerBuffInfo>                           ClassOrderedBuffs;                                       // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckContainerSet_PlayerSatisfiedConditionCheck
	 * Size -> 0x0010
	 */
	struct FSBCheatCheckContainerSet_PlayerSatisfiedConditionCheck
	{
	public:
		unsigned char                                              UnknownData_A447[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckContainer_PlayerSatisfiedConditionCheck
	 * Size -> 0x0010
	 */
	struct FSBCheatCheckContainer_PlayerSatisfiedConditionCheck
	{
	public:
		unsigned char                                              UnknownData_91I7[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckHistory_MoveOnServer
	 * Size -> 0x0001
	 */
	struct FSBCheatCheckHistory_MoveOnServer
	{
	public:
		unsigned char                                              UnknownData_QU4Z[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckHistoryData_MoveOnServer
	 * Size -> 0x0000 (FullSize[0x0001] - InheritedSize[0x0001])
	 */
	struct FSBCheatCheckHistoryData_MoveOnServer : public FSBCheatCheckHistoryBase
	{	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckHistory_CastSkill
	 * Size -> 0x0000 (FullSize[0x0001] - InheritedSize[0x0001])
	 */
	struct FSBCheatCheckHistory_CastSkill : public FSBCheatCheckHistoryBase
	{	};

	/**
	 * ScriptStruct SkyBlue.SBCheatCheckHistory_CheckPoint_TA
	 * Size -> 0x0000 (FullSize[0x0001] - InheritedSize[0x0001])
	 */
	struct FSBCheatCheckHistory_CheckPoint_TA : public FSBCheatCheckHistoryBase
	{	};

	/**
	 * ScriptStruct SkyBlue.SBWarpDestinationLocationInfo
	 * Size -> 0x0030
	 */
	struct FSBWarpDestinationLocationInfo
	{
	public:
		unsigned char                                              UnknownData_2O8B[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSaveProjectileBaseSpawnParam
	 * Size -> 0x00B8
	 */
	struct FSBSaveProjectileBaseSpawnParam
	{
	public:
		unsigned char                                              UnknownData_XU2U[0xB8];                                  // 0x0000(0x00B8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileHitRelativeDamage
	 * Size -> 0x0058
	 */
	struct FSBProjectileHitRelativeDamage
	{
	public:
		EDamageType                                                CalcDamageType;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLFZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              EventSBDamageType;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageScale;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage2;                                                 // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitDamage;                                             // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBAttackThroughConfig                              ThroughConfig;                                           // 0x0020(0x0008) NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         StatusAliments;                                          // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         SelfStatusAliments;                                      // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 EffectHandle;                                            // 0x0048(0x0010) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileStability
	 * Size -> 0x000C
	 */
	struct FSBProjectileStability
	{
	public:
		float                                                      HorizontalHalfAngle;                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalHalfAngle;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVerticalUpOnly;                                         // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P1O4[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileShotAngleLimit
	 * Size -> 0x0014
	 */
	struct FProjectileShotAngleLimit
	{
	public:
		bool                                                       bIsEnable : 1;                                           // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I7O6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EProjectileBaseDir                                         BaseDirType;                                             // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1UW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HalfAngle;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpAngle;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DownAngle;                                               // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSpawnInfo
	 * Size -> 0x006C
	 */
	struct FProjectileSpawnInfo
	{
	public:
		ESpawnType                                                 SpawnType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpawnRotType                                              SpawnRotType;                                            // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProjectileDirection                                       DirectionType;                                           // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ENZ6[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SpawnSocketName;                                         // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SpawnOffset;                                             // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            SpawnRotOffset;                                          // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             SpawnTargetOffset;                                       // 0x0024(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAttach : 1;                                           // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T7B1[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EProjectileNonTargetAction                                 NonTargetAction;                                         // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIL0[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NonTargetSpawnDistanceFront;                             // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPenetrateInObstacle : 1;                              // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDestroyInObstacle : 1;                                // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isObstaclePushedBackToSpawner : 1;                       // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCheckGround : 1;                                      // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isDisalbeScreenViewDirectionObstacleAttackHit : 1;       // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isOnNaviMeshConnedtedFromOwner : 1;                      // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsReacquireSpawnTransformOnLocal : 1;                   // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5VDK[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBProjectileStability                              Stability;                                               // 0x0040(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FProjectileShotAngleLimit                           ShotAngleLimit;                                          // 0x004C(0x0014) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MaxSpawnNum;                                             // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnDelayTime;                                          // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInheritanceInstigatorScale : 1;                       // 0x0068(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_835G[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectilePostAttachConfig
	 * Size -> 0x0004
	 */
	struct FSBProjectilePostAttachConfig
	{
	public:
		bool                                                       bIsSameRotatorFromAttach : 1;                            // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCauseHitAttach : 1;                                   // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G639[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileDestroyConditionConfig
	 * Size -> 0x0058
	 */
	struct FProjectileDestroyConditionConfig
	{
	public:
		bool                                                       bIsEnableLifeCheck : 1;                                  // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDMK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LifeTime;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FSBConditionCheckFloatParam>                 AddLifeTimeList;                                         // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		bool                                                       bIsEnableDistanceCheck : 1;                              // 0x0018(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1QYN[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestroyDistance;                                         // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckIntParam>                   DestroyDistanceAdjustList;                               // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsEnableHeightCheck : 1;                                // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableTotalDistance : 1;                              // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T093[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestroyTotalDistance;                                    // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableGroundHitCheck : 1;                             // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableAliveAnimTag : 1;                               // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QQW9[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        AliveAnimTagArray;                                       // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       UnknownData_YP2O : 1;                                    // 0x0050(0x0001) BIT_FIELD (PADDING)
		bool                                                       bIsDestroyTogeghterWithSpawner : 1;                      // 0x0050(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VG8[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileOrderedChainConfig
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FProjectileOrderedChainConfig : public FProjectileChainConfigBase
	{
	public:
		EProjectileOrderedChainType                                OrderedChainType;                                        // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsExclueOtherChainProjectile : 1;                       // 0x0031(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_STL9[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 HandleOfOrderedChainHitProjectile;                       // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileMeshConfig
	 * Size -> 0x0060
	 */
	struct FProjectileMeshConfig
	{
	public:
		unsigned char                                              SetMesh[0x28];                                           // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector                                             Location;                                                // 0x0028(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0034(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0040(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotateSpeed;                                             // 0x004C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsUseInstigatorActiveWeapon : 1;                        // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsUseWeaponIndex : 1;                                   // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HDX4[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSummonImagineConfig
	 * Size -> 0x0040
	 */
	struct FProjectileSummonImagineConfig
	{
	public:
		unsigned char                                              SummonImagineCharacter[0x28];                            // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FVector                                             ImagineCharacterOffsetPos;                               // 0x0028(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XEMG[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USBCharaCreateData*                                  SummonImagineCCD;                                        // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileCameraShake
	 * Size -> 0x0018
	 */
	struct FProjectileCameraShake
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03BZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ShakeClass;                                              // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OSIY[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileGroundCollisionConfig
	 * Size -> 0x000C
	 */
	struct FProjectileGroundCollisionConfig
	{
	public:
		bool                                                       bIsEnableGroundCollision : 1;                            // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsUseBImagineCollisionPreset : 1;                       // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0A3Q[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HalfHeight;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileCollsionConfig
	 * Size -> 0x0060
	 */
	struct FSBProjectileCollsionConfig
	{
	public:
		bool                                                       bEnableAttack : 1;                                       // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableDamaged : 1;                                      // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsUseDamagedCollisionAsBlocking : 1;                    // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePartsHit : 1;                                    // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FX87[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCollisionHitSetting                                HitSetting;                                              // 0x0004(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             CollisionScaleVector;                                    // 0x002C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ScaleVectorFromZero : 1;                                 // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KCTW[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveBase*                                          CollisionScaleCurve;                                     // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCollisionOnOffData>                         CollisionOnOffDataList;                                  // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bIsUseImpactPointExecAttackHit;                          // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3C9[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileCollisionParamBase
	 * Size -> 0x001C
	 */
	struct FProjectileCollisionParamBase
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		ESBProjectileCollisionSpecificUseType                      SpecificUseType;                                         // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBProjectileCollisionSpecificGroup                        SpecificGroup;                                           // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ETC[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSphereCollisionParam
	 * Size -> 0x0014 (FullSize[0x0030] - InheritedSize[0x001C])
	 */
	struct FProjectileSphereCollisionParam : public FProjectileCollisionParamBase
	{
	public:
		float                                                      Radius;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FSBConditionCheckFloatParam>                 ModifyRadiusList;                                        // 0x0020(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileCapsuleCollisionParam
	 * Size -> 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
	 */
	struct FProjectileCapsuleCollisionParam : public FProjectileCollisionParamBase
	{
	public:
		float                                                      Radius;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileBoxCollisionParam
	 * Size -> 0x001C (FullSize[0x0038] - InheritedSize[0x001C])
	 */
	struct FProjectileBoxCollisionParam : public FProjectileCollisionParamBase
	{
	public:
		struct FVector                                             BoxExtent;                                               // 0x001C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FSBConditionCheckFloatParam>                 ModifySizeList;                                          // 0x0028(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileCylinderMeshConfig
	 * Size -> 0x0020
	 */
	struct FProjectileCylinderMeshConfig
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RPUP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckFloatParam>                 ModifyRadiusList;                                        // 0x0008(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		float                                                      Height;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1RWJ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileMeshCollision
	 * Size -> 0x004C (FullSize[0x0068] - InheritedSize[0x001C])
	 */
	struct FSBProjectileMeshCollision : public FProjectileCollisionParamBase
	{
	public:
		ESBProjectileMeshCollisionType                             MeshType;                                                // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XXB[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileCylinderMeshConfig                       CylinderSetting;                                         // 0x0020(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              CustomMeshCollision[0x28];                               // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.BeamCollisionOverrideSection
	 * Size -> 0x0008
	 */
	struct FBeamCollisionOverrideSection
	{
	public:
		float                                                      OverrideSectionEndDist;                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideSectionRadius;                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileDynamicBeamCollision
	 * Size -> 0x0020
	 */
	struct FProjectileDynamicBeamCollision
	{
	public:
		float                                                      BeamCollisionRadius;                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BeamCollisionLength;                                     // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDontExpandBeam : 1;                                     // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B0RD[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BeamCollisionExpandSpeed;                                // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBeamCollisionOverrideSection>               OverrideSectionData;                                     // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileDynamicCollision
	 * Size -> 0x0060
	 */
	struct FProjectileDynamicCollision
	{
	public:
		TArray<struct FProjectileSphereCollisionParam>             SphereArray;                                             // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FProjectileCapsuleCollisionParam>            CapsuleArray;                                            // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FProjectileBoxCollisionParam>                BoxArray;                                                // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSBProjectileMeshCollision>                  MeshArray;                                               // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FProjectileDynamicBeamCollision                     BeamCollision;                                           // 0x0040(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBConditionCheckProjectileAttackID
	 * Size -> 0x0018
	 */
	struct FSBConditionCheckProjectileAttackID
	{
	public:
		struct FSBAttackID                                         ConditionApplyAttackID;                                  // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O04B[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckParam>                      ConditionList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileOverlapStatusAlimentConfig
	 * Size -> 0x0018
	 */
	struct FSBProjectileOverlapStatusAlimentConfig
	{
	public:
		TArray<struct FDataTableRowHandle>                         OverlapStatusAliments;                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		EStatusTargetSide                                          OverlapStatusTargetSide;                                 // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DKGR[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileRapidConfig
	 * Size -> 0x0048
	 */
	struct FProjectileRapidConfig
	{
	public:
		struct FSBProjectileSelectHandle                           RapidProjectileSelectHandle;                             // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    SimultaneousNum;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K13P[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckIntParam>                   SimultaneousNumModifyList;                               // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    RapidNum;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInfiniteRapidNum : 1;                                 // 0x0034(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UT0C[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RapidInterval;                                           // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDestroyWhenCantLaunch : 1;                            // 0x003C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RBUE[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DestroyWhenCantLaunchDelayTime;                          // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTargetSelectRule                                        TargetSelectRule;                                        // 0x0044(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBTargetChangRule                                         TargetChangeRule;                                        // 0x0045(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q03I[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileBeamConfig
	 * Size -> 0x0050
	 */
	struct FProjectileBeamConfig
	{
	public:
		struct FProjectileRapidConfig                              ImpactSpawnProjectile;                                   // 0x0000(0x0048) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EFProjectileBeamDirection                                  BeamDirectionType;                                       // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LED4[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileChainMovementTriggerSetting
	 * Size -> 0x0028
	 */
	struct FSBProjectileChainMovementTriggerSetting
	{
	public:
		class FName                                                ChangeLabel;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ElapsedTime;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isChangeOnHomingTargetArrive : 1;                        // 0x000C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_84M6[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ArriveDist;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TM2P[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        IncludeAnimTagArray;                                     // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileChainMovementConfig
	 * Size -> 0x0030
	 */
	struct FSBProjectileChainMovementConfig
	{
	public:
		struct FSBProjectileChainMovementTriggerSetting            ChainMovementTrigger;                                    // 0x0000(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class USBProjectileChainMovementParamBase*                 ChainMovementParam;                                      // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileWideShotRapidConfig
	 * Size -> 0x0050
	 */
	struct FProjectileWideShotRapidConfig
	{
	public:
		struct FProjectileRapidConfig                              RapidConfig;                                             // 0x0000(0x0048) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      WideRange;                                               // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HYF[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileAreaAttackConfig
	 * Size -> 0x0030
	 */
	struct FProjectileAreaAttackConfig
	{
	public:
		struct FSBProjectileSelectHandle                           RapidProjectileSelectHandle;                             // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    RapidNum;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RapidInterval;                                           // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectiveRadius;                                         // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsUpperSphere : 1;                                      // 0x0024(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAdjustGround : 1;                                     // 0x0024(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A77X[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EProjectileAreaAttackSpawnOrder                            Order;                                                   // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6K5E[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsDestroyWhenCantLaunch : 1;                            // 0x002C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T5NR[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileForecastConfig
	 * Size -> 0x0040
	 */
	struct FProjectileForecastConfig
	{
	public:
		float                                                      ForecastDelayTime;                                       // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOZP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBProjectileSelectHandle                           ForecastSelectProjectile;                                // 0x0008(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      DelayTime;                                               // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NMV6[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBProjectileSelectHandle                           MainSelectProjectile;                                    // 0x0028(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectilePartyShotRapidConfig
	 * Size -> 0x0008
	 */
	struct FProjectilePartyShotRapidConfig
	{
	public:
		EFProjectilePartyShotTargetType                            TargetPartyType;                                         // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsIncludeInstantParty;                                  // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TargetPartyNum;                                          // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y79M[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetPartyDistanceLimit;                                // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileConfigInfo
	 * Size -> 0x0658 (FullSize[0x0660] - InheritedSize[0x0008])
	 */
	struct FSBProjectileConfigInfo : public FTableRowBase
	{
	public:
		EProjectileType                                            ProjectileType;                                          // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_90HF[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              CustomProjectileTemplate[0x28];                          // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		EProjectileNetworkSpawnType                                NetworkSpawnType;                                        // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_06ML[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileSpawnInfo                                SpawnInfo;                                               // 0x003C(0x006C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBProjectilePostAttachConfig                       PostAttachConfig;                                        // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YSZ7[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileDestroyConditionConfig                   DestroyCondition;                                        // 0x00B0(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBProjectileHealthConditionConfig                  HealthConditionConfig;                                   // 0x0108(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsTargetable;                                            // 0x0110(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               TargetClass;                                             // 0x0111(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTargetInstigatorPlayerOnly;                           // 0x0112(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsContinuousUpdateTargetInfo;                           // 0x0113(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZNC[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileSelfDeadChainConfig                      SelfDeadChainConfig;                                     // 0x0118(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileHitChainConfig                           HitChainConfig;                                          // 0x0148(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FProjectileOrderedChainConfig>               OrderedChainConfigList;                                  // 0x01B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 EffectTableHandle;                                       // 0x01C8(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		TArray<struct FSBConditionCheckEffectTableHandle>          ConditionCheckEffectTableHandle;                         // 0x01D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		TArray<struct FProjectileMeshConfig>                       MeshConfigList;                                          // 0x01E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileSummonImagineConfig                      SummonImagineConfig;                                     // 0x01F8(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBProjectileSplashSize                                    SplashSize;                                              // 0x0238(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3RXX[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              NamePlateWidget;                                         // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FProjectileCameraShake>                      CameraShakeList;                                         // 0x0248(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      CameraShakeLimitDistance;                                // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCameraShakeAllPlayer;                                 // 0x025C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QF9F[0x3];                                   // 0x025D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileGroundCollisionConfig                    GroundCollisionConfig;                                   // 0x0260(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8G14[0x4];                                   // 0x026C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBProjectileCollsionConfig                         CollisionConfig;                                         // 0x0270(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileDynamicCollision                         CollisionShape;                                          // 0x02D0(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBAttackID                                         AttackID;                                                // 0x0330(0x0004) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZDPW[0x4];                                   // 0x0334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBConditionCheckProjectileAttackID>         ModifyAttackIDList;                                      // 0x0338(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0348(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitDamage;                                             // 0x0350(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsForceLimitDamage : 1;                                 // 0x0354(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U31D[0x3];                                   // 0x0355(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EDamageSide                                                DamageSideInfo;                                          // 0x0358(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O59T[0x3];                                   // 0x0359(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bTreateFriendByParty : 1;                                // 0x035C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDisableHitTargetLimit : 1;                            // 0x035C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25ON[0x3];                                   // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EReceiveDamageSide                                         ReceiveDamageSideInfo;                                   // 0x0360(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QL9J[0x7];                                   // 0x0361(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDataTableRowHandle>                         StatusAliments;                                          // 0x0368(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         SelfStatusAliments;                                      // 0x0378(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBProjectileOverlapStatusAlimentConfig>     OverlapStatusAlimentConfigs;                             // 0x0388(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileMoveBaseConfig                           MoveBaseConfig;                                          // 0x0398(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileHomingConfig                             MoveHomingConfig;                                        // 0x03D8(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBParabolaMoveParameter                            ParabolaMoveConfig;                                      // 0x0418(0x0034) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBProjectileAlongGroundParameter                   AlongGroundConfig;                                       // 0x044C(0x001C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FProjectileBeamConfig                               BeamConfig;                                              // 0x0468(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBProjectileChainMovementConfig>            ChainMovementConfig;                                     // 0x04B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileRapidConfig                              RapidConfig;                                             // 0x04C8(0x0048) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileWideShotRapidConfig                      WideShotConfig;                                          // 0x0510(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileAreaAttackConfig                         AreaAttackConfig;                                        // 0x0560(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FProjectileForecastConfig                           ForecastConfig;                                          // 0x0590(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FProjectilePartyShotRapidConfig                     PartyShotConfig;                                         // 0x05D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   AkEventConfig;                                           // 0x05D8(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FAkEventVariables                                   EndAkEventConfig;                                        // 0x0618(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FName                                                ProjectileUniqueTag;                                     // 0x0658(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileHitResult
	 * Size -> 0x00A0
	 */
	struct FProjectileHitResult
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class AActor*                                              ShieldHitActor;                                          // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 ShieldHitComponent;                                      // 0x0090(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGuardHit : 1;                                         // 0x0098(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGuardFailed : 1;                                      // 0x0098(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsWeakPointHit : 1;                                     // 0x0098(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZY6[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.DelayValidHitOverlapCauseInfo
	 * Size -> 0x00A8
	 */
	struct FDelayValidHitOverlapCauseInfo
	{
	public:
		unsigned char                                              UnknownData_E1QB[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     HitSelfComp;                                             // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQI7[0x88];                                  // 0x0020(0x0088) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.RawOverlapActorInfo
	 * Size -> 0x0018
	 */
	struct FRawOverlapActorInfo
	{
	public:
		unsigned char                                              UnknownData_LLO3[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.RawOverlapCompCombination
	 * Size -> 0x0010
	 */
	struct FRawOverlapCompCombination
	{
	public:
		class USceneComponent*                                     RawHitSelfComp;                                          // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 RawOtherComp;                                            // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.AkEventSwitch
	 * Size -> 0x0020
	 */
	struct FAkEventSwitch
	{
	public:
		class UAkAudioEvent*                                       Event;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAkSwitch>                                   SWITCH;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		ESBAkEventLOD                                              LOD;                                                     // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QFHB[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayTime;                                               // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CircleEffectParameter
	 * Size -> 0x0010
	 */
	struct FCircleEffectParameter
	{
	public:
		float                                                      CircleRadius;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CircleSoundOffset;                                       // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ShapeEffectParameter
	 * Size -> 0x0014
	 */
	struct FShapeEffectParameter
	{
	public:
		ESBShapeSoundType                                          ShapeSoundType;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8PJJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCircleEffectParameter                              CircleEffectParam;                                       // 0x0004(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileMainEffect
	 * Size -> 0x0138
	 */
	struct FSBProjectileMainEffect
	{
	public:
		float                                                      DelayTime;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XIO7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FParticleParameter                                  ParticleParam;                                           // 0x0008(0x0090) Edit, NativeAccessSpecifierPublic
		struct FEffectActorParameter                               EffectActorParam;                                        // 0x0098(0x0060) Edit, NativeAccessSpecifierPublic
		bool                                                       bIsNotifyWhenGroundHit : 1;                              // 0x00F8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XTQD[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventSwitch                                      AkEventSwitch;                                           // 0x0100(0x0020) Edit, NativeAccessSpecifierPublic
		struct FShapeEffectParameter                               ShapeEffectParam;                                        // 0x0120(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X7L3[0x4];                                   // 0x0134(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileMuzzleEffectConfig
	 * Size -> 0x0088
	 */
	struct FProjectileMuzzleEffectConfig
	{
	public:
		bool                                                       bIsGenerateMuzzleEffect : 1;                             // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M0S9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              MuzzleEffect[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsAttach : 1;                                           // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XV26[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EMuzzleEffectSpawnPosType                                  SpawnType;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMuzzleEffectSpawnRotType                                  SpawnRotType;                                            // 0x0035(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOUK[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SpawnPosOffset;                                          // 0x0040(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            SpawnRotOffset;                                          // 0x004C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsReverseRotation : 1;                                  // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AN3C[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialScale;                                            // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotInheritanceScale : 1;                              // 0x0060(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IP6A[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventSwitch                                      AkEventSwitch;                                           // 0x0068(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSelfDeadEffectConfig
	 * Size -> 0x00A0
	 */
	struct FProjectileSelfDeadEffectConfig
	{
	public:
		bool                                                       bIsGenerateSelfDeadEffect : 1;                           // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R6KO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SelfDeadParticle[0x28];                                  // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsGenerateDurabilityZeroEffect : 1;                     // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q7Q2[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              DurabilityZeroParticle[0x28];                            // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		ESelfDeadEffectSpawnRotType                                SpawnRotType;                                            // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VHUY[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            RotOffset;                                               // 0x0064(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsReverseRotation : 1;                                  // 0x0070(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJUT[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialScale;                                            // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotInheritanceScale : 1;                              // 0x0078(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N4UM[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventSwitch                                      AkEventSwitch;                                           // 0x0080(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileHitEffectConfig
	 * Size -> 0x0080
	 */
	struct FProjectileHitEffectConfig
	{
	public:
		bool                                                       bIsGenerateHitEffect : 1;                                // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N4WI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              HitParticle[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		EHitEffectSpawnPosType                                     SpawnType;                                               // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHitEffectSpawnRotType                                     SpawnRotType;                                            // 0x0031(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3NM5[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             HitEffectOffset;                                         // 0x0034(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableHitPositionGround : 1;                          // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsReverseRotation : 1;                                  // 0x0040(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OKGC[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                HitActorSocketName;                                      // 0x0044(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitActorParameterName;                                   // 0x004C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialScale;                                            // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotInheritanceScale : 1;                              // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M5XK[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventSwitch                                      AkEventSwitch;                                           // 0x0060(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.GroundHitEffectByMaterial
	 * Size -> 0x0078
	 */
	struct FGroundHitEffectByMaterial
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U0VH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              HitParticle[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              HitActor[0x28];                                          // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FAkEventSwitch                                      AkEventSwitch;                                           // 0x0058(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileGroundHitEffectConfig
	 * Size -> 0x0050
	 */
	struct FProjectileGroundHitEffectConfig
	{
	public:
		bool                                                       bIsGenerateGroundHitEffect : 1;                          // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6Z2I[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHitEffectSpawnPosType                                     SpawnPosType;                                            // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHitEffectSpawnRotType                                     SpawnRotType;                                            // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMGM[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             SpawnPosOffset;                                          // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            SpawnRotOffset;                                          // 0x0014(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsAdjustGroundPos : 1;                                  // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsReverseRotation : 1;                                  // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y7TW[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                HitActorSocketName;                                      // 0x0024(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialScale;                                            // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotInheritanceScale : 1;                              // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHW1[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGroundHitEffectByMaterial>                  SwitchEffect;                                            // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsNotExistPlayDefault : 1;                              // 0x0048(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M1PL[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileShieldHitEffectConfig
	 * Size -> 0x0058
	 */
	struct FProjectileShieldHitEffectConfig
	{
	public:
		bool                                                       bIsGenerateHitEffect : 1;                                // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEXC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              HitParticle[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      InitialScale;                                            // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNotInheritanceScale : 1;                              // 0x0034(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FGKL[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventSwitch                                      AkEventSwitch;                                           // 0x0038(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileFoliageReaction
	 * Size -> 0x0038
	 */
	struct FSBProjectileFoliageReaction
	{
	public:
		bool                                                       bSpawnReaction;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachToEffect;                                         // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRepeat;                                                 // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZK7[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RepeatIntervalTime;                                      // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepeatRandomRange;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQTJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBFoliageReactionSpawn                             ReactionSpawnParam;                                      // 0x0010(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileBeamImpactTrailConfig
	 * Size -> 0x0050
	 */
	struct FProjectileBeamImpactTrailConfig
	{
	public:
		bool                                                       bIsTrailDecal : 1;                                       // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JCV1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              DecalMaterial[0x28];                                     // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      PaintDecalLength;                                        // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            PaintDecalOffsetRot;                                     // 0x0034(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             PaintDecalSize;                                          // 0x0040(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PaintDecalLifeTime;                                      // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileBeamEffectConfig
	 * Size -> 0x01B8
	 */
	struct FProjectileBeamEffectConfig
	{
	public:
		ESBProjectileBeamDirectingType                             BeamType;                                                // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CEDI[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TargetVectorName;                                        // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3MO6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BeamParticle[0x28];                                      // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              BeamActor[0x28];                                         // 0x0038(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              BeamEndParticle[0x28];                                   // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bIsGenerateImpactPointParticle : 1;                      // 0x0088(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U3WO[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ImpactPointParticle[0x28];                               // 0x0090(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ImpactPointActor[0x28];                                  // 0x00B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bIsDeactivateImpactPointParticle : 1;                    // 0x00E0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F2SB[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAkEventSwitch                                      ImpactStartAkEventSwitch;                                // 0x00E8(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FAkEventSwitch                                      ImpactEndAkEventSwitch;                                  // 0x0108(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FProjectileBeamImpactTrailConfig                    BeamImpactTrailConfig;                                   // 0x0128(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FAkEventSwitch                                      StartAkEventSwitch;                                      // 0x0178(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FAkEventSwitch                                      EndAkEventSwitch;                                        // 0x0198(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileInfo
	 * Size -> 0x0558 (FullSize[0x0560] - InheritedSize[0x0008])
	 */
	struct FSBProjectileInfo : public FTableRowBase
	{
	public:
		struct FSBProjectileMainEffect                             MainEffectConfig;                                        // 0x0008(0x0138) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileMuzzleEffectConfig                       MuzzleEffectConfig;                                      // 0x0140(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileSelfDeadEffectConfig                     SelfDeadEffectConfig;                                    // 0x01C8(0x00A0) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileHitEffectConfig                          HitEffectConfig;                                         // 0x0268(0x0080) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileGroundHitEffectConfig                    GroundHitEffectConfig;                                   // 0x02E8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileShieldHitEffectConfig                    ShieldHitEffectConfig;                                   // 0x0338(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FSBProjectileFoliageReaction>                SpawnFoliageReactions;                                   // 0x0390(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FProjectileBeamEffectConfig                         BeamEffectConfig;                                        // 0x03A0(0x01B8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBProjectileEffectVisibleType                             ProjectileVisibleType;                                   // 0x0558(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsChangeLightingChannel;                                // 0x0559(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GHP6[0x6];                                   // 0x055A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileHitTargetLimitInfo
	 * Size -> 0x0018
	 */
	struct FSBProjectileHitTargetLimitInfo
	{
	public:
		uint64_t                                                   AuthoritySpawnID;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      HitActorList;                                            // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSaveProjectileSequencerSpawnParam
	 * Size -> 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
	 */
	struct FSBSaveProjectileSequencerSpawnParam : public FSBSaveProjectileBaseSpawnParam
	{
	public:
		struct FProjectileAttachInfo                               AttachInfo;                                              // 0x00B8(0x0040) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              SkillIDPosition;                                         // 0x00F8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OP4T[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SkillId;                                                 // 0x00FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileShareHitOverlap
	 * Size -> 0x0010
	 */
	struct FSBProjectileShareHitOverlap
	{
	public:
		class AActor*                                              HitActor;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemainReHitTime;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CICD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileShareHitKeyConfig
	 * Size -> 0x0048
	 */
	struct FSBProjectileShareHitKeyConfig
	{
	public:
		struct FDataTableRowHandle                                 ShareProjectileConfigHandle;                             // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPublic
		EProjectileShareGroup                                      ShareGroup;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W39T[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EnableShareHitTime;                                      // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemainEnableShareHitTime;                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2QER[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Instigator;                                              // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Spawner;                                                 // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   AuthoritySpawnerSpawnID;                                 // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBProjectileShareHitOverlap>                OverlapHitDisableActorList;                              // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileEffectParamVector
	 * Size -> 0x0014
	 */
	struct FProjectileEffectParamVector
	{
	public:
		class FName                                                VectorParamName;                                         // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 VectorParam;                                             // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileEffectParamActor
	 * Size -> 0x0008
	 */
	struct FProjectileEffectParamActor
	{
	public:
		class FName                                                ActorParamName;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileEffectParam
	 * Size -> 0x0038
	 */
	struct FProjectileEffectParam
	{
	public:
		bool                                                       bRequestAuthorityLocalSpawn : 1;                         // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlreadySpawnEffect : 1;                                 // 0x0000(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KIB1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FProjectileEffectParamVector>                VectorParamArray;                                        // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class AActor*                                              ActorParamTarget;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FProjectileEffectParamActor>                 ActorParamArray;                                         // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4KPF[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCustomParam_SpawnEmitterByProjectileID
	 * Size -> 0x0050
	 */
	struct FSBCustomParam_SpawnEmitterByProjectileID
	{
	public:
		struct FProjectileEffectParam                              EffectParam;                                             // 0x0000(0x0038) NativeAccessSpecifierPublic
		struct FRotator                                            Rot;                                                     // 0x0038(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ScaleValue;                                              // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhysicalSurface                                           Surface;                                                 // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAttribute                                               OverrideElementType;                                     // 0x0049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DNAP[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRequiredParam_SpawnEmitterByProjectileID
	 * Size -> 0x0020
	 */
	struct FSBRequiredParam_SpawnEmitterByProjectileID
	{
	public:
		class UDataTable*                                          Table;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     KeyIndex;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EProjectileEffectType                                      Type;                                                    // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBEffectVisibleType                                       VisibleType;                                             // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LSR7[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize                                 Pos;                                                     // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoDestroy;                                            // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHeal;                                                   // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XV6F[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileDelayPlay
	 * Size -> 0x0150
	 */
	struct FProjectileDelayPlay
	{
	public:
		unsigned char                                              UnknownData_WI7D[0x150];                                 // 0x0000(0x0150) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileDebugTickableConfig
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBProjectileDebugTickableConfig : public FTableRowBase
	{
	public:
		class UClass*                                              Object;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectilePreMarkedTarget
	 * Size -> 0x0010
	 */
	struct FSBProjectilePreMarkedTarget
	{
	public:
		bool                                                       bIsValidTarget : 1;                                      // 0x0000(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsUseDummyTarget : 1;                                   // 0x0000(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9AOL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             TargetPos;                                               // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPredictProjectilePoint
	 * Size -> 0x0030
	 */
	struct FSBPredictProjectilePoint
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Normal;                                                  // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeltaTime;                                               // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitGround : 1;                                          // 0x002C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitActor : 1;                                           // 0x002C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitInRange : 1;                                         // 0x002C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9279[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectilePredictParameter
	 * Size -> 0x0020
	 */
	struct FProjectilePredictParameter
	{
	public:
		TArray<class APawn*>                                       PredictCharaList;                                        // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                              ReachTimeList;                                           // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectilePreCalcDirection
	 * Size -> 0x0090
	 */
	struct FSBProjectilePreCalcDirection
	{
	public:
		unsigned char                                              UnknownData_32CI[0x90];                                  // 0x0000(0x0090) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.LineEffectPointParameter
	 * Size -> 0x0018
	 */
	struct FLineEffectPointParameter
	{
	public:
		struct FVector                                             StartPointOffset;                                        // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndPointOffset;                                          // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileCacheHandle
	 * Size -> 0x0038
	 */
	struct FSBProjectileCacheHandle
	{
	public:
		uint32_t                                                   CacheID;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Owner;                                                   // 0x000C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Spawner;                                                 // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2BL[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBProjectileSelectHandle                           LaunchHandle;                                            // 0x0020(0x0018) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSpawnRapidParameter
	 * Size -> 0x0038
	 */
	struct FProjectileSpawnRapidParameter
	{
	public:
		struct FVector_NetQuantize                                 TransLocation;                                           // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            TransRotator;                                            // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           Direction;                                               // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NFTX[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    RequestAuthorityID;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3CW1[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSpawnRequiredParameter
	 * Size -> 0x0058
	 */
	struct FProjectileSpawnRequiredParameter
	{
	public:
		struct FSBProjectileSelectHandle                           Handle;                                                  // 0x0000(0x0018) NoDestructor, NativeAccessSpecifierPublic
		class AActor*                                              Spawner;                                                 // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              LastHitActor;                                            // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProjectileTargetInfoSet                            TargetInfoSet;                                           // 0x0028(0x0020) ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      IgnoreHitActorList;                                      // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileChargeParam
	 * Size -> 0x0020
	 */
	struct FSBProjectileChargeParam
	{
	public:
		EProjectileChargeLevel                                     ChargeLevel;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CJ8R[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScaleVelocity;                                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleCollision;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleDamage;                                             // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 SwitchEffect;                                            // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectileCharge
	 * Size -> 0x0008
	 */
	struct FSBProjectileCharge
	{
	public:
		EProjectileChargeLevel                                     ChargeLevel;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M2HH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChargeRate;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileSpawnNonTargetAction
	 * Size -> 0x0008
	 */
	struct FProjectileSpawnNonTargetAction
	{
	public:
		EProjectileNonTargetAction                                 NonTargetAction;                                         // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_95WR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NonTargetSpawnDistanceFront;                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ProjectileWideShotConfig
	 * Size -> 0x0004
	 */
	struct FProjectileWideShotConfig
	{
	public:
		unsigned char                                              UnknownData_JC46[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPtAltEffectHolder
	 * Size -> 0x0010
	 */
	struct FSBEnemyPtAltEffectHolder
	{
	public:
		class UParticleSystemComponent*                            Effect;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              EffectActor;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPtAltParticleEffect
	 * Size -> 0x0060
	 */
	struct FSBEnemyPtAltParticleEffect
	{
	public:
		unsigned char                                              Particle[0x28];                                          // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                AttachSocketName;                                        // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorParameterName;                                      // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0038(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0044(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0050(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ODHQ[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPtAltEffectActor
	 * Size -> 0x0058
	 */
	struct FSBEnemyPtAltEffectActor
	{
	public:
		unsigned char                                              EffectActor[0x28];                                       // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class FName                                                AttachSocketName;                                        // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x0030(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x003C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0048(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Y0K[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPtAltEffect
	 * Size -> 0x00B8
	 */
	struct FSBEnemyPtAltEffect
	{
	public:
		struct FSBEnemyPtAltParticleEffect                         ParticleEffect;                                          // 0x0000(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBEnemyPtAltEffectActor                            EffectActor;                                             // 0x0060(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyPtAltEffectTableRow
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FSBEnemyPtAltEffectTableRow : public FTableRowBase
	{
	public:
		struct FSBEnemyPtAltEffect                                 PtAltEffect;                                             // 0x0008(0x00B8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.CompleteQuestDelegateParam
	 * Size -> 0x00D8
	 */
	struct FCompleteQuestDelegateParam
	{
	public:
		int32_t                                                    QuestIndex;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4NE8[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAcceptedQuestInfo                                  AcceptedQuestInfo;                                       // 0x0008(0x0060) NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Money;                                                   // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Energy;                                                  // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJFU[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, int32_t>                                     Items;                                                   // 0x0078(0x0050) NativeAccessSpecifierPublic
		TArray<struct FUnlockedQuestInfo>                          UnlockQuests;                                            // 0x00C8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.QuestUnlockConditionItem
	 * Size -> 0x0034
	 */
	struct FQuestUnlockConditionItem
	{
	public:
		unsigned char                                              UnknownData_49DK[0x34];                                  // 0x0000(0x0034) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBQuestAdditionalRewardUIInfo
	 * Size -> 0x0018
	 */
	struct FSBQuestAdditionalRewardUIInfo
	{
	public:
		int32_t                                                    ClearCount;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0G9C[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRewardInfo>                                 RewardInfos;                                             // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBQuestPreconditionUIInfo
	 * Size -> 0x0018
	 */
	struct FSBQuestPreconditionUIInfo
	{
	public:
		class FString                                              ConditionString;                                         // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsConditionSatisfied;                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YTL3[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDungeonProgressItemUIInfo
	 * Size -> 0x0030
	 */
	struct FSBDungeonProgressItemUIInfo
	{
	public:
		EDungeonClearConditionType                                 ConditionType;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T7TM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ConditionString;                                         // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProgressString;                                          // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_28DH[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBQuestProgressItemUIInfo
	 * Size -> 0x0030
	 */
	struct FSBQuestProgressItemUIInfo
	{
	public:
		EQuestConditionType                                        ConditionType;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPLS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ConditionString;                                         // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProgressString;                                          // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2MX1[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.QuestConditionStepData
	 * Size -> 0x0030
	 */
	struct FQuestConditionStepData
	{
	public:
		unsigned char                                              UnknownData_RILB[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleActiveTime
	 * Size -> 0x0020
	 */
	struct FSBRaidBattleActiveTime
	{
	public:
		class FString                                              StartDate;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EndDate;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleSettingData
	 * Size -> 0x00A8
	 */
	struct FSBRaidBattleSettingData
	{
	public:
		struct FSBRaidBattleMasterData                             MasterData;                                              // 0x0000(0x0080) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0080(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBMasterReward>                             RewardList;                                              // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsRaidMasterSet;                                         // 0x00A0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsMapMasterSet;                                          // 0x00A1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AFLB[0x6];                                   // 0x00A2(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRaidBattleData
	 * Size -> 0x0098
	 */
	struct FSBRaidBattleData
	{
	public:
		unsigned char                                              UnknownData_ELCX[0x98];                                  // 0x0000(0x0098) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRandomLightMaterialPreviewParams
	 * Size -> 0x0018
	 */
	struct FSBRandomLightMaterialPreviewParams
	{
	public:
		class UMaterialInstanceDynamic*                            MaterialInstance;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParameterName;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Intensity;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YC26[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSaveRangedProjectileSpawnParam
	 * Size -> 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
	 */
	struct FSBSaveRangedProjectileSpawnParam : public FSBSaveProjectileBaseSpawnParam
	{
	public:
		struct FVector                                             Direction;                                               // 0x00B8(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialSpeed;                                            // 0x00C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PenetrateTime;                                           // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkillIDPosition;                                         // 0x00CC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W1N5[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SkillId;                                                 // 0x00D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5ZTD[0x14];                                  // 0x00D4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileAttachInfo                               AttachInfo;                                              // 0x00E8(0x0040) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRegionData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBRegionData : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NameTextId;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2O3G[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        Maps;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRepGraphFrequencyDistConfig
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBRepGraphFrequencyDistConfig : public FTableRowBase
	{
	public:
		class UCurveFloat*                                         FrequencyDistCurve;                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRepTargetInfoForPlayer
	 * Size -> 0x0020
	 */
	struct FSBRepTargetInfoForPlayer
	{
	public:
		TWeakObjectPtr<class AActor>                               TargetActor;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SBE4[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRepTargetController
	 * Size -> 0x0020
	 */
	struct FSBRepTargetController
	{
	public:
		TArray<struct FSBRepTargetInfoForPlayer>                   TargetList;                                              // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7Y0I[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSyncImportantInfoForPlayer
	 * Size -> 0x0028 (FullSize[0x0048] - InheritedSize[0x0020])
	 */
	struct FSBSyncImportantInfoForPlayer : public FSBRepTargetController
	{
	public:
		TWeakObjectPtr<class AActor>                               Player;                                                  // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZIL5[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerSyncImportantParam
	 * Size -> 0x0020
	 */
	struct FSBPlayerSyncImportantParam
	{
	public:
		unsigned char                                              UnknownData_A5YC[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerStatePrimaryRepForCity
	 * Size -> 0x0014
	 */
	struct FSBPlayerStatePrimaryRepForCity
	{
	public:
		unsigned char                                              UnknownData_L2QX[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class APlayerState>                         State;                                                   // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W5FJ[0x8];                                   // 0x000C(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBDebugPostDataType
	 * Size -> 0x0038
	 */
	struct FSBDebugPostDataType
	{
	public:
		ESBDebugPostDataType                                       Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JG3G[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Key;                                                     // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StringValue;                                             // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IntegerValue;                                            // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NumberValue;                                             // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BooleanValue;                                            // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHHV[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRichTextShortSyntaxData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBRichTextShortSyntaxData : public FTableRowBase
	{
	public:
		class FString                                              ShortText;                                               // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActualText;                                              // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBCouponCreatedData
	 * Size -> 0x0040
	 */
	struct FSBCouponCreatedData
	{
	public:
		int32_t                                                    CampaignId;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Enabled;                                                 // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HINE[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ExtendedDeadline;                                        // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AuthCode;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IssuerID;                                                // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           Created;                                                 // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           Updated;                                                 // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPaymentData
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBPaymentData : public FTableRowBase
	{
	public:
		int32_t                                                    PaymentId;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NameTextId;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DescTextId;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PaymentKey;                                              // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I87D[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Icon[0x28];                                              // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBProductData
	 * Size -> 0x00C0 (FullSize[0x00D8] - InheritedSize[0x0018])
	 */
	struct FSBProductData : public FSBShopItem
	{
	public:
		int32_t                                                    ShopItemId;                                              // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03L7[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemName;                                                // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemPosition;                                            // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            CategoryId;                                              // 0x0038(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              ItemDescription;                                         // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemCaution;                                             // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CoinCaution;                                             // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Thumbnail[0x28];                                         // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    TextureId;                                               // 0x00A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4CQ9[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           StartDate;                                               // 0x00A8(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x00B0(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LimitNum;                                                // 0x00B8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredRank;                                            // 0x00BC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RequiredPoints;                                          // 0x00C0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableCoupon;                                            // 0x00C4(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5HIE[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Ribbon;                                                  // 0x00C8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PeriodRibbon;                                            // 0x00CC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CautionGender;                                           // 0x00D0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PaidOnly;                                                // 0x00D4(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G7NV[0x3];                                   // 0x00D5(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRmShopHistory
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBRmShopHistory : public FTableRowBase
	{
	public:
		class FString                                              Explanation;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRouteGuideLevelLinkSearch
	 * Size -> 0x0014
	 */
	struct FSBRouteGuideLevelLinkSearch
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRouteGuideArea                                          RouteGuideArea;                                          // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZLQ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SearchDepth;                                             // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRouteGuideDestinationLevelLink
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBRouteGuideDestinationLevelLink : public FTableRowBase
	{
	public:
		class FName                                                DepartureLevelName;                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DestinationLevelName;                                    // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0018(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRouteGuideArea                                          RouteGuideArea;                                          // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QAOX[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBRouteGuideDestinationList
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBRouteGuideDestinationList : public FTableRowBase
	{
	public:
		class FName                                                DestinationLevelName;                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          DestinationTable;                                        // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRouteGuideDestination
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBRouteGuideDestination : public FTableRowBase
	{
	public:
		class FName                                                DestinationActorTag;                                     // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBRouteGuideArea                                          Layer;                                                   // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DOUP[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTexelColorInfo
	 * Size -> 0x000C
	 */
	struct FSBTexelColorInfo
	{
	public:
		int32_t                                                    X;                                                       // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Y;                                                       // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBRouteGuideAreaPoly
	 * Size -> 0x0020
	 */
	struct FSBRouteGuideAreaPoly
	{
	public:
		TArray<struct FVector2D>                                   Vertex;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector                                             Center;                                                  // 0x0010(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_52E6[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBScbMasterData
	 * Size -> 0x0024
	 */
	struct FSBScbMasterData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBClassType                                               ClassType;                                               // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C22G[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddSTR;                                                  // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddVIT;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddDEX;                                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddINT;                                                  // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddMND;                                                  // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AddHp;                                                   // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScenarioFlagData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBScenarioFlagData : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScriptDefineData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBScriptDefineData : public FTableRowBase
	{
	public:
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBScriptVariableType                                      Type;                                                    // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZESQ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value;                                                   // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScriptRequestInfo
	 * Size -> 0x00B0
	 */
	struct FSBScriptRequestInfo
	{
	public:
		struct FSBScriptActorCreateDesc                            CreateDesc;                                              // 0x0000(0x00A0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class AActor*                                              Owner;                                                   // 0x00A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForce;                                                  // 0x00A8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T5YE[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBScriptActorActionData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBScriptActorActionData : public FTableRowBase
	{
	public:
		TArray<class FName>                                        TransitionCommands;                                      // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSeasonPassQuestUpdateData
	 * Size -> 0x0028
	 */
	struct FSBSeasonPassQuestUpdateData
	{
	public:
		class FString                                              QuestID;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GroupId;                                                 // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Progress;                                                // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAchieve;                                               // 0x0024(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRewarded;                                              // 0x0025(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NZ2Z[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTermsOfService
	 * Size -> 0x0048
	 */
	struct FSBTermsOfService
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Explanation;                                             // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Contents;                                                // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBOperationInformation
	 * Size -> 0x0030
	 */
	struct FSBOperationInformation
	{
	public:
		class FText                                                Body;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Date;                                                    // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ShopItemMasterData
	 * Size -> 0x0018
	 */
	struct FShopItemMasterData
	{
	public:
		class FName                                                TableName;                                               // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FShopItemInfo>                               ItemInfoList;                                            // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.ShopPurchaseItemInfo
	 * Size -> 0x000C
	 */
	struct FShopPurchaseItemInfo
	{
	public:
		EItemType                                                  ItemType;                                                // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XM9W[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemIndex;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemAmount;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBShortcutRingCommandData
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBShortcutRingCommandData : public FTableRowBase
	{
	public:
		bool                                                       bEnable;                                                 // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EShortcutIconCommandID                                     ID;                                                      // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8C7K[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          IconTexture;                                             // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   TextTableAssetData;                                      // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TextId;                                                  // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USBTextTableAsset*                                   ToolTipTextTableAssetData;                               // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ToolTipTextId;                                           // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSkySphereLightSource
	 * Size -> 0x0038
	 */
	struct FSBSkySphereLightSource
	{
	public:
		class UCurveLinearColor*                                   LightColor;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         LightIntensity;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         ToonIntensityScale;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADirectionalLight*                                   DirectionalLightActor;                                   // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SunDiskPitch;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SunDiskYaw;                                              // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTimeMin;                                         // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTimeMax;                                         // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundSpeed;                                              // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundOffset;                                             // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBImagineSoundDataTableRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBImagineSoundDataTableRow : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_CM0X[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EnemyType;                                               // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActionName;                                              // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDemoEndSoundSetting
	 * Size -> 0x0058
	 */
	struct FSBDemoEndSoundSetting
	{
	public:
		unsigned char                                              DemoEndEvent[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       IsMuteBGMAfterDemoEndToChangeMap;                        // 0x0028(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_266H[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnMuteEventOfChangeMap[0x28];                            // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBDemoSoundDataSetting
	 * Size -> 0x00A8
	 */
	struct FSBDemoSoundDataSetting
	{
	public:
		unsigned char                                              DemoStartEvent[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FSBDemoEndSoundSetting                              DemoEndSetting;                                          // 0x0028(0x0058) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              DemoSkipEvent[0x28];                                     // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBDemoSoundDataTableRow
	 * Size -> 0x0170 (FullSize[0x0178] - InheritedSize[0x0008])
	 */
	struct FSBDemoSoundDataTableRow : public FTableRowBase
	{
	public:
		class FString                                              SequenceAssetName;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBDemoSoundDataSetting                             ScenarioDemoData;                                        // 0x0018(0x00A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBDemoSoundDataSetting                             TheaterDemoData;                                         // 0x00C0(0x00A8) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              EventsOfNotMediaLoaded[0x10];                            // 0x0168(0x0010) UNKNOWN PROPERTY: ArrayProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBCostumeMaterialActorTableRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBCostumeMaterialActorTableRow : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_V3ZI[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBCostumeMaterial                                         Upper;                                                   // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCostumeMaterial                                         Lower;                                                   // 0x0011(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCostumeMaterial                                         Shoes;                                                   // 0x0012(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T9SE[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBCostumeMaterialTableRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBCostumeMaterialTableRow : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_E3CA[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharaPartsName;                                          // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SkeletalMeshName;                                        // 0x0020(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCostumeMaterial                                         Upper;                                                   // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCostumeMaterial                                         Lower;                                                   // 0x0031(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBCostumeMaterial                                         Shoes;                                                   // 0x0032(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KV3Z[0x5];                                   // 0x0033(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBVoiceEffectCharaPartsNameTableRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBVoiceEffectCharaPartsNameTableRow : public FTableRowBase
	{
	public:
		class FName                                                CharaPartsName;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnable;                                               // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8SLE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBBuddyVoiceEventData
	 * Size -> 0x0048
	 */
	struct FSBBuddyVoiceEventData
	{
	public:
		bool                                                       IsCommon;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1RB9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapId;                                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDungeonNormal;                                         // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZ4S[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Event[0x28];                                             // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBBuddyVoiceEventTableRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBBuddyVoiceEventTableRow : public FTableRowBase
	{
	public:
		class FName                                                ConditionId;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBBuddyVoiceEventData>                      EventData;                                               // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBUniqueEnemyVoiceTableRow
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBUniqueEnemyVoiceTableRow : public FTableRowBase
	{
	public:
		class FString                                              EnemyId;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VoiceType;                                               // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyVoiceEventTableRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBEnemyVoiceEventTableRow : public FTableRowBase
	{
	public:
		class UAkAudioEvent*                                       Event;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBEnemyTypeSwitchTableRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBEnemyTypeSwitchTableRow : public FTableRowBase
	{
	public:
		TArray<class FString>                                      EnemyTypeList;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              SwitchGroup;                                             // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VoiceTypeList;                                           // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBPlayerVoiceSkillTableRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBPlayerVoiceSkillTableRow : public FTableRowBase
	{
	public:
		int32_t                                                    SkillId;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillLevel;                                              // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillCount;                                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillChargeLevel;                                        // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Event;                                                   // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSoundEnemyIdTableRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBSoundEnemyIdTableRow : public FTableRowBase
	{
	public:
		class FString                                              AppearanceId;                                            // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharaBPId;                                               // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SoundId;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWindSoundTableRow
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FSBWindSoundTableRow : public FTableRowBase
	{
	public:
		unsigned char                                              WindParticle[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UAkAudioEvent*                                       StartEvent;                                              // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       EndEvent;                                                // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBScriptSEData
	 * Size -> 0x0060
	 */
	struct FSBScriptSEData
	{
	public:
		class UAkAudioEvent*                                       Event;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Actor;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8ZE8[0x50];                                  // 0x0010(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBScriptSETableRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBScriptSETableRow : public FTableRowBase
	{
	public:
		unsigned char                                              Event[0x28];                                             // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBSystemSETableRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBSystemSETableRow : public FTableRowBase
	{
	public:
		unsigned char                                              Event[0x28];                                             // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBResidentAkEventTableRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBResidentAkEventTableRow : public FTableRowBase
	{
	public:
		class UAkAudioEvent*                                       Event;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBIvyPlacementInstanceSetting
	 * Size -> 0x0020
	 */
	struct FSBIvyPlacementInstanceSetting
	{
	public:
		float                                                      TrackBank;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TrackWidth;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TrackThickness;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VPIB[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         ChangeTrackMesh;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyTrackForwardAxis;                          // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESplineMeshAxis                                            TrackForwardAxis;                                        // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EIUV[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTrackGeneraterInstanceSetting
	 * Size -> 0x0048
	 */
	struct FSBTrackGeneraterInstanceSetting
	{
	public:
		bool                                                       IsIndividuallyLeftGuardRailVisible;                      // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LeftGuardRailVisible;                                    // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyRightGuardRailVisible;                     // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RightGuardRailVisible;                                   // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TrackBank;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TrackWidth;                                              // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TrackThickness;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyLeftGuardRailLocationOffset;               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QOMJ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LeftGuardRailLocationOffset;                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyRightGuardRailLocationOffset;              // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TF09[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RightGuardRailLocationOffset;                            // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyLeftGuardRailMeshReverse;                  // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LeftGuardRailMeshReverse;                                // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyRightGuardRailMeshReverse;                 // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RightGuardRailMeshReverse;                               // 0x0023(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G2A0[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         ChangeTrackMesh;                                         // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         ChangeLeftGuardRailMesh;                                 // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         ChangeRightGuardRailMesh;                                // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyTrackForwardAxis;                          // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESplineMeshAxis                                            TrackForwardAxis;                                        // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyLeftGuardRailForwardAxis;                  // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESplineMeshAxis                                            LeftGuardRailForwardAxis;                                // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsIndividuallyRightGuardRailForwardAxis;                 // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESplineMeshAxis                                            RightGuardRailForwardAxis;                               // 0x0045(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JWR4[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBSplineMeshInstanceSetting
	 * Size -> 0x0020
	 */
	struct FSBSplineMeshInstanceSetting
	{
	public:
		int32_t                                                    SplineMeshIndex;                                         // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SplineMeshDistance;                                      // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SplineMeshLocation;                                      // 0x0008(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            SplineMeshRotation;                                      // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBStackBPerk
	 * Size -> 0x0030
	 */
	struct FSBStackBPerk
	{
	public:
		class FString                                              UniqueId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBCharacterWeaponPerkData                          Perk;                                                    // 0x0010(0x001C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I9XZ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBStampCategoryData
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSBStampCategoryData : public FTableRowBase
	{
	public:
		int32_t                                                    CategoryId;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FUB8[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              IconTexture[0x28];                                       // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBStampData
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FSBStampData : public FTableRowBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1G3N[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Texture[0x28];                                           // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              IconTexture[0x28];                                       // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              Voice[0x28];                                             // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBStatusAlimentConfig
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FSBStatusAlimentConfig : public FTableRowBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IncidenceRate;                                           // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBAbilityParts>                             Parts;                                                   // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		ESBBattleEffectiveGroup                                    BattleEffectiveGroup;                                    // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilityFlags                                            Flag;                                                    // 0x0021(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBAbilityExpirationType                                   ExpirationType;                                          // 0x0022(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JWCT[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EffectiveTime;                                           // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBConditionCheckFloatParam>                 AdditionalEffectiveTimeList;                             // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    ExpirationValue;                                         // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O8E5[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAbilityConditionInfo>                     TriggerCondisions;                                       // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bTriggerCondIsContinueCond : 1;                          // 0x0050(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QO4H[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAbilityConditionInfo>                     FinishCondisions;                                        // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		EStatusAilmentDuplicateType                                DuplicateType;                                           // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBBattleEffectiveFeel                                     FeelType;                                                // 0x0069(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GUK2[0x2];                                   // 0x006A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bExcludeBadConditionHitOnFeelNegative : 1;               // 0x006C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExcludeExtendTimeOnFeelNegative : 1;                    // 0x006C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GEJB[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HateScale;                                               // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSBBattleStatusProjectileID                         ProjectileId;                                            // 0x0074(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FSBBattleStatusEffectID                             EffectId;                                                // 0x007C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bHideDamageUI;                                           // 0x0084(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H5UI[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bVisibleIcon : 1;                                        // 0x0088(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5G72[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESBStatusAilmentIconType                                   IconType;                                                // 0x008C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBStatusAilmentIconCombineCategory                        IconCombineCategory;                                     // 0x008D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QT2W[0x2];                                   // 0x008E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardCondition
	 * Size -> 0x0038
	 */
	struct FSBAdventureBoardCondition
	{
	public:
		class FString                                              Condition;                                               // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Progress;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MissonId;                                                // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Complated;                                               // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEXC[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OrderPriority;                                           // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAdventureBoardInfo
	 * Size -> 0x0018
	 */
	struct FSBAdventureBoardInfo
	{
	public:
		struct FSBTextTableHash                                    NameId;                                                  // 0x0000(0x0004) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AGOF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSBAdventureBoardCondition>                  ConditionList;                                           // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBLevelTerm
	 * Size -> 0x0018
	 */
	struct FSBLevelTerm
	{
	public:
		class FName                                                LevelName;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TermId;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSublevelLoad
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBSublevelLoad : public FTableRowBase
	{
	public:
		TArray<struct FSBLevelTerm>                                Sublevels;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBApartItem
	 * Size -> 0x0014
	 */
	struct FSBApartItem
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UDBX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNew;                                                    // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MFK6[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StackB;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTelopOverrideData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBTelopOverrideData : public FTableRowBase
	{
	public:
		ESBTelopPlayType                                           PlayType;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9WBA[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBTelopPlayType>                                   AbortType;                                               // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTextTableAssetData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBTextTableAssetData : public FTableRowBase
	{
	public:
		unsigned char                                              Asset[0x28];                                             // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct SkyBlue.SBProjectTextVersion
	 * Size -> 0x0001
	 */
	struct FSBProjectTextVersion
	{
	public:
		unsigned char                                              UnknownData_F66N[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTickerMessageInfo
	 * Size -> 0x0030
	 */
	struct FSBTickerMessageInfo
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WE5E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Text;                                                    // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartTime;                                               // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndTime;                                                 // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MessageSpeed;                                            // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WUA[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBTowerChallengeData
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBTowerChallengeData : public FTableRowBase
	{
	public:
		ETowerChallengeAchieveType                                 Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NUKK[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value1;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value2;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitTime;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I6KF[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                 ChallengeRegulationHandle;                               // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTraverseDungeonInfo
	 * Size -> 0x001C
	 */
	struct FSBTraverseDungeonInfo
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Size;                                                    // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Floor;                                                   // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TraverseName;                                            // 0x0014(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBTraversePointDataTable
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBTraversePointDataTable : public FTableRowBase
	{
	public:
		class FName                                                MapId;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AreaId;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Floor;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7RSR[0xC];                                   // 0x001C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          Texture;                                                 // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MapPosition;                                             // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Size;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextMap;                                                 // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDirectChatSenderLogData
	 * Size -> 0x0038
	 */
	struct FSBDirectChatSenderLogData
	{
	public:
		class FString                                              DirectChatName;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DirectChatPlayerID;                                      // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DirectChatCharacterID;                                   // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           DirectChatPrivilegeType;                                 // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ENJ[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBChatSenderData
	 * Size -> 0x0050
	 */
	struct FSBChatSenderData
	{
	public:
		ESBChatLogType                                             ChatLogType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CUF1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DirectChatName;                                          // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DirectChatPlayerID;                                      // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DirectChatCharacterID;                                   // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DirectChatShortID;                                       // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESBPrivilegeType                                           ChatPrivilegeType;                                       // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HH4U[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBVersionData
	 * Size -> 0x0020
	 */
	struct FSBVersionData
	{
	public:
		int32_t                                                    MajorVersion;                                            // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinorVersion;                                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReleaseVersion;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_COF3[0x14];                                  // 0x000C(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityMasteringProgress
	 * Size -> 0x001C
	 */
	struct FSBWarehouseAbilityMasteringProgress
	{
	public:
		ESBWarehouseAbilityConditionType                           ConditionType;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NE0P[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TargetId;                                                // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentValue;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClearValue;                                              // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TriggerValue;                                            // 0x0014(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWarehouseAbilityCondition
	 * Size -> 0x0018
	 */
	struct FSBWarehouseAbilityCondition
	{
	public:
		ESBWarehouseAbilityConditionType                           Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CVUM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TargetId;                                                // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TriggerValue;                                            // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.WarpCostDestData
	 * Size -> 0x000C
	 */
	struct FWarpCostDestData
	{
	public:
		class FName                                                DestMapName;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cost;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.WarpCostData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FWarpCostData : public FTableRowBase
	{
	public:
		TArray<struct FWarpCostDestData>                           DestData;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.WarpPointMasterData
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FWarpPointMasterData : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Portal;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           LocationXY;                                              // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isLocal;                                                 // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XW1T[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponBallHammerSettings
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FSBWeaponBallHammerSettings : public FTableRowBase
	{
	public:
		unsigned char                                              BallSkeletalMesh[0x28];                                  // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                BallRootSocketName;                                      // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BallMaterialIndexList;                                   // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponLevelStatusPatternMasterData
	 * Size -> 0x0018
	 */
	struct FSBWeaponLevelStatusPatternMasterData
	{
	public:
		class FName                                                PatternId;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSBWeaponLevelStatusMasterData>              LevelStatus;                                             // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBSyntheTokenData
	 * Size -> 0x0010
	 */
	struct FSBSyntheTokenData
	{
	public:
		ESBTokenConsumeType                                        ConsumeType;                                             // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WD04[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SlotNum;                                                 // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FreeTokenCost;                                           // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PaidTokenCost;                                           // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponAssetData
	 * Size -> 0x0170 (FullSize[0x0178] - InheritedSize[0x0008])
	 */
	struct FSBWeaponAssetData : public FTableRowBase
	{
	public:
		bool                                                       IsTwinWeapon;                                            // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTwinWeaponAssetDiff;                                   // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NUWW[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSBWeaponAsset                                      WeaponAsset1;                                            // 0x0010(0x00B0) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FSBWeaponAsset                                      WeaponAsset2;                                            // 0x00C0(0x00B0) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_795O[0x8];                                   // 0x0170(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponMaterialParam
	 * Size -> 0x0034
	 */
	struct FSBWeaponMaterialParam
	{
	public:
		struct FLinearColor                                        EdgeColor01;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        EdgeColor02;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        EdgeEmissiveColor;                                       // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EdgeEmissiveStrength;                                    // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBDefaultWeaponParam
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSBDefaultWeaponParam : public FTableRowBase
	{
	public:
		int32_t                                                    Status_AP;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_CP;                                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_STR;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_VIT;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_DEX;                                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_INT;                                              // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_MND;                                              // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_ATTR;                                             // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Status_SPC;                                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_89LD[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBWeaponPerkUIInfo
	 * Size -> 0x0020
	 */
	struct FSBWeaponPerkUIInfo
	{
	public:
		class FString                                              NameText;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DescText;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWordData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSBWordData : public FTableRowBase
	{
	public:
		class FString                                              BodyText;                                                // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RubyText;                                                // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBWorldUIDataTable
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSBWorldUIDataTable : public FTableRowBase
	{
	public:
		ESBWorldUIType                                             WorldUIType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DDE[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESBUIType>                                          DisableUIType;                                           // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBAkEventLODTableRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSBAkEventLODTableRow : public FTableRowBase
	{
	public:
		ESBAkEventLOD                                              LOD;                                                     // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4UP4[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Distance;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct SkyBlue.SBZoneData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSBZoneData : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NameTextId;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MP0H[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct SkyBlue.SBLuckyChanceMaster
	 * Size -> 0x0008
	 */
	struct FSBLuckyChanceMaster
	{
	public:
		int32_t                                                    StackBNum;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
